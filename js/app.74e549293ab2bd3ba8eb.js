webpackJsonp([0],[function(t,e,n){"use strict";var s=n(1),a=n(111),o=n(259),r=n(328),i=n(112),l=n(349),c=n(386),p=n(399),d=n(400),h=n(401),u=n(431),m=n(478),f="production"==={ENV:"build"}.NODE_ENV;f||(0,s.enableProdMode)(),(0,a.bootstrap)(u.App,[(0,l.disableDeprecatedForms)(),(0,l.provideForms)(),m.APP_ROUTE_PROVIDER,(0,s.provide)(c.OVERLAY_CONTAINER_TOKEN,{useValue:(0,p.createOverlayContainer)()}),r.HTTP_PROVIDERS,h.MdIconRegistry,s.Renderer,(0,s.provide)(o.HAMMER_GESTURE_CONFIG,{useClass:d.MdGestureConfig}),(0,s.provide)(i.APP_BASE_HREF,{useValue:f?"https://drager.github.io/material2-preview/":"/"}),{provide:i.LocationStrategy,useClass:i.HashLocationStrategy}])["catch"](function(t){return console.error(t)})},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";function s(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}s(n(350))},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";function s(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}var a=n(351);e.FORM_DIRECTIVES=a.FORM_DIRECTIVES,e.REACTIVE_FORM_DIRECTIVES=a.REACTIVE_FORM_DIRECTIVES;var o=n(362);e.AbstractControlDirective=o.AbstractControlDirective;var r=n(352);e.CheckboxControlValueAccessor=r.CheckboxControlValueAccessor;var i=n(374);e.ControlContainer=i.ControlContainer;var l=n(353);e.NG_VALUE_ACCESSOR=l.NG_VALUE_ACCESSOR;var c=n(354);e.DefaultValueAccessor=c.DefaultValueAccessor;var p=n(357);e.NgControl=p.NgControl;var d=n(356);e.NgControlStatus=d.NgControlStatus;var h=n(363);e.NgForm=h.NgForm;var u=n(375);e.NgModel=u.NgModel;var m=n(376);e.NgModelGroup=m.NgModelGroup;var f=n(378);e.FormArrayName=f.FormArrayName;var g=n(379);e.FormControlDirective=g.FormControlDirective;var b=n(380);e.FormControlName=b.FormControlName;var y=n(381);e.FormGroupDirective=y.FormGroupDirective;var v=n(382);e.FormGroupName=v.FormGroupName;var j=n(372);e.NgSelectOption=j.NgSelectOption,e.SelectControlValueAccessor=j.SelectControlValueAccessor;var _=n(383);e.MaxLengthValidator=_.MaxLengthValidator,e.MinLengthValidator=_.MinLengthValidator,e.PatternValidator=_.PatternValidator,e.RequiredValidator=_.RequiredValidator;var w=n(384);e.FormBuilder=w.FormBuilder;var x=n(366);e.AbstractControl=x.AbstractControl,e.FormArray=x.FormArray,e.FormControl=x.FormControl,e.FormGroup=x.FormGroup;var C=n(368);e.NG_ASYNC_VALIDATORS=C.NG_ASYNC_VALIDATORS,e.NG_VALIDATORS=C.NG_VALIDATORS,e.Validators=C.Validators,s(n(385))},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=n(352),a=n(354),o=n(356),r=n(363),i=n(375),l=n(376),c=n(370),p=n(371),d=n(378),h=n(379),u=n(380),m=n(381),f=n(382),g=n(372),b=n(373),y=n(383),v=n(352);e.CheckboxControlValueAccessor=v.CheckboxControlValueAccessor;var j=n(354);e.DefaultValueAccessor=j.DefaultValueAccessor;var _=n(357);e.NgControl=_.NgControl;var w=n(356);e.NgControlStatus=w.NgControlStatus;var x=n(363);e.NgForm=x.NgForm;var C=n(375);e.NgModel=C.NgModel;var S=n(376);e.NgModelGroup=S.NgModelGroup;var R=n(370);e.NumberValueAccessor=R.NumberValueAccessor;var O=n(371);e.RadioControlValueAccessor=O.RadioControlValueAccessor;var P=n(378);e.FormArrayName=P.FormArrayName;var A=n(379);e.FormControlDirective=A.FormControlDirective;var E=n(380);e.FormControlName=E.FormControlName;var k=n(381);e.FormGroupDirective=k.FormGroupDirective;var I=n(382);e.FormGroupName=I.FormGroupName;var M=n(372);e.NgSelectOption=M.NgSelectOption,e.SelectControlValueAccessor=M.SelectControlValueAccessor;var V=n(373);e.NgSelectMultipleOption=V.NgSelectMultipleOption,e.SelectMultipleControlValueAccessor=V.SelectMultipleControlValueAccessor;var T=n(383);e.MaxLengthValidator=T.MaxLengthValidator,e.MinLengthValidator=T.MinLengthValidator,e.PatternValidator=T.PatternValidator,e.RequiredValidator=T.RequiredValidator,e.FORM_DIRECTIVES=[i.NgModel,l.NgModelGroup,r.NgForm,g.NgSelectOption,b.NgSelectMultipleOption,a.DefaultValueAccessor,c.NumberValueAccessor,s.CheckboxControlValueAccessor,g.SelectControlValueAccessor,b.SelectMultipleControlValueAccessor,p.RadioControlValueAccessor,o.NgControlStatus,y.RequiredValidator,y.MinLengthValidator,y.MaxLengthValidator,y.PatternValidator],e.REACTIVE_FORM_DIRECTIVES=[h.FormControlDirective,m.FormGroupDirective,u.FormControlName,f.FormGroupName,d.FormArrayName]},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=n(1),a=n(353);e.CHECKBOX_VALUE_ACCESSOR={provide:a.NG_VALUE_ACCESSOR,useExisting:s.forwardRef(function(){return o}),multi:!0};var o=function(){function t(t,e){this._renderer=t,this._elementRef=e,this.onChange=function(t){},this.onTouched=function(){}}return t.prototype.writeValue=function(t){this._renderer.setElementProperty(this._elementRef.nativeElement,"checked",t)},t.prototype.registerOnChange=function(t){this.onChange=t},t.prototype.registerOnTouched=function(t){this.onTouched=t},t.decorators=[{type:s.Directive,args:[{selector:"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]",host:{"(change)":"onChange($event.target.checked)","(blur)":"onTouched()"},providers:[e.CHECKBOX_VALUE_ACCESSOR]}]}],t.ctorParameters=[{type:s.Renderer},{type:s.ElementRef}],t}();e.CheckboxControlValueAccessor=o},146,function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=n(1),a=n(355),o=n(353);e.DEFAULT_VALUE_ACCESSOR={provide:o.NG_VALUE_ACCESSOR,useExisting:s.forwardRef(function(){return r}),multi:!0};var r=function(){function t(t,e){this._renderer=t,this._elementRef=e,this.onChange=function(t){},this.onTouched=function(){}}return t.prototype.writeValue=function(t){var e=a.isBlank(t)?"":t;this._renderer.setElementProperty(this._elementRef.nativeElement,"value",e)},t.prototype.registerOnChange=function(t){this.onChange=t},t.prototype.registerOnTouched=function(t){this.onTouched=t},t.decorators=[{type:s.Directive,args:[{selector:"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]",host:{"(input)":"onChange($event.target.value)","(blur)":"onTouched()"},providers:[e.DEFAULT_VALUE_ACCESSOR]}]}],t.ctorParameters=[{type:s.Renderer},{type:s.ElementRef}],t}();e.DefaultValueAccessor=r},5,function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=n(1),a=n(355),o=n(357),r=function(){function t(t){this._cd=t}return Object.defineProperty(t.prototype,"ngClassUntouched",{get:function(){return!!a.isPresent(this._cd.control)&&this._cd.control.untouched},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ngClassTouched",{get:function(){return!!a.isPresent(this._cd.control)&&this._cd.control.touched},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ngClassPristine",{get:function(){return!!a.isPresent(this._cd.control)&&this._cd.control.pristine},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ngClassDirty",{get:function(){return!!a.isPresent(this._cd.control)&&this._cd.control.dirty},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ngClassValid",{get:function(){return!!a.isPresent(this._cd.control)&&this._cd.control.valid},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ngClassInvalid",{get:function(){return!!a.isPresent(this._cd.control)&&!this._cd.control.valid},enumerable:!0,configurable:!0}),t.decorators=[{type:s.Directive,args:[{selector:"[formControlName],[ngModel],[formControl]",host:{"[class.ng-untouched]":"ngClassUntouched","[class.ng-touched]":"ngClassTouched","[class.ng-pristine]":"ngClassPristine","[class.ng-dirty]":"ngClassDirty","[class.ng-valid]":"ngClassValid","[class.ng-invalid]":"ngClassInvalid"}}]}],t.ctorParameters=[{type:o.NgControl,decorators:[{type:s.Self}]}],t}();e.NgControlStatus=r},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(358),o=n(362),r=function(t){function e(){t.apply(this,arguments),this.name=null,this.valueAccessor=null}return s(e,t),Object.defineProperty(e.prototype,"validator",{get:function(){return a.unimplemented()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"asyncValidator",{get:function(){return a.unimplemented()},enumerable:!0,configurable:!0}),e}(o.AbstractControlDirective);e.NgControl=r},[843,359,360,360],17,[844,359,361,355],[845,355],function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=n(358),a=n(355),o=function(){function t(){}return Object.defineProperty(t.prototype,"control",{get:function(){return s.unimplemented()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){return a.isPresent(this.control)?this.control.value:null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valid",{get:function(){return a.isPresent(this.control)?this.control.valid:null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"errors",{get:function(){return a.isPresent(this.control)?this.control.errors:null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pristine",{get:function(){return a.isPresent(this.control)?this.control.pristine:null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"dirty",{get:function(){return a.isPresent(this.control)?this.control.dirty:null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"touched",{get:function(){return a.isPresent(this.control)?this.control.touched:null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"untouched",{get:function(){return a.isPresent(this.control)?this.control.untouched:null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"statusChanges",{get:function(){return a.isPresent(this.control)?this.control.statusChanges:null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valueChanges",{get:function(){return a.isPresent(this.control)?this.control.valueChanges:null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"path",{get:function(){return null},enumerable:!0,configurable:!0}),t}();e.AbstractControlDirective=o},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(1),o=n(364),r=n(361),i=n(355),l=n(366),c=n(368),p=n(374),d=n(367);e.formDirectiveProvider={provide:p.ControlContainer,useExisting:a.forwardRef(function(){return h})};var h=function(t){function n(e,n){t.call(this),this._submitted=!1,this.ngSubmit=new o.EventEmitter,this.form=new l.FormGroup({},null,d.composeValidators(e),d.composeAsyncValidators(n))}return s(n,t),Object.defineProperty(n.prototype,"submitted",{get:function(){return this._submitted},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"formDirective",{get:function(){return this},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"control",{get:function(){return this.form},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"path",{get:function(){return[]},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"controls",{get:function(){return this.form.controls},enumerable:!0,configurable:!0}),n.prototype.addControl=function(t){var e=this;o.PromiseWrapper.scheduleMicrotask(function(){var n=e._findContainer(t.path);t._control=n.registerControl(t.name,t.control),d.setUpControl(t.control,t),t.control.updateValueAndValidity({emitEvent:!1})})},n.prototype.getControl=function(t){return this.form.find(t.path)},n.prototype.removeControl=function(t){var e=this;o.PromiseWrapper.scheduleMicrotask(function(){var n=e._findContainer(t.path);i.isPresent(n)&&n.removeControl(t.name)})},n.prototype.addFormGroup=function(t){var e=this;o.PromiseWrapper.scheduleMicrotask(function(){var n=e._findContainer(t.path),s=new l.FormGroup({});d.setUpFormContainer(s,t),n.registerControl(t.name,s),s.updateValueAndValidity({emitEvent:!1})})},n.prototype.removeFormGroup=function(t){var e=this;o.PromiseWrapper.scheduleMicrotask(function(){var n=e._findContainer(t.path);i.isPresent(n)&&n.removeControl(t.name)})},n.prototype.getFormGroup=function(t){return this.form.find(t.path)},n.prototype.updateModel=function(t,e){var n=this;o.PromiseWrapper.scheduleMicrotask(function(){var s=n.form.find(t.path);s.updateValue(e)})},n.prototype.onSubmit=function(){return this._submitted=!0,o.ObservableWrapper.callEmit(this.ngSubmit,null),!1},n.prototype._findContainer=function(t){return t.pop(),r.ListWrapper.isEmpty(t)?this.form:this.form.find(t)},n.decorators=[{type:a.Directive,args:[{selector:"form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]",providers:[e.formDirectiveProvider],host:{"(submit)":"onSubmit()"},outputs:["ngSubmit"],exportAs:"ngForm"}]}],n.ctorParameters=[{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[c.NG_VALIDATORS]}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[c.NG_ASYNC_VALIDATORS]}]}],n}(p.ControlContainer);e.NgForm=h},[846,355,365],54,function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";function s(t){return t instanceof u}function a(t,e){return h.isBlank(e)?null:(e instanceof Array||(e=e.split("/")),e instanceof Array&&d.ListWrapper.isEmpty(e)?null:e.reduce(function(t,e){if(t instanceof f)return h.isPresent(t.controls[e])?t.controls[e]:null;if(t instanceof g){var n=e;return h.isPresent(t.at(n))?t.at(n):null}return null},t))}function o(t){return h.isPromise(t)?p.ObservableWrapper.fromPromise(t):t}function r(t){return Array.isArray(t)?c.composeValidators(t):t}function i(t){return Array.isArray(t)?c.composeAsyncValidators(t):t}var l=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},c=n(367),p=n(364),d=n(361),h=n(355);e.VALID="VALID",e.INVALID="INVALID",e.PENDING="PENDING",e.isControl=s;var u=function(){function t(t,e){this.validator=t,this.asyncValidator=e,this._pristine=!0,this._touched=!1}return Object.defineProperty(t.prototype,"value",{get:function(){return this._value},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"status",{get:function(){return this._status},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valid",{get:function(){return this._status===e.VALID},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"errors",{get:function(){return this._errors},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pristine",{get:function(){return this._pristine},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"dirty",{get:function(){return!this.pristine},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"touched",{get:function(){return this._touched},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"untouched",{get:function(){return!this._touched},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valueChanges",{get:function(){return this._valueChanges},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"statusChanges",{get:function(){return this._statusChanges},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pending",{get:function(){return this._status==e.PENDING},enumerable:!0,configurable:!0}),t.prototype.setAsyncValidators=function(t){this.asyncValidator=i(t)},t.prototype.clearAsyncValidators=function(){this.asyncValidator=null},t.prototype.setValidators=function(t){this.validator=r(t)},t.prototype.clearValidators=function(){this.validator=null},t.prototype.markAsTouched=function(){this._touched=!0},t.prototype.markAsDirty=function(t){var e=(void 0===t?{}:t).onlySelf;e=h.normalizeBool(e),this._pristine=!1,h.isPresent(this._parent)&&!e&&this._parent.markAsDirty({onlySelf:e})},t.prototype.markAsPending=function(t){var n=(void 0===t?{}:t).onlySelf;n=h.normalizeBool(n),this._status=e.PENDING,h.isPresent(this._parent)&&!n&&this._parent.markAsPending({onlySelf:n})},t.prototype.setParent=function(t){this._parent=t},t.prototype.updateValueAndValidity=function(t){var n=void 0===t?{}:t,s=n.onlySelf,a=n.emitEvent;s=h.normalizeBool(s),a=!h.isPresent(a)||a,this._updateValue(),this._errors=this._runValidator(),this._status=this._calculateStatus(),this._status!=e.VALID&&this._status!=e.PENDING||this._runAsyncValidator(a),a&&(p.ObservableWrapper.callEmit(this._valueChanges,this._value),p.ObservableWrapper.callEmit(this._statusChanges,this._status)),h.isPresent(this._parent)&&!s&&this._parent.updateValueAndValidity({onlySelf:s,emitEvent:a})},t.prototype._runValidator=function(){return h.isPresent(this.validator)?this.validator(this):null},t.prototype._runAsyncValidator=function(t){var n=this;if(h.isPresent(this.asyncValidator)){this._status=e.PENDING,this._cancelExistingSubscription();var s=o(this.asyncValidator(this));this._asyncValidationSubscription=p.ObservableWrapper.subscribe(s,function(e){return n.setErrors(e,{emitEvent:t})})}},t.prototype._cancelExistingSubscription=function(){h.isPresent(this._asyncValidationSubscription)&&p.ObservableWrapper.dispose(this._asyncValidationSubscription)},t.prototype.setErrors=function(t,e){var n=(void 0===e?{}:e).emitEvent;n=!h.isPresent(n)||n,this._errors=t,this._updateControlsErrors(n)},t.prototype.find=function(t){return a(this,t)},t.prototype.getError=function(t,e){void 0===e&&(e=null);var n=h.isPresent(e)&&!d.ListWrapper.isEmpty(e)?this.find(e):this;return h.isPresent(n)&&h.isPresent(n._errors)?d.StringMapWrapper.get(n._errors,t):null},t.prototype.hasError=function(t,e){return void 0===e&&(e=null),h.isPresent(this.getError(t,e))},Object.defineProperty(t.prototype,"root",{get:function(){for(var t=this;h.isPresent(t._parent);)t=t._parent;return t},enumerable:!0,configurable:!0}),t.prototype._updateControlsErrors=function(t){this._status=this._calculateStatus(),t&&p.ObservableWrapper.callEmit(this._statusChanges,this._status),h.isPresent(this._parent)&&this._parent._updateControlsErrors(t)},t.prototype._initObservables=function(){this._valueChanges=new p.EventEmitter,this._statusChanges=new p.EventEmitter},t.prototype._calculateStatus=function(){return h.isPresent(this._errors)?e.INVALID:this._anyControlsHaveStatus(e.PENDING)?e.PENDING:this._anyControlsHaveStatus(e.INVALID)?e.INVALID:e.VALID},t}();e.AbstractControl=u;var m=function(t){function e(e,n,s){void 0===e&&(e=null),void 0===n&&(n=null),void 0===s&&(s=null),t.call(this,r(n),i(s)),this._onChange=[],this._value=e,this.updateValueAndValidity({onlySelf:!0,emitEvent:!1}),this._initObservables()}return l(e,t),e.prototype.updateValue=function(t,e){var n=this,s=void 0===e?{}:e,a=s.onlySelf,o=s.emitEvent,r=s.emitModelToViewChange;r=!h.isPresent(r)||r,this._value=t,this._onChange.length&&r&&this._onChange.forEach(function(t){return t(n._value)}),this.updateValueAndValidity({onlySelf:a,emitEvent:o})},e.prototype._updateValue=function(){},e.prototype._anyControlsHaveStatus=function(t){return!1},e.prototype.registerOnChange=function(t){this._onChange.push(t)},e}(u);e.FormControl=m;var f=function(t){function e(e,n,s,a){void 0===n&&(n=null),void 0===s&&(s=null),void 0===a&&(a=null),t.call(this,s,a),this.controls=e,this._optionals=h.isPresent(n)?n:{},this._initObservables(),this._setParentForControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!1})}return l(e,t),e.prototype.registerControl=function(t,e){return this.controls[t]?this.controls[t]:(this.controls[t]=e,e.setParent(this),e)},e.prototype.addControl=function(t,e){this.registerControl(t,e),this.updateValueAndValidity()},e.prototype.removeControl=function(t){d.StringMapWrapper["delete"](this.controls,t),this.updateValueAndValidity()},e.prototype.include=function(t){d.StringMapWrapper.set(this._optionals,t,!0),this.updateValueAndValidity()},e.prototype.exclude=function(t){d.StringMapWrapper.set(this._optionals,t,!1),this.updateValueAndValidity()},e.prototype.contains=function(t){var e=d.StringMapWrapper.contains(this.controls,t);return e&&this._included(t)},e.prototype._setParentForControls=function(){var t=this;d.StringMapWrapper.forEach(this.controls,function(e,n){e.setParent(t)})},e.prototype._updateValue=function(){this._value=this._reduceValue()},e.prototype._anyControlsHaveStatus=function(t){var e=this,n=!1;return d.StringMapWrapper.forEach(this.controls,function(s,a){n=n||e.contains(a)&&s.status==t}),n},e.prototype._reduceValue=function(){return this._reduceChildren({},function(t,e,n){return t[n]=e.value,t})},e.prototype._reduceChildren=function(t,e){var n=this,s=t;return d.StringMapWrapper.forEach(this.controls,function(t,a){n._included(a)&&(s=e(s,t,a))}),s},e.prototype._included=function(t){var e=d.StringMapWrapper.contains(this._optionals,t);return!e||d.StringMapWrapper.get(this._optionals,t)},e}(u);e.FormGroup=f;var g=function(t){function e(e,n,s){void 0===n&&(n=null),void 0===s&&(s=null),t.call(this,n,s),this.controls=e,this._initObservables(),this._setParentForControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!1})}return l(e,t),e.prototype.at=function(t){return this.controls[t]},e.prototype.push=function(t){this.controls.push(t),t.setParent(this),this.updateValueAndValidity()},e.prototype.insert=function(t,e){d.ListWrapper.insert(this.controls,t,e),e.setParent(this),this.updateValueAndValidity()},e.prototype.removeAt=function(t){d.ListWrapper.removeAt(this.controls,t),this.updateValueAndValidity()},Object.defineProperty(e.prototype,"length",{get:function(){return this.controls.length},enumerable:!0,configurable:!0}),e.prototype._updateValue=function(){this._value=this.controls.map(function(t){return t.value})},e.prototype._anyControlsHaveStatus=function(t){return this.controls.some(function(e){return e.status==t})},e.prototype._setParentForControls=function(){var t=this;this.controls.forEach(function(e){e.setParent(t)})},e}(u);e.FormArray=g},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";function s(t,e){var n=d.ListWrapper.clone(e.path);return n.push(t),n}function a(t,e){u.isBlank(t)&&r(e,"Cannot find control"),u.isBlank(e.valueAccessor)&&r(e,"No value accessor for"),t.validator=m.Validators.compose([t.validator,e.validator]),t.asyncValidator=m.Validators.composeAsync([t.asyncValidator,e.asyncValidator]),e.valueAccessor.writeValue(t.value),e.valueAccessor.registerOnChange(function(n){e.viewToModelUpdate(n),t.updateValue(n,{emitModelToViewChange:!1}),t.markAsDirty()}),t.registerOnChange(function(t){return e.valueAccessor.writeValue(t)}),e.valueAccessor.registerOnTouched(function(){return t.markAsTouched()})}function o(t,e){u.isBlank(t)&&r(e,"Cannot find control"),t.validator=m.Validators.compose([t.validator,e.validator]),t.asyncValidator=m.Validators.composeAsync([t.asyncValidator,e.asyncValidator])}function r(t,e){var n=t.path.join(" -> ");throw new h.BaseException(e+" '"+n+"'")}function i(t){return u.isPresent(t)?m.Validators.compose(t.map(b.normalizeValidator)):null}function l(t){return u.isPresent(t)?m.Validators.composeAsync(t.map(b.normalizeAsyncValidator)):null}function c(t,e){if(!d.StringMapWrapper.contains(t,"model"))return!1;var n=t.model;return!!n.isFirstChange()||!u.looseIdentical(e,n.currentValue)}function p(t,e){if(u.isBlank(e))return null;var n,s,a;return e.forEach(function(e){u.hasConstructor(e,g.DefaultValueAccessor)?n=e:u.hasConstructor(e,f.CheckboxControlValueAccessor)||u.hasConstructor(e,y.NumberValueAccessor)||u.hasConstructor(e,j.SelectControlValueAccessor)||u.hasConstructor(e,_.SelectMultipleControlValueAccessor)||u.hasConstructor(e,v.RadioControlValueAccessor)?(u.isPresent(s)&&r(t,"More than one built-in value accessor matches"),s=e):(u.isPresent(a)&&r(t,"More than one custom value accessor matches"),a=e)}),u.isPresent(a)?a:u.isPresent(s)?s:u.isPresent(n)?n:(r(t,"No valid value accessor for"),null)}var d=n(361),h=n(358),u=n(355),m=n(368),f=n(352),g=n(354),b=n(369),y=n(370),v=n(371),j=n(372),_=n(373);e.controlPath=s,e.setUpControl=a,e.setUpFormContainer=o,e.composeValidators=i,e.composeAsyncValidators=l,e.isPropertyUpdated=c,e.selectValueAccessor=p},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";function s(t){return p.isPromise(t)?t:l.ObservableWrapper.toPromise(t)}function a(t,e){return e.map(function(e){return e(t)})}function o(t,e){return e.map(function(e){return e(t)})}function r(t){var e=t.reduce(function(t,e){return p.isPresent(e)?c.StringMapWrapper.merge(t,e):t},{});return c.StringMapWrapper.isEmpty(e)?null:e}var i=n(1),l=n(364),c=n(361),p=n(355),d=n(365);e.NG_VALIDATORS=new i.OpaqueToken("NgValidators"),e.NG_ASYNC_VALIDATORS=new i.OpaqueToken("NgAsyncValidators");var h=function(){function t(){}return t.required=function(t){return p.isBlank(t.value)||p.isString(t.value)&&""==t.value?{required:!0}:null},t.minLength=function(e){return function(n){if(p.isPresent(t.required(n)))return null;var s=n.value;return s.length<e?{minlength:{requiredLength:e,actualLength:s.length}}:null}},t.maxLength=function(e){return function(n){if(p.isPresent(t.required(n)))return null;var s=n.value;return s.length>e?{maxlength:{requiredLength:e,actualLength:s.length}}:null}},t.pattern=function(e){return function(n){if(p.isPresent(t.required(n)))return null;var s=new RegExp("^"+e+"$"),a=n.value;return s.test(a)?null:{pattern:{requiredPattern:"^"+e+"$",actualValue:a}}}},t.nullValidator=function(t){return null},t.compose=function(t){if(p.isBlank(t))return null;var e=t.filter(p.isPresent);return 0==e.length?null:function(t){return r(a(t,e))}},t.composeAsync=function(t){if(p.isBlank(t))return null;var e=t.filter(p.isPresent);return 0==e.length?null:function(t){var n=o(t,e).map(s);return d.PromiseWrapper.all(n).then(r)}},t}();e.Validators=h},158,function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=n(1),a=n(355),o=n(353);e.NUMBER_VALUE_ACCESSOR={provide:o.NG_VALUE_ACCESSOR,useExisting:s.forwardRef(function(){return r}),multi:!0};var r=function(){function t(t,e){this._renderer=t,this._elementRef=e,this.onChange=function(t){},this.onTouched=function(){}}return t.prototype.writeValue=function(t){this._renderer.setElementProperty(this._elementRef.nativeElement,"value",t)},t.prototype.registerOnChange=function(t){this.onChange=function(e){t(""==e?null:a.NumberWrapper.parseFloat(e))}},t.prototype.registerOnTouched=function(t){this.onTouched=t},t.decorators=[{type:s.Directive,args:[{selector:"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]",host:{"(change)":"onChange($event.target.value)","(input)":"onChange($event.target.value)","(blur)":"onTouched()"},providers:[e.NUMBER_VALUE_ACCESSOR]}]}],t.ctorParameters=[{type:s.Renderer},{type:s.ElementRef}],t}();e.NumberValueAccessor=r},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=n(1),a=n(361),o=n(358),r=n(355),i=n(353),l=n(357);e.RADIO_VALUE_ACCESSOR={provide:i.NG_VALUE_ACCESSOR,useExisting:s.forwardRef(function(){return p}),multi:!0};var c=function(){function t(){this._accessors=[]}return t.prototype.add=function(t,e){this._accessors.push([t,e])},t.prototype.remove=function(t){for(var e=-1,n=0;n<this._accessors.length;++n)this._accessors[n][1]===t&&(e=n);a.ListWrapper.removeAt(this._accessors,e)},t.prototype.select=function(t){var e=this;this._accessors.forEach(function(n){e._isSameGroup(n,t)&&n[1]!==t&&n[1].fireUncheck(t.value)})},t.prototype._isSameGroup=function(t,e){return!!t[0].control&&(t[0].control.root===e._control.control.root&&t[1].name===e.name)},t.decorators=[{type:s.Injectable}],t}();e.RadioControlRegistry=c;var p=function(){function t(t,e,n,s){this._renderer=t,this._elementRef=e,this._registry=n,this._injector=s,this.onChange=function(){},this.onTouched=function(){}}return t.prototype.ngOnInit=function(){this._control=this._injector.get(l.NgControl),this._checkName(),this._registry.add(this._control,this)},t.prototype.ngOnDestroy=function(){this._registry.remove(this)},t.prototype.writeValue=function(t){this._state=t===this.value,r.isPresent(t)&&this._renderer.setElementProperty(this._elementRef.nativeElement,"checked",this._state)},t.prototype.registerOnChange=function(t){var e=this;this._fn=t,this.onChange=function(){t(e.value),e._registry.select(e)}},t.prototype.fireUncheck=function(t){this.writeValue(t)},t.prototype.registerOnTouched=function(t){this.onTouched=t},t.prototype._checkName=function(){this.name&&this.formControlName&&this.name!==this.formControlName&&this._throwNameError(),!this.name&&this.formControlName&&(this.name=this.formControlName)},t.prototype._throwNameError=function(){throw new o.BaseException('\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type="radio" formControlName="food" name="food">\n    ')},t.decorators=[{type:s.Directive,args:[{selector:"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]",host:{"(change)":"onChange()","(blur)":"onTouched()"},providers:[e.RADIO_VALUE_ACCESSOR]}]}],t.ctorParameters=[{type:s.Renderer},{type:s.ElementRef},{type:c},{type:s.Injector}],t.propDecorators={name:[{type:s.Input}],formControlName:[{type:s.Input}],value:[{type:s.Input}]},t}();e.RadioControlValueAccessor=p},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";function s(t,e){return i.isBlank(t)?""+e:(i.isPrimitive(e)||(e="Object"),i.StringWrapper.slice(t+": "+e,0,50))}function a(t){return t.split(":")[0]}var o=n(1),r=n(361),i=n(355),l=n(353);e.SELECT_VALUE_ACCESSOR={provide:l.NG_VALUE_ACCESSOR,useExisting:o.forwardRef(function(){return c}),multi:!0};var c=function(){function t(t,e){this._renderer=t,this._elementRef=e,this._optionMap=new Map,this._idCounter=0,this.onChange=function(t){},this.onTouched=function(){}}return t.prototype.writeValue=function(t){this.value=t;var e=s(this._getOptionId(t),t);this._renderer.setElementProperty(this._elementRef.nativeElement,"value",e)},t.prototype.registerOnChange=function(t){var e=this;this.onChange=function(n){e.value=n,t(e._getOptionValue(n))}},t.prototype.registerOnTouched=function(t){this.onTouched=t},t.prototype._registerOption=function(){return(this._idCounter++).toString()},t.prototype._getOptionId=function(t){for(var e=0,n=r.MapWrapper.keys(this._optionMap);e<n.length;e++){var s=n[e];if(i.looseIdentical(this._optionMap.get(s),t))return s}return null},t.prototype._getOptionValue=function(t){var e=this._optionMap.get(a(t));return i.isPresent(e)?e:t},t.decorators=[{type:o.Directive,args:[{selector:"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]",host:{"(change)":"onChange($event.target.value)","(blur)":"onTouched()"},providers:[e.SELECT_VALUE_ACCESSOR]}]}],t.ctorParameters=[{type:o.Renderer},{type:o.ElementRef}],t}();e.SelectControlValueAccessor=c;var p=function(){function t(t,e,n){this._element=t,this._renderer=e,this._select=n,i.isPresent(this._select)&&(this.id=this._select._registerOption())}return Object.defineProperty(t.prototype,"ngValue",{set:function(t){null!=this._select&&(this._select._optionMap.set(this.id,t),this._setElementValue(s(this.id,t)),this._select.writeValue(this._select.value))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{set:function(t){this._setElementValue(t),i.isPresent(this._select)&&this._select.writeValue(this._select.value)},enumerable:!0,configurable:!0}),t.prototype._setElementValue=function(t){this._renderer.setElementProperty(this._element.nativeElement,"value",t)},t.prototype.ngOnDestroy=function(){i.isPresent(this._select)&&(this._select._optionMap["delete"](this.id),this._select.writeValue(this._select.value))},t.decorators=[{type:o.Directive,args:[{selector:"option"}]}],t.ctorParameters=[{type:o.ElementRef},{type:o.Renderer},{type:c,decorators:[{type:o.Optional},{type:o.Host}]}],t.propDecorators={ngValue:[{type:o.Input,args:["ngValue"]}],value:[{type:o.Input,args:["value"]}]},t}();e.NgSelectOption=p},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";function s(t,e){return i.isBlank(t)?""+e:(i.isString(e)&&(e="'"+e+"'"),i.isPrimitive(e)||(e="Object"),i.StringWrapper.slice(t+": "+e,0,50))}function a(t){return t.split(":")[0]}var o=n(1),r=n(361),i=n(355),l=n(353),c={provide:l.NG_VALUE_ACCESSOR,useExisting:o.forwardRef(function(){return p}),multi:!0},p=(function(){function t(){}return t}(),function(){function t(){this._optionMap=new Map,this._idCounter=0,this.onChange=function(t){},this.onTouched=function(){}}return t.prototype.writeValue=function(t){var e=this;if(this.value=t,null!=t){var n=t,s=n.map(function(t){return e._getOptionId(t)});this._optionMap.forEach(function(t,e){t._setSelected(s.indexOf(e.toString())>-1)})}},t.prototype.registerOnChange=function(t){var e=this;this.onChange=function(n){var s=[];if(n.hasOwnProperty("selectedOptions"))for(var a=n.selectedOptions,o=0;o<a.length;o++){var r=a.item(o),i=e._getOptionValue(r.value);s.push(i)}else for(var a=n.options,o=0;o<a.length;o++){var r=a.item(o);if(r.selected){var i=e._getOptionValue(r.value);s.push(i)}}t(s)}},t.prototype.registerOnTouched=function(t){this.onTouched=t},t.prototype._registerOption=function(t){var e=(this._idCounter++).toString();return this._optionMap.set(e,t),e},t.prototype._getOptionId=function(t){for(var e=0,n=r.MapWrapper.keys(this._optionMap);e<n.length;e++){var s=n[e];if(i.looseIdentical(this._optionMap.get(s)._value,t))return s}return null},t.prototype._getOptionValue=function(t){var e=this._optionMap.get(a(t));return i.isPresent(e)?e._value:t},t.decorators=[{type:o.Directive,args:[{selector:"select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]",host:{"(input)":"onChange($event.target)","(blur)":"onTouched()"},providers:[c]}]}],t.ctorParameters=[],t}());e.SelectMultipleControlValueAccessor=p;var d=function(){function t(t,e,n){this._element=t,this._renderer=e,this._select=n,i.isPresent(this._select)&&(this.id=this._select._registerOption(this))}return Object.defineProperty(t.prototype,"ngValue",{set:function(t){null!=this._select&&(this._value=t,this._setElementValue(s(this.id,t)),this._select.writeValue(this._select.value))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{set:function(t){i.isPresent(this._select)?(this._value=t,this._setElementValue(s(this.id,t)),this._select.writeValue(this._select.value)):this._setElementValue(t)},enumerable:!0,configurable:!0}),t.prototype._setElementValue=function(t){this._renderer.setElementProperty(this._element.nativeElement,"value",t)},t.prototype._setSelected=function(t){this._renderer.setElementProperty(this._element.nativeElement,"selected",t)},t.prototype.ngOnDestroy=function(){i.isPresent(this._select)&&(this._select._optionMap["delete"](this.id),this._select.writeValue(this._select.value))},t.decorators=[{type:o.Directive,args:[{selector:"option"}]}],t.ctorParameters=[{type:o.ElementRef},{type:o.Renderer},{type:p,decorators:[{type:o.Optional},{type:o.Host}]}],t.propDecorators={ngValue:[{type:o.Input,args:["ngValue"]}],value:[{type:o.Input,args:["value"]}]},t}();e.NgSelectMultipleOption=d,e.SELECT_DIRECTIVES=[p,d]},[848,362],function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(1),o=n(364),r=n(358),i=n(366),l=n(368),c=n(374),p=n(353),d=n(357),h=n(367);e.formControlBinding={provide:d.NgControl,useExisting:a.forwardRef(function(){return u})};var u=function(t){function n(e,n,s,a){t.call(this),this._parent=e,this._validators=n,this._asyncValidators=s,this._control=new i.FormControl,this._registered=!1,this.update=new o.EventEmitter,this.valueAccessor=h.selectValueAccessor(this,a)}return s(n,t),n.prototype.ngOnChanges=function(t){this._checkName(),this._registered||this._setUpControl(),h.isPropertyUpdated(t,this.viewModel)&&(this._updateValue(this.model),this.viewModel=this.model)},n.prototype.ngOnDestroy=function(){this.formDirective&&this.formDirective.removeControl(this)},Object.defineProperty(n.prototype,"control",{get:function(){return this._control},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"path",{get:function(){return this._parent?h.controlPath(this.name,this._parent):[]},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"formDirective",{get:function(){return this._parent?this._parent.formDirective:null},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"validator",{get:function(){return h.composeValidators(this._validators)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"asyncValidator",{get:function(){return h.composeAsyncValidators(this._asyncValidators)},enumerable:!0,configurable:!0}),n.prototype.viewToModelUpdate=function(t){this.viewModel=t,o.ObservableWrapper.callEmit(this.update,t)},n.prototype._setUpControl=function(){this._isStandalone()?this._setUpStandalone():this.formDirective.addControl(this),this._registered=!0},n.prototype._isStandalone=function(){return!this._parent||this.options&&this.options.standalone},n.prototype._setUpStandalone=function(){h.setUpControl(this._control,this),this._control.updateValueAndValidity({emitEvent:!1})},n.prototype._checkName=function(){if(this.options&&this.options.name&&(this.name=this.options.name),!this._isStandalone()&&!this.name)throw new r.BaseException('If ngModel is used within a form tag, either the name attribute must be set\n                      or the form control must be defined as \'standalone\' in ngModelOptions.\n\n                      Example 1: <input [(ngModel)]="person.firstName" name="first">\n                      Example 2: <input [(ngModel)]="person.firstName" [ngModelOptions]="{standalone: true}">\n                   ')},n.prototype._updateValue=function(t){var e=this;o.PromiseWrapper.scheduleMicrotask(function(){e.control.updateValue(t)})},n.decorators=[{type:a.Directive,args:[{selector:"[ngModel]:not([formControlName]):not([formControl])",providers:[e.formControlBinding],exportAs:"ngModel"}]}],n.ctorParameters=[{type:c.ControlContainer,decorators:[{type:a.Optional},{type:a.Host}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[l.NG_VALIDATORS]}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[l.NG_ASYNC_VALIDATORS]}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[p.NG_VALUE_ACCESSOR]}]}],n.propDecorators={model:[{type:a.Input,args:["ngModel"]}],name:[{type:a.Input}],options:[{type:a.Input,args:["ngModelOptions"]}],update:[{type:a.Output,args:["ngModelChange"]}]},n}(d.NgControl);e.NgModel=u},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(1),o=n(368),r=n(377),i=n(374);e.modelGroupProvider={provide:i.ControlContainer,useExisting:a.forwardRef(function(){return l})};var l=function(t){function n(e,n,s){t.call(this),this._parent=e,this._validators=n,this._asyncValidators=s}return s(n,t),n.decorators=[{type:a.Directive,args:[{selector:"[ngModelGroup]",providers:[e.modelGroupProvider],exportAs:"ngModelGroup"}]}],n.ctorParameters=[{type:i.ControlContainer,decorators:[{type:a.Host},{type:a.SkipSelf}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[o.NG_VALIDATORS]}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[o.NG_ASYNC_VALIDATORS]}]}],n.propDecorators={name:[{type:a.Input,args:["ngModelGroup"]}]},n}(r.AbstractFormGroupDirective);e.NgModelGroup=l},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(374),o=n(367),r=function(t){function e(){t.apply(this,arguments)}return s(e,t),e.prototype.ngOnInit=function(){this.formDirective.addFormGroup(this)},e.prototype.ngOnDestroy=function(){this.formDirective.removeFormGroup(this)},Object.defineProperty(e.prototype,"control",{get:function(){return this.formDirective.getFormGroup(this)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"path",{get:function(){return o.controlPath(this.name,this._parent)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"formDirective",{get:function(){return this._parent.formDirective},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"validator",{get:function(){return o.composeValidators(this._validators)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"asyncValidator",{get:function(){return o.composeAsyncValidators(this._asyncValidators)},enumerable:!0,configurable:!0}),e}(a.ControlContainer);e.AbstractFormGroupDirective=r},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(1),o=n(368),r=n(374),i=n(367);e.formArrayNameProvider={provide:r.ControlContainer,useExisting:a.forwardRef(function(){return l})};var l=function(t){function n(e,n,s){t.call(this),this._parent=e,this._validators=n,this._asyncValidators=s}return s(n,t),n.prototype.ngOnInit=function(){this.formDirective.addFormArray(this)},n.prototype.ngOnDestroy=function(){this.formDirective.removeFormArray(this)},Object.defineProperty(n.prototype,"control",{get:function(){return this.formDirective.getFormArray(this)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"formDirective",{get:function(){return this._parent.formDirective},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"path",{get:function(){return i.controlPath(this.name,this._parent)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"validator",{get:function(){return i.composeValidators(this._validators)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"asyncValidator",{get:function(){return i.composeAsyncValidators(this._asyncValidators)},enumerable:!0,configurable:!0}),n.decorators=[{type:a.Directive,args:[{selector:"[formArrayName]",providers:[e.formArrayNameProvider]}]}],n.ctorParameters=[{type:r.ControlContainer,decorators:[{type:a.Host},{type:a.SkipSelf}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[o.NG_VALIDATORS]}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[o.NG_ASYNC_VALIDATORS]}]}],n.propDecorators={name:[{type:a.Input,args:["formArrayName"]}]},n}(r.ControlContainer);e.FormArrayName=l},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(1),o=n(364),r=n(361),i=n(368),l=n(353),c=n(357),p=n(367);e.formControlBinding={provide:c.NgControl,useExisting:a.forwardRef(function(){return d})};var d=function(t){function n(e,n,s){t.call(this),this._validators=e,this._asyncValidators=n,this.update=new o.EventEmitter,this.valueAccessor=p.selectValueAccessor(this,s)}return s(n,t),n.prototype.ngOnChanges=function(t){this._isControlChanged(t)&&(p.setUpControl(this.form,this),this.form.updateValueAndValidity({emitEvent:!1})),p.isPropertyUpdated(t,this.viewModel)&&(this.form.updateValue(this.model),this.viewModel=this.model)},Object.defineProperty(n.prototype,"path",{get:function(){return[]},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"validator",{get:function(){return p.composeValidators(this._validators)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"asyncValidator",{get:function(){return p.composeAsyncValidators(this._asyncValidators)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"control",{get:function(){return this.form},enumerable:!0,configurable:!0}),n.prototype.viewToModelUpdate=function(t){this.viewModel=t,o.ObservableWrapper.callEmit(this.update,t)},n.prototype._isControlChanged=function(t){return r.StringMapWrapper.contains(t,"form")},n.decorators=[{type:a.Directive,args:[{selector:"[formControl]",providers:[e.formControlBinding],exportAs:"ngForm"}]}],n.ctorParameters=[{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[i.NG_VALIDATORS]}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[i.NG_ASYNC_VALIDATORS]}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[l.NG_VALUE_ACCESSOR]}]}],n.propDecorators={form:[{type:a.Input,args:["formControl"]}],model:[{type:a.Input,args:["ngModel"]}],update:[{type:a.Output,args:["ngModelChange"]}]},n}(c.NgControl);e.FormControlDirective=d},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(1),o=n(364),r=n(368),i=n(374),l=n(353),c=n(357),p=n(367);e.controlNameBinding={provide:c.NgControl,useExisting:a.forwardRef(function(){return d})};var d=function(t){function n(e,n,s,a){t.call(this),this._parent=e,this._validators=n,this._asyncValidators=s,this._added=!1,this.update=new o.EventEmitter,this.valueAccessor=p.selectValueAccessor(this,a)}return s(n,t),n.prototype.ngOnChanges=function(t){this._added||(this.formDirective.addControl(this),this._added=!0),p.isPropertyUpdated(t,this.viewModel)&&(this.viewModel=this.model,this.formDirective.updateModel(this,this.model))},n.prototype.ngOnDestroy=function(){this.formDirective.removeControl(this)},n.prototype.viewToModelUpdate=function(t){this.viewModel=t,o.ObservableWrapper.callEmit(this.update,t)},Object.defineProperty(n.prototype,"path",{get:function(){return p.controlPath(this.name,this._parent)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"formDirective",{get:function(){return this._parent.formDirective},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"validator",{get:function(){return p.composeValidators(this._validators)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"asyncValidator",{get:function(){return p.composeAsyncValidators(this._asyncValidators)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"control",{get:function(){return this.formDirective.getControl(this)},enumerable:!0,configurable:!0}),n.decorators=[{type:a.Directive,args:[{selector:"[formControlName]",providers:[e.controlNameBinding]}]}],n.ctorParameters=[{type:i.ControlContainer,decorators:[{type:a.Host},{type:a.SkipSelf}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[r.NG_VALIDATORS]}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[r.NG_ASYNC_VALIDATORS]}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[l.NG_VALUE_ACCESSOR]}]}],n.propDecorators={name:[{type:a.Input,args:["formControlName"]}],model:[{type:a.Input,args:["ngModel"]}],update:[{type:a.Output,args:["ngModelChange"]}]},n}(c.NgControl);e.FormControlName=d},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(1),o=n(364),r=n(361),i=n(358),l=n(355),c=n(368),p=n(374),d=n(367);e.formDirectiveProvider={provide:p.ControlContainer,useExisting:a.forwardRef(function(){return h})};var h=function(t){function n(e,n){t.call(this),this._validators=e,this._asyncValidators=n,this._submitted=!1,this.directives=[],this.form=null,this.ngSubmit=new o.EventEmitter}return s(n,t),n.prototype.ngOnChanges=function(t){if(this._checkFormPresent(),r.StringMapWrapper.contains(t,"form")){var e=d.composeValidators(this._validators);this.form.validator=c.Validators.compose([this.form.validator,e]);var n=d.composeAsyncValidators(this._asyncValidators);this.form.asyncValidator=c.Validators.composeAsync([this.form.asyncValidator,n]),this.form.updateValueAndValidity({onlySelf:!0,emitEvent:!1})}this._updateDomValue()},Object.defineProperty(n.prototype,"submitted",{get:function(){return this._submitted},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"formDirective",{get:function(){return this},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"control",{get:function(){return this.form},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"path",{get:function(){return[]},enumerable:!0,configurable:!0}),n.prototype.addControl=function(t){var e=this.form.find(t.path);d.setUpControl(e,t),e.updateValueAndValidity({emitEvent:!1}),this.directives.push(t)},n.prototype.getControl=function(t){return this.form.find(t.path)},n.prototype.removeControl=function(t){r.ListWrapper.remove(this.directives,t)},n.prototype.addFormGroup=function(t){var e=this.form.find(t.path);d.setUpFormContainer(e,t),e.updateValueAndValidity({emitEvent:!1})},n.prototype.removeFormGroup=function(t){},n.prototype.getFormGroup=function(t){return this.form.find(t.path)},n.prototype.addFormArray=function(t){var e=this.form.find(t.path);d.setUpFormContainer(e,t),e.updateValueAndValidity({emitEvent:!1})},n.prototype.removeFormArray=function(t){},n.prototype.getFormArray=function(t){return this.form.find(t.path)},n.prototype.updateModel=function(t,e){var n=this.form.find(t.path);n.updateValue(e)},n.prototype.onSubmit=function(){return this._submitted=!0,o.ObservableWrapper.callEmit(this.ngSubmit,null),!1},n.prototype._updateDomValue=function(){var t=this;this.directives.forEach(function(e){var n=t.form.find(e.path);e.valueAccessor.writeValue(n.value)})},n.prototype._checkFormPresent=function(){if(l.isBlank(this.form))throw new i.BaseException('formGroup expects a FormGroup instance. Please pass one in.\n           Example: <form [formGroup]="myFormGroup">\n      ')},n.decorators=[{type:a.Directive,args:[{selector:"[formGroup]",providers:[e.formDirectiveProvider],host:{"(submit)":"onSubmit()"},exportAs:"ngForm"}]}],n.ctorParameters=[{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[c.NG_VALIDATORS]}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[c.NG_ASYNC_VALIDATORS]}]}],n.propDecorators={form:[{type:a.Input,args:["formGroup"]}],ngSubmit:[{type:a.Output}]},n}(p.ControlContainer);e.FormGroupDirective=h},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(1),o=n(368),r=n(377),i=n(374);e.formGroupNameProvider={provide:i.ControlContainer,useExisting:a.forwardRef(function(){return l})};var l=function(t){function n(e,n,s){t.call(this),this._parent=e,this._validators=n,this._asyncValidators=s}return s(n,t),n.decorators=[{type:a.Directive,args:[{selector:"[formGroupName]",providers:[e.formGroupNameProvider]}]}],n.ctorParameters=[{type:i.ControlContainer,decorators:[{type:a.Host},{type:a.SkipSelf}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[o.NG_VALIDATORS]}]},{type:Array,decorators:[{type:a.Optional},{type:a.Self},{type:a.Inject,args:[o.NG_ASYNC_VALIDATORS]}]}],n.propDecorators={name:[{type:a.Input,args:["formGroupName"]}]},n}(r.AbstractFormGroupDirective);e.FormGroupName=l},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=n(1),a=n(355),o=n(368),r=o.Validators.required;e.REQUIRED_VALIDATOR={provide:o.NG_VALIDATORS,useValue:r,multi:!0};var i=function(){function t(){}return t.decorators=[{type:s.Directive,args:[{selector:"[required][formControlName],[required][formControl],[required][ngModel]",providers:[e.REQUIRED_VALIDATOR]}]}],t}();e.RequiredValidator=i,e.MIN_LENGTH_VALIDATOR={provide:o.NG_VALIDATORS,useExisting:s.forwardRef(function(){return l}),multi:!0};var l=function(){function t(t){this._validator=o.Validators.minLength(a.NumberWrapper.parseInt(t,10))}return t.prototype.validate=function(t){return this._validator(t)},t.decorators=[{type:s.Directive,args:[{selector:"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]",providers:[e.MIN_LENGTH_VALIDATOR]}]}],t.ctorParameters=[{type:void 0,decorators:[{type:s.Attribute,args:["minlength"]}]}],t}();e.MinLengthValidator=l,e.MAX_LENGTH_VALIDATOR={provide:o.NG_VALIDATORS,useExisting:s.forwardRef(function(){return c}),multi:!0};var c=function(){function t(t){this._validator=o.Validators.maxLength(a.NumberWrapper.parseInt(t,10))}return t.prototype.validate=function(t){return this._validator(t)},t.decorators=[{type:s.Directive,args:[{selector:"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]",providers:[e.MAX_LENGTH_VALIDATOR]}]}],t.ctorParameters=[{type:void 0,decorators:[{type:s.Attribute,args:["maxlength"]}]}],t}();e.MaxLengthValidator=c,e.PATTERN_VALIDATOR={provide:o.NG_VALIDATORS,useExisting:s.forwardRef(function(){return p}),multi:!0};var p=function(){function t(t){this._validator=o.Validators.pattern(t)}return t.prototype.validate=function(t){return this._validator(t)},t.decorators=[{type:s.Directive,args:[{selector:"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]",providers:[e.PATTERN_VALIDATOR]}]}],t.ctorParameters=[{type:void 0,decorators:[{type:s.Attribute,args:["pattern"]}]}],t}();e.PatternValidator=p},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";var s=n(1),a=n(361),o=n(355),r=n(366),i=function(){function t(){}return t.prototype.group=function(t,e){void 0===e&&(e=null);var n=this._reduceControls(t),s=o.isPresent(e)?a.StringMapWrapper.get(e,"optionals"):null,i=o.isPresent(e)?a.StringMapWrapper.get(e,"validator"):null,l=o.isPresent(e)?a.StringMapWrapper.get(e,"asyncValidator"):null;return new r.FormGroup(n,s,i,l)},t.prototype.control=function(t,e,n){return void 0===e&&(e=null),void 0===n&&(n=null),new r.FormControl(t,e,n)},t.prototype.array=function(t,e,n){var s=this;void 0===e&&(e=null),void 0===n&&(n=null);var a=t.map(function(t){return s._createControl(t)});return new r.FormArray(a,e,n)},t.prototype._reduceControls=function(t){var e=this,n={};return a.StringMapWrapper.forEach(t,function(t,s){n[s]=e._createControl(t)}),n},t.prototype._createControl=function(t){if(t instanceof r.FormControl||t instanceof r.FormGroup||t instanceof r.FormArray)return t;if(o.isArray(t)){var e=t[0],n=t.length>1?t[1]:null,s=t.length>2?t[2]:null;return this.control(e,n,s)}return this.control(t)},t.decorators=[{type:s.Injectable}],t}();e.FormBuilder=i},function(t,e,n){/**
	 * @license
	 * Copyright Google Inc. All Rights Reserved.
	 *
	 * Use of this source code is governed by an MIT-style license that can be
	 * found in the LICENSE file at https://angular.io/license
	 */
"use strict";function s(t){var e=[];return t.forEach(function(t){Array.isArray(t)?e=e.concat(t):e.push(t)}),e}function a(){return[{provide:i.CompilerConfig,useFactory:function(t,e){var n=s(t);return d.ListWrapper.remove(n,r.FORM_DIRECTIVES),new i.CompilerConfig({platformDirectives:n,platformPipes:e})},deps:[l.PLATFORM_DIRECTIVES,l.PLATFORM_PIPES]}]}function o(){return[{provide:l.PLATFORM_DIRECTIVES,useValue:c.FORM_DIRECTIVES,multi:!0},e.FORM_PROVIDERS]}var r=n(112),i=n(176),l=n(1),c=n(351),p=n(371),d=n(361),h=n(384);e.FORM_PROVIDERS=[h.FormBuilder,p.RadioControlRegistry],e.disableDeprecatedForms=a,e.provideForms=o},function(t,e,n){"use strict";var s=this&&this.__decorate||function(t,e,n,s){var a,o=arguments.length,r=o<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,s);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(r=(o<3?a(r):o>3?a(e,n,r):a(e,n))||r);return o>3&&r&&Object.defineProperty(e,n,r),r},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},o=this&&this.__param||function(t,e){return function(n,s){e(n,s,t)}},r=n(1),i=n(387),l=n(388),c=n(392),p=n(393),d=n(394);e.OVERLAY_CONTAINER_TOKEN=new r.OpaqueToken("overlayContainer");var h=0,u=new i.OverlayState,m=function(){function t(t,e,n){this._componentResolver=e,this._positionBuilder=n,this._overlayContainerElement=t}return t.prototype.create=function(t){var e=this;return void 0===t&&(t=u),this._createPaneElement().then(function(n){return e._createOverlayRef(n,t)})},t.prototype.position=function(){return this._positionBuilder},t.prototype._createPaneElement=function(){var t=document.createElement("div");return t.id="md-overlay-"+h++,t.classList.add("md-overlay-pane"),this._overlayContainerElement.appendChild(t),Promise.resolve(t)},t.prototype._createPortalHost=function(t){return new l.DomPortalHost(t,this._componentResolver)},t.prototype._createOverlayRef=function(t,e){return new c.OverlayRef(this._createPortalHost(t),t,e)},t=s([r.Injectable(),o(0,r.Inject(e.OVERLAY_CONTAINER_TOKEN)),a("design:paramtypes",[Object,r.ComponentResolver,p.OverlayPositionBuilder])],t)}();e.Overlay=m,e.OVERLAY_PROVIDERS=[d.ViewportRuler,p.OverlayPositionBuilder,m]},function(t,e){"use strict";var n=function(){function t(){}return t}();e.OverlayState=n},function(t,e,n){"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(389),o=n(390),r=function(t){function e(e,n){t.call(this),this._hostDomElement=e,this._componentResolver=n}return s(e,t),e.prototype.attachComponentPortal=function(t){var e=this;if(null==t.viewContainerRef)throw new o.MdComponentPortalAttachedToDomWithoutOriginError;return this._componentResolver.resolveComponent(t.component).then(function(n){var s=t.viewContainerRef.createComponent(n,t.viewContainerRef.length,t.viewContainerRef.parentInjector),a=s.hostView;return e._hostDomElement.appendChild(a.rootNodes[0]),e.setDisposeFn(function(){return s.destroy()}),s})},e.prototype.attachTemplatePortal=function(t){var e=this,n=t.viewContainerRef,s=n.createEmbeddedView(t.templateRef);return s.rootNodes.forEach(function(t){return e._hostDomElement.appendChild(t)}),this.setDisposeFn(function(){var t=n.indexOf(s);t!=-1&&n.remove(t)}),Promise.resolve(new Map)},e.prototype.dispose=function(){t.prototype.dispose.call(this),null!=this._hostDomElement.parentNode&&this._hostDomElement.parentNode.removeChild(this._hostDomElement)},e}(a.BasePortalHost);e.DomPortalHost=r},function(t,e,n){"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(390),o=function(){function t(){}return t.prototype.attach=function(t){if(null==t)throw new a.MdNullPortalHostError;if(t.hasAttached())throw new a.MdPortalAlreadyAttachedError;return this._attachedHost=t,t.attach(this)},t.prototype.detach=function(){var t=this._attachedHost;if(null==t)throw new a.MdNoPortalAttachedError;return this._attachedHost=null,t.detach()},Object.defineProperty(t.prototype,"isAttached",{get:function(){return null!=this._attachedHost},enumerable:!0,configurable:!0}),t.prototype.setAttachedHost=function(t){this._attachedHost=t},t}();e.Portal=o;var r=function(t){function e(e,n){void 0===n&&(n=null),t.call(this),this.component=e,this.viewContainerRef=n}return s(e,t),e}(o);e.ComponentPortal=r;var i=function(t){function e(e,n){t.call(this),this.locals=new Map,this.templateRef=e,this.viewContainerRef=n}return s(e,t),Object.defineProperty(e.prototype,"origin",{get:function(){return this.templateRef.elementRef},enumerable:!0,configurable:!0}),e.prototype.attach=function(e,n){return this.locals=null==n?new Map:n,t.prototype.attach.call(this,e)},e.prototype.detach=function(){return this.locals=new Map,t.prototype.detach.call(this)},e}(o);e.TemplatePortal=i;var l=function(){function t(){this._isDisposed=!1}return t.prototype.hasAttached=function(){return null!=this._attachedPortal},t.prototype.attach=function(t){if(null==t)throw new a.MdNullPortalError;if(this.hasAttached())throw new a.MdPortalAlreadyAttachedError;if(this._isDisposed)throw new a.MdPortalHostAlreadyDisposedError;if(t instanceof r)return this._attachedPortal=t,this.attachComponentPortal(t);if(t instanceof i)return this._attachedPortal=t,this.attachTemplatePortal(t);throw new a.MdUnknownPortalTypeError},t.prototype.detach=function(){return this._attachedPortal.setAttachedHost(null),this._attachedPortal=null,null!=this._disposeFn&&(this._disposeFn(),this._disposeFn=null),Promise.resolve(null)},t.prototype.dispose=function(){this.hasAttached()&&this.detach(),this._isDisposed=!0},t.prototype.setDisposeFn=function(t){this._disposeFn=t},t}();e.BasePortalHost=l},function(t,e,n){"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(391),o=function(t){function e(){t.call(this,"A ComponentPortal must have an origin set when attached to a DomPortalHost because the DOM element is not part of the Angular application context.")}return s(e,t),e}(a.MdError);e.MdComponentPortalAttachedToDomWithoutOriginError=o;var r=function(t){function e(){t.call(this,"Must provide a portal to attach")}return s(e,t),e}(a.MdError);e.MdNullPortalError=r;var i=function(t){function e(){t.call(this,"Host already has a portal attached")}return s(e,t),e}(a.MdError);e.MdPortalAlreadyAttachedError=i;var l=function(t){function e(){t.call(this,"This PortalHost has already been disposed")}return s(e,t),e}(a.MdError);e.MdPortalHostAlreadyDisposedError=l;var c=function(t){function e(){t.call(this,"Attempting to attach an unknown Portal type. BasePortalHost accepts either a ComponentPortal or a TemplatePortal.")}return s(e,t),e}(a.MdError);e.MdUnknownPortalTypeError=c;var p=function(t){function e(){t.call(this,"Attmepting to attach a portal to a null PortalHost")}return s(e,t),e}(a.MdError);e.MdNullPortalHostError=p;var d=function(t){function e(){t.call(this,"Attmepting to detach a portal that is not attached to a host")}return s(e,t),e}(a.MdError);e.MdNoPortalAttachedError=d},function(t,e){"use strict";var n=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},s=function(t){function e(e){t.call(this),this.message=e}return n(e,t),e}(Error);e.MdError=s},function(t,e){"use strict";var n=function(){function t(t,e,n){this._portalHost=t,this._pane=e,this._state=n}return t.prototype.attach=function(t){var e=this;return this._portalHost.attach(t).then(function(){e._updatePosition()})},t.prototype.detach=function(){return this._portalHost.detach()},t.prototype.dispose=function(){this._portalHost.dispose()},t.prototype.hasAttached=function(){return this._portalHost.hasAttached()},t.prototype.getState=function(){return this._state},t.prototype._updatePosition=function(){this._state.positionStrategy&&this._state.positionStrategy.apply(this._pane)},t}();e.OverlayRef=n},function(t,e,n){"use strict";var s=this&&this.__decorate||function(t,e,n,s){var a,o=arguments.length,r=o<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,s);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(r=(o<3?a(r):o>3?a(e,n,r):a(e,n))||r);return o>3&&r&&Object.defineProperty(e,n,r),r},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},o=n(394),r=n(395),i=n(1),l=n(398),c=function(){function t(t){this._viewportRuler=t}return t.prototype.global=function(){return new l.GlobalPositionStrategy},t.prototype.connectedTo=function(t,e,n){return new r.ConnectedPositionStrategy(t,e,n,this._viewportRuler)},t=s([i.Injectable(),a("design:paramtypes",[o.ViewportRuler])],t)}();e.OverlayPositionBuilder=c},function(t,e,n){"use strict";var s=this&&this.__decorate||function(t,e,n,s){var a,o=arguments.length,r=o<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,s);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(r=(o<3?a(r):o>3?a(e,n,r):a(e,n))||r);return o>3&&r&&Object.defineProperty(e,n,r),r},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},o=n(1),r=function(){function t(){}return t.prototype.getViewportRect=function(){var t=document.documentElement.getBoundingClientRect(),e=this.getViewportScrollPosition(t),n=window.innerHeight,s=window.innerWidth;return{top:e.top,left:e.left,bottom:e.top+n,right:e.left+s,height:n,width:s}},t.prototype.getViewportScrollPosition=function(t){void 0===t&&(t=document.documentElement.getBoundingClientRect());var e=t.top<0&&0==document.body.scrollTop?-t.top:document.body.scrollTop,n=t.left<0&&0==document.body.scrollLeft?-t.left:document.body.scrollLeft;return{top:e,left:n}},t=s([o.Injectable(),a("design:paramtypes",[])],t)}();e.ViewportRuler=r},function(t,e,n){"use strict";var s=n(396),a=n(397),o=function(){function t(t,e,n,s){this._connectedTo=t,this._originPos=e,this._overlayPos=n,this._viewportRuler=s,this._isRtl=!1,this._preferredPositions=[],this._origin=this._connectedTo.nativeElement,this.withFallbackPosition(e,n)}return Object.defineProperty(t.prototype,"positions",{get:function(){return this._preferredPositions},enumerable:!0,configurable:!0}),t.prototype.apply=function(t){for(var e=this._origin.getBoundingClientRect(),n=t.getBoundingClientRect(),s=this._viewportRuler.getViewportRect(),a=null,o=0,r=this._preferredPositions;o<r.length;o++){var i=r[o],l=this._getOriginConnectionPoint(e,i),c=this._getOverlayPoint(l,n,i);if(a=a||c,this._willOverlayFitWithinViewport(c,n,s))return this._setElementPosition(t,c),Promise.resolve(null)}return this._setElementPosition(t,a),Promise.resolve(null)},t.prototype.withFallbackPosition=function(t,e){return this._preferredPositions.push(new a.ConnectionPositionPair(t,e)),this},t.prototype._getStartX=function(t){return this._isRtl?t.right:t.left},t.prototype._getEndX=function(t){return this._isRtl?t.left:t.right},t.prototype._getOriginConnectionPoint=function(t,e){var n,s=this._getStartX(t),a=this._getEndX(t);n="center"==e.originX?s+t.width/2:"start"==e.originX?s:a;var o;return o="center"==e.originY?t.top+t.height/2:"top"==e.originY?t.top:t.bottom,{x:n,y:o}},t.prototype._getOverlayPoint=function(t,e,n){var s;s="center"==n.overlayX?-e.width/2:"start"==n.overlayX?0:-e.width;var a;return a="center"==n.overlayY?-e.height/2:"top"==n.overlayY?0:-e.height,{x:t.x+s,y:t.y+a}},t.prototype._willOverlayFitWithinViewport=function(t,e,n){return t.x>=n.left&&t.x+e.width<=n.right&&t.y>=n.top&&t.y+e.height<=n.bottom},t.prototype._setElementPosition=function(t,e){var n=this._viewportRuler.getViewportScrollPosition(),a=e.x+n.left,o=e.y+n.top;s.applyCssTransform(t,"translateX("+a+"px) translateY("+o+"px)")},t}();e.ConnectedPositionStrategy=o},function(t,e){"use strict";function n(t,e){var n=e.trim();t.style.transform=n,t.style.webkitTransform=n}e.applyCssTransform=n},function(t,e){"use strict";var n=function(){function t(t,e){this.originX=t.originX,this.originY=t.originY,this.overlayX=e.overlayX,this.overlayY=e.overlayY}return t}();e.ConnectionPositionPair=n},function(t,e,n){"use strict";var s=n(396),a=function(){function t(){this._cssPosition="absolute",this._top="",this._bottom="",this._left="",this._right="",this._translateX=[],this._translateY=[]}return t.prototype.fixed=function(){return this._cssPosition="fixed",this},t.prototype.absolute=function(){return this._cssPosition="absolute",this},t.prototype.top=function(t){return this._bottom="",this._translateY=[],this._top=t,this},t.prototype.left=function(t){return this._right="",this._translateX=[],this._left=t,this},t.prototype.bottom=function(t){return this._top="",this._translateY=[],this._bottom=t,this},t.prototype.right=function(t){return this._left="",this._translateX=[],this._right=t,this},t.prototype.centerHorizontally=function(t){return void 0===t&&(t="0px"),this._left="50%",this._right="",this._translateX=["-50%",t],this},t.prototype.centerVertically=function(t){return void 0===t&&(t="0px"),this._top="50%",this._bottom="",this._translateY=["-50%",t],this},t.prototype.apply=function(t){t.style.position=this._cssPosition,t.style.top=this._top,t.style.left=this._left,t.style.bottom=this._bottom,t.style.right=this._right;var e=this._reduceTranslateValues("translateX",this._translateX),n=this._reduceTranslateValues("translateY",this._translateY);return s.applyCssTransform(t,e+" "+n),Promise.resolve(null)},t.prototype._reduceTranslateValues=function(t,e){return e.map(function(e){return t+"("+e+")"}).join(" ")},t}();e.GlobalPositionStrategy=a},function(t,e){"use strict";function n(){var t=document.createElement("div");return t.classList.add("md-overlay-container"),document.body.appendChild(t),t}e.createOverlayContainer=n},function(t,e,n){"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=this&&this.__decorate||function(t,e,n,s){var a,o=arguments.length,r=o<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,s);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(r=(o<3?a(r):o>3?a(e,n,r):a(e,n))||r);return o>3&&r&&Object.defineProperty(e,n,r),r},o=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},r=n(1),i=n(259),l=function(t){function e(){t.apply(this,arguments),this.events=["drag","dragstart","dragend","dragright","dragleft","longpress"]}return s(e,t),e.prototype.buildHammer=function(t){var e=new Hammer(t),n=new Hammer.Pan({event:"drag",threshold:6}),s=new Hammer.Press({event:"longpress",time:500}),a=new Hammer.Pan,o=new Hammer.Press,r=new Hammer.Swipe;return n.recognizeWith(a),n.recognizeWith(r),a.recognizeWith(r),s.recognizeWith(o),e.add([n,a,r,o,s]),e},e=a([r.Injectable(),o("design:paramtypes",[])],e)}(i.HammerGestureConfig);e.MdGestureConfig=l},function(t,e,n){"use strict";function s(t){return t.cloneNode(!0)}var a=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},o=this&&this.__decorate||function(t,e,n,s){var a,o=arguments.length,r=o<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,s);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(r=(o<3?a(r):o>3?a(e,n,r):a(e,n))||r);return o>3&&r&&Object.defineProperty(e,n,r),r},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},i=n(1),l=n(328),c=n(391),p=n(34);n(402),n(411),n(416),n(418),n(420),n(422),n(427),n(429);var d=function(t){function e(e){t.call(this,'Unable to find icon with the name "'+e+'"')}return a(e,t),e}(c.MdError);e.MdIconNameNotFoundError=d;var h=function(t){function e(){t.call(this,"<svg> tag not found")}return a(e,t),e}(c.MdError);e.MdIconSvgTagNotFoundError=h;var u=function(){function t(t){this.url=t,this.svgElement=null}return t}(),m=function(t,e){return t+":"+e},f=function(){function t(t){this._http=t,this._svgIconConfigs=new Map,this._iconSetConfigs=new Map,this._cachedIconsByUrl=new Map,this._inProgressUrlFetches=new Map,this._fontCssClassesByAlias=new Map,this._defaultFontSetClass="material-icons"}return t.prototype.addSvgIcon=function(t,e){return this.addSvgIconInNamespace("",t,e)},t.prototype.addSvgIconInNamespace=function(t,e,n){var s=m(t,e);return this._svgIconConfigs.set(s,new u(n)),this},t.prototype.addSvgIconSet=function(t){return this.addSvgIconSetInNamespace("",t)},t.prototype.addSvgIconSetInNamespace=function(t,e){var n=new u(e);return this._iconSetConfigs.has(t)?this._iconSetConfigs.get(t).push(n):this._iconSetConfigs.set(t,[n]),this},t.prototype.registerFontClassAlias=function(t,e){return void 0===e&&(e=t),this._fontCssClassesByAlias.set(t,e),this},t.prototype.classNameForFontAlias=function(t){return this._fontCssClassesByAlias.get(t)||t},t.prototype.setDefaultFontSetClass=function(t){return this._defaultFontSetClass=t,this},t.prototype.getDefaultFontSetClass=function(){return this._defaultFontSetClass},t.prototype.getSvgIconFromUrl=function(t){var e=this;return this._cachedIconsByUrl.has(t)?p.Observable.of(s(this._cachedIconsByUrl.get(t))):this._loadSvgIconFromConfig(new u(t))["do"](function(n){return e._cachedIconsByUrl.set(t,n)}).map(function(t){return s(t)})},t.prototype.getNamedSvgIcon=function(t,e){void 0===e&&(e="");var n=m(e,t);if(this._svgIconConfigs.has(n))return this._getSvgFromConfig(this._svgIconConfigs.get(n));var s=this._iconSetConfigs.get(e);return s?this._getSvgFromIconSetConfigs(t,s):p.Observable["throw"](new d(n))},t.prototype._getSvgFromConfig=function(t){return t.svgElement?p.Observable.of(s(t.svgElement)):this._loadSvgIconFromConfig(t)["do"](function(e){return t.svgElement=e}).map(function(t){return s(t)})},t.prototype._getSvgFromIconSetConfigs=function(t,e){var n=this,s=this._extractIconWithNameFromAnySet(t,e);if(s)return p.Observable.of(s);var a=e.filter(function(t){return!t.svgElement}).map(function(t){return n._loadSvgIconSetFromConfig(t)["catch"](function(e,n){return console.log("Loading icon set URL: "+t.url+" failed: "+e),p.Observable.of(null)})["do"](function(e){e&&(t.svgElement=e)})});return p.Observable.forkJoin(a).map(function(s){var a=n._extractIconWithNameFromAnySet(t,e);if(!a)throw new d(t);return a})},t.prototype._extractIconWithNameFromAnySet=function(t,e){for(var n=e.length-1;n>=0;n--){var s=e[n];if(s.svgElement){var a=this._extractSvgIconFromSet(s.svgElement,t,s);if(a)return a}}return null},t.prototype._loadSvgIconFromConfig=function(t){var e=this;return this._fetchUrl(t.url).map(function(n){return e._createSvgElementForSingleIcon(n,t)})},t.prototype._loadSvgIconSetFromConfig=function(t){var e=this;return this._fetchUrl(t.url).map(function(t){return e._svgElementFromString(t)})},t.prototype._createSvgElementForSingleIcon=function(t,e){var n=this._svgElementFromString(t);return this._setSvgAttributes(n,e),n},t.prototype._extractSvgIconFromSet=function(t,e,n){var s=t.querySelector("#"+e);if(!s)return null;if("svg"==s.tagName.toLowerCase())return this._setSvgAttributes(s.cloneNode(!0),n);var a=this._svgElementFromString("<svg></svg>");return a.appendChild(s.cloneNode(!0)),this._setSvgAttributes(a,n)},t.prototype._svgElementFromString=function(t){var e=document.createElement("DIV");e.innerHTML=t;var n=e.querySelector("svg");if(!n)throw new h;return n},t.prototype._setSvgAttributes=function(t,e){return t.getAttribute("xmlns")||t.setAttribute("xmlns","http://www.w3.org/2000/svg"),t.setAttribute("fit",""),t.setAttribute("height","100%"),t.setAttribute("width","100%"),t.setAttribute("preserveAspectRatio","xMidYMid meet"),t.setAttribute("focusable","false"),t},t.prototype._fetchUrl=function(t){var e=this;if(this._inProgressUrlFetches.has(t))return this._inProgressUrlFetches.get(t);var n=this._http.get(t).map(function(t){return t.text()})["finally"](function(){e._inProgressUrlFetches["delete"](t)}).share();return this._inProgressUrlFetches.set(t,n),n},t=o([i.Injectable(),r("design:paramtypes",[l.Http])],t)}();e.MdIconRegistry=f},,,,,,,,,,function(t,e,n){"use strict";var s=n(34),a=n(412);s.Observable.of=a.of},,,,,,,function(t,e,n){"use strict";var s=n(34),a=n(419);s.Observable.prototype.filter=a.filter},function(t,e,n){"use strict";function s(t,e){return this.lift(new r(t,e))}var a=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},o=n(38);e.filter=s;var r=function(){function t(t,e){this.predicate=t,this.thisArg=e}return t.prototype.call=function(t,e){return e._subscribe(new i(t,this.predicate,this.thisArg))},t}(),i=function(t){function e(e,n,s){t.call(this,e),this.predicate=n,this.thisArg=s,this.count=0,this.predicate=n}return a(e,t),e.prototype._next=function(t){var e;try{e=this.predicate.call(this.thisArg,t,this.count++)}catch(n){return void this.destination.error(n)}e&&this.destination.next(t)},e}(o.Subscriber)},function(t,e,n){"use strict";var s=n(34),a=n(421);s.Observable.prototype["do"]=a._do},function(t,e,n){"use strict";function s(t,e,n){return this.lift(new r(t,e,n))}var a=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},o=n(38);e._do=s;var r=function(){function t(t,e,n){this.nextOrObserver=t,this.error=e,this.complete=n}return t.prototype.call=function(t,e){return e._subscribe(new i(t,this.nextOrObserver,this.error,this.complete))},t}(),i=function(t){function e(e,n,s,a){t.call(this,e);var r=new o.Subscriber(n,s,a);r.syncErrorThrowable=!0,this.add(r),this.safeSubscriber=r}return a(e,t),e.prototype._next=function(t){var e=this.safeSubscriber;e.next(t),e.syncErrorThrown?this.destination.error(e.syncErrorValue):this.destination.next(t)},e.prototype._error=function(t){var e=this.safeSubscriber;e.error(t),e.syncErrorThrown?this.destination.error(e.syncErrorValue):this.destination.error(t)},e.prototype._complete=function(){var t=this.safeSubscriber;t.complete(),t.syncErrorThrown?this.destination.error(t.syncErrorValue):this.destination.complete()},e}(o.Subscriber)},function(t,e,n){"use strict";var s=n(34),a=n(423);s.Observable.prototype.share=a.share},function(t,e,n){"use strict";function s(){return new r.Subject}function a(){return o.multicast.call(this,s).refCount()}var o=n(424),r=n(33);e.share=a},function(t,e,n){"use strict";function s(t,e){var n;n="function"==typeof t?t:function(){return t};var s=new o.ConnectableObservable(this,n);return e?new a.MulticastObservable(this,s,e):s}var a=n(425),o=n(426);e.multicast=s},function(t,e,n){"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(34),o=function(t){function e(e,n,s){t.call(this),this.source=e,this.connectable=n,this.selector=s}return s(e,t),e.prototype._subscribe=function(t){var e=this,n=e.selector,s=e.connectable,a=n(s).subscribe(t);return a.add(s.connect()),a},e}(a.Observable);e.MulticastObservable=o},function(t,e,n){"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=n(33),o=n(34),r=n(38),i=n(40),l=function(t){function e(e,n){t.call(this),this.source=e,this.subjectFactory=n,this._refCount=0}return s(e,t),e.prototype._subscribe=function(t){return this.getSubject().subscribe(t)},e.prototype.getSubject=function(){var t=this._subject;return t&&!t.isStopped||(this._subject=this.subjectFactory()),this._subject},e.prototype.connect=function(){var t=this._connection;return t||(t=this._connection=new i.Subscription,t.add(this.source.subscribe(new c(this.getSubject(),this))),t.isUnsubscribed?(this._connection=null,t=i.Subscription.EMPTY):this._connection=t),t},e.prototype.refCount=function(){return this.lift(new p(this))},e}(o.Observable);e.ConnectableObservable=l;var c=function(t){function e(e,n){t.call(this,e),this.connectable=n}return s(e,t),e.prototype._error=function(e){this._unsubscribe(),t.prototype._error.call(this,e)},e.prototype._complete=function(){this._unsubscribe(),t.prototype._complete.call(this)},e.prototype._unsubscribe=function(){var t=this.connectable;if(t){this.connectable=null;var e=t._connection;t._refCount=0,t._subject=null,t._connection=null,e&&e.unsubscribe()}},e}(a.SubjectSubscriber),p=function(){function t(t){this.connectable=t}return t.prototype.call=function(t,e){var n=this.connectable;n._refCount++;var s=new d(t,n),a=e._subscribe(s);return s.isUnsubscribed||(s.connection=n.connect()),a},t}(),d=function(t){function e(e,n){t.call(this,e),this.connectable=n}return s(e,t),e.prototype._unsubscribe=function(){var t=this.connectable;if(!t)return void(this.connection=null);this.connectable=null;var e=t._refCount;if(e<=0)return void(this.connection=null);if(t._refCount=e-1,e>1)return void(this.connection=null);var n=this.connection,s=t._connection;this.connection=null,!s||n&&s!==n||s.unsubscribe()},e}(r.Subscriber)},function(t,e,n){"use strict";var s=n(34),a=n(428);s.Observable.prototype["finally"]=a._finally},function(t,e,n){"use strict";function s(t){return this.lift(new i(t))}var a=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},o=n(38),r=n(40);e._finally=s;var i=function(){function t(t){this.callback=t}return t.prototype.call=function(t,e){return e._subscribe(new l(t,this.callback))},t}(),l=function(t){function e(e,n){t.call(this,e),this.add(new r.Subscription(n))}return a(e,t),e}(o.Subscriber)},function(t,e,n){"use strict";var s=n(34),a=n(430);s.Observable.prototype["catch"]=a._catch},function(t,e,n){"use strict";function s(t){var e=new r(t),n=this.lift(e);return e.caught=n}var a=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},o=n(38);e._catch=s;var r=function(){function t(t){this.selector=t}return t.prototype.call=function(t,e){return e._subscribe(new i(t,this.selector,this.caught))},t}(),i=function(t){function e(e,n,s){t.call(this,e),this.selector=n,this.caught=s}return a(e,t),e.prototype.error=function(t){if(!this.isStopped){var e=void 0;try{e=this.selector(t,this.caught)}catch(t){return void this.destination.error(t)}this._innerSub(e)}},e.prototype._innerSub=function(t){this.unsubscribe(),this.destination.remove(this),t.subscribe(this.destination)},e}(o.Subscriber)},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.App=void 0;var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var s=e[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}return function(e,n,s){return n&&t(e.prototype,n),s&&t(e,s),e}}(),o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},r=n(1),i=n(432),l=n(470),c=n(471),p=n(472),d=n(473),h=function(t,e,n,s){var a,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":o(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(a=t[l])&&(i=(r<3?a(i):r>3?a(e,n,i):a(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},u=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":o(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},m=e.App=function(){function t(e){s(this,t),this.router=e,this.componentsOpened=!1,this.coreOpened=!1}return a(t,[{key:"toggleComponents",value:function(){return this.componentsOpened=!this.componentsOpened,this.toggled=this.componentsOpened?"toggled":"",this.height=this.componentsOpened?"900px":"0",this.transition=this.componentsOpened?"max-height 0.25s ease-in":"",this.componentsOpened}},{key:"toggleCore",value:function(){return this.coreOpened=!this.coreOpened,this.coreToggled=this.coreOpened?"core-toggled":"",this.height=this.coreOpened?"900px":"0",this.transition=this.coreOpened?"max-height 0.25s ease-in":"",this.coreOpened}}]),t}();e.App=m=h([(0,r.Component)({selector:"app",providers:[],pipes:[],directives:[l.MdButton,c.MdIcon,p.MdToolbar,d.MD_SIDENAV_DIRECTIVES,i.ROUTER_DIRECTIVES],templateUrl:"app/app.html",styles:[n(477)]}),u("design:paramtypes",["function"==typeof(f="undefined"!=typeof i.Router&&i.Router)&&f||Object])],m);var f},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e,n){"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=this&&this.__decorate||function(t,e,n,s){var a,o=arguments.length,r=o<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,s);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(r=(o<3?a(r):o>3?a(e,n,r):a(e,n))||r);return o>3&&r&&Object.defineProperty(e,n,r),r},o=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},r=n(1),i=function(){function e(t,e){this.elementRef=t,this.renderer=e,this.isKeyboardFocused=!1,this.isMouseDown=!1}return Object.defineProperty(e.prototype,"color",{get:function(){return this._color},set:function(t){this._updateColor(t)},enumerable:!0,configurable:!0}),e.prototype.setMousedown=function(){var t=this;this.isMouseDown=!0,setTimeout(function(){t.isMouseDown=!1},100)},e.prototype._updateColor=function(t){this._setElementColor(this._color,!1),this._setElementColor(t,!0),this._color=t},e.prototype._setElementColor=function(t,e){null!=t&&""!=t&&this.renderer.setElementClass(this.elementRef.nativeElement,"md-"+t,e)},e.prototype.setKeyboardFocus=function(){this.isKeyboardFocused=!this.isMouseDown},e.prototype.removeKeyboardFocus=function(){this.isKeyboardFocused=!1},e.prototype.focus=function(){this.elementRef.nativeElement.focus()},e=a([r.Component({moduleId:t.id,selector:"button[md-button], button[md-raised-button], button[md-icon-button], button[md-fab], button[md-mini-fab]",inputs:["color"],host:{"[class.md-button-focus]":"isKeyboardFocused","(mousedown)":"setMousedown()","(focus)":"setKeyboardFocus()","(blur)":"removeKeyboardFocus()"},template:'<span class="md-button-wrapper"><ng-content></ng-content></span> ',styles:['/** * A collection of mixins and CSS classes that can be used to apply elevation to a material * element. * See: https://www.google.com/design/spec/what-is-material/elevation-shadows.html * Examples: * * * .md-foo { *   @include $md-elevation(2); * *   &:active { *     @include $md-elevation(8); *   } * } * * <div id="external-card" class="md-elevation-z2"><p>Some content</p></div> * * For an explanation of the design behind how elevation is implemented, see the design doc at * https://goo.gl/Kq0k9Z. */ /** * The css property used for elevation. In most cases this should not be changed. It is exposed * as a variable for abstraction / easy use when needing to reference the property directly, for * example in a will-change rule. */ /** The default duration value for elevation transitions. */ /** The default easing value for elevation transitions. */ /** * Applies the correct css rules to an element to give it the elevation specified by $zValue. * The $zValue must be between 0 and 24. */ /** * Returns a string that can be used as the value for a transition property for elevation. * Calling this function directly is useful in situations where a component needs to transition * more than one property. * * .foo { *   transition: md-elevation-transition-property-value(), opacity 100ms ease; *   will-change: $md-elevation-property, opacity; * } */ /** * Applies the correct css rules needed to have an element transition between elevations. * This mixin should be applied to elements whose elevation values will change depending on their * context (e.g. when active or disabled). */ /** Applies a property to an md-button element for each of the supported palettes. */ /** Applies a focus style to an md-button element for each of the supported palettes. */ [md-raised-button], [md-fab], [md-mini-fab], [md-button], [md-icon-button] { box-sizing: border-box; position: relative; background: transparent; text-align: center; cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; outline: none; border: none; display: inline-block; white-space: nowrap; text-decoration: none; vertical-align: baseline; font-size: 14px; font-family: Roboto, "Helvetica Neue", sans-serif; font-weight: 500; color: currentColor; margin: 0; min-width: 88px; line-height: 36px; padding: 0 16px; border-radius: 3px; } .md-primary[md-raised-button], .md-primary[md-fab], .md-primary[md-mini-fab], .md-primary[md-button], .md-primary[md-icon-button] { color: #009688; } .md-accent[md-raised-button], .md-accent[md-fab], .md-accent[md-mini-fab], .md-accent[md-button], .md-accent[md-icon-button] { color: #9c27b0; } .md-warn[md-raised-button], .md-warn[md-fab], .md-warn[md-mini-fab], .md-warn[md-button], .md-warn[md-icon-button] { color: #f44336; } .md-primary[disabled][md-raised-button], .md-primary[disabled][md-fab], .md-primary[disabled][md-mini-fab], .md-primary[disabled][md-button], .md-primary[disabled][md-icon-button], .md-accent[disabled][md-raised-button], .md-accent[disabled][md-fab], .md-accent[disabled][md-mini-fab], .md-accent[disabled][md-button], .md-accent[disabled][md-icon-button], .md-warn[disabled][md-raised-button], .md-warn[disabled][md-fab], .md-warn[disabled][md-mini-fab], .md-warn[disabled][md-button], .md-warn[disabled][md-icon-button], [disabled][disabled][md-raised-button], [disabled][disabled][md-fab], [disabled][disabled][md-mini-fab], [disabled][disabled][md-button], [disabled][disabled][md-icon-button] { color: rgba(0, 0, 0, 0.38); } [disabled][md-raised-button], [disabled][md-fab], [disabled][md-mini-fab], [disabled][md-button], [disabled][md-icon-button] { cursor: default; } .md-button-focus[md-raised-button]::after, .md-button-focus[md-fab]::after, .md-button-focus[md-mini-fab]::after, .md-button-focus[md-button]::after, .md-button-focus[md-icon-button]::after { position: absolute; top: 0; left: 0; bottom: 0; right: 0; content: \'\'; background-color: rgba(0, 0, 0, 0.12); border-radius: inherit; pointer-events: none; } .md-button-focus.md-primary[md-raised-button]::after, .md-button-focus.md-primary[md-fab]::after, .md-button-focus.md-primary[md-mini-fab]::after, .md-button-focus.md-primary[md-button]::after, .md-button-focus.md-primary[md-icon-button]::after { background-color: rgba(0, 150, 136, 0.12); } .md-button-focus.md-accent[md-raised-button]::after, .md-button-focus.md-accent[md-fab]::after, .md-button-focus.md-accent[md-mini-fab]::after, .md-button-focus.md-accent[md-button]::after, .md-button-focus.md-accent[md-icon-button]::after { background-color: rgba(156, 39, 176, 0.12); } .md-button-focus.md-warn[md-raised-button]::after, .md-button-focus.md-warn[md-fab]::after, .md-button-focus.md-warn[md-mini-fab]::after, .md-button-focus.md-warn[md-button]::after, .md-button-focus.md-warn[md-icon-button]::after { background-color: rgba(244, 67, 54, 0.12); } [md-raised-button], [md-fab], [md-mini-fab] { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); background-color: #fafafa; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); -webkit-transition: background 400ms cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); transition: background 400ms cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); } .md-primary[md-raised-button], .md-primary[md-fab], .md-primary[md-mini-fab] { color: white; } .md-accent[md-raised-button], .md-accent[md-fab], .md-accent[md-mini-fab] { color: rgba(255, 255, 255, 0.870588); } .md-warn[md-raised-button], .md-warn[md-fab], .md-warn[md-mini-fab] { color: white; } .md-primary[disabled][md-raised-button], .md-primary[disabled][md-fab], .md-primary[disabled][md-mini-fab], .md-accent[disabled][md-raised-button], .md-accent[disabled][md-fab], .md-accent[disabled][md-mini-fab], .md-warn[disabled][md-raised-button], .md-warn[disabled][md-fab], .md-warn[disabled][md-mini-fab], [disabled][disabled][md-raised-button], [disabled][disabled][md-fab], [disabled][disabled][md-mini-fab] { color: rgba(0, 0, 0, 0.38); } .md-primary[md-raised-button], .md-primary[md-fab], .md-primary[md-mini-fab] { background-color: #009688; } .md-accent[md-raised-button], .md-accent[md-fab], .md-accent[md-mini-fab] { background-color: #9c27b0; } .md-warn[md-raised-button], .md-warn[md-fab], .md-warn[md-mini-fab] { background-color: #f44336; } .md-primary[disabled][md-raised-button], .md-primary[disabled][md-fab], .md-primary[disabled][md-mini-fab], .md-accent[disabled][md-raised-button], .md-accent[disabled][md-fab], .md-accent[disabled][md-mini-fab], .md-warn[disabled][md-raised-button], .md-warn[disabled][md-fab], .md-warn[disabled][md-mini-fab], [disabled][disabled][md-raised-button], [disabled][disabled][md-fab], [disabled][disabled][md-mini-fab] { background-color: rgba(0, 0, 0, 0.12); } [md-raised-button]:active, [md-fab]:active, [md-mini-fab]:active { box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); } [disabled][md-raised-button], [disabled][md-fab], [disabled][md-mini-fab] { box-shadow: none; } [md-button][disabled]:hover.md-primary, [md-button][disabled]:hover.md-accent, [md-button][disabled]:hover.md-warn, [md-button][disabled]:hover:hover { background-color: transparent; } [md-fab] { min-width: 0; border-radius: 50%; background-color: #9c27b0; color: rgba(255, 255, 255, 0.870588); width: 56px; height: 56px; padding: 0; } [md-fab] i, [md-fab] md-icon { padding: 16px 0; } [md-mini-fab] { min-width: 0; border-radius: 50%; background-color: #9c27b0; color: rgba(255, 255, 255, 0.870588); width: 40px; height: 40px; padding: 0; } [md-mini-fab] i, [md-mini-fab] md-icon { padding: 8px 0; } [md-icon-button] { min-width: 0; padding: 0; width: 40px; height: 40px; line-height: 24px; border-radius: 50%; } [md-icon-button] .md-button-wrapper > * { vertical-align: middle; } [md-button]:hover::after, [md-icon-button]:hover::after { position: absolute; top: 0; left: 0; bottom: 0; right: 0; content: \'\'; background-color: rgba(0, 0, 0, 0.12); border-radius: inherit; pointer-events: none; } [md-button]:hover.md-primary::after, [md-icon-button]:hover.md-primary::after { background-color: rgba(0, 150, 136, 0.12); } [md-button]:hover.md-accent::after, [md-icon-button]:hover.md-accent::after { background-color: rgba(156, 39, 176, 0.12); } [md-button]:hover.md-warn::after, [md-icon-button]:hover.md-warn::after { background-color: rgba(244, 67, 54, 0.12); } @media screen and (-ms-high-contrast: active) { .md-raised-button, .md-fab, .md-mini-fab { border: 1px solid #fff; } } '],
encapsulation:r.ViewEncapsulation.None,changeDetection:r.ChangeDetectionStrategy.OnPush}),o("design:paramtypes",[r.ElementRef,r.Renderer])],e)}();e.MdButton=i;var l=function(e){function n(t,n){e.call(this,t,n),this._disabled=null}return s(n,e),Object.defineProperty(n.prototype,"tabIndex",{get:function(){return this.disabled?-1:0},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"isAriaDisabled",{get:function(){return this.disabled?"true":"false"},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"disabled",{get:function(){return this._disabled},set:function(t){this._disabled=null!=t&&0!=t||null},enumerable:!0,configurable:!0}),n.prototype.haltDisabledEvents=function(t){this.disabled&&(t.preventDefault(),t.stopImmediatePropagation())},a([r.HostBinding("tabIndex"),o("design:type",Number)],n.prototype,"tabIndex",null),a([r.HostBinding("attr.aria-disabled"),o("design:type",String)],n.prototype,"isAriaDisabled",null),a([r.HostBinding("attr.disabled"),r.Input("disabled"),o("design:type",Object)],n.prototype,"disabled",null),n=a([r.Component({moduleId:t.id,selector:"a[md-button], a[md-raised-button], a[md-icon-button], a[md-fab], a[md-mini-fab]",inputs:["color"],host:{"[class.md-button-focus]":"isKeyboardFocused","(mousedown)":"setMousedown()","(focus)":"setKeyboardFocus()","(blur)":"removeKeyboardFocus()","(click)":"haltDisabledEvents($event)"},template:'<span class="md-button-wrapper"><ng-content></ng-content></span> ',styles:['/** * A collection of mixins and CSS classes that can be used to apply elevation to a material * element. * See: https://www.google.com/design/spec/what-is-material/elevation-shadows.html * Examples: * * * .md-foo { *   @include $md-elevation(2); * *   &:active { *     @include $md-elevation(8); *   } * } * * <div id="external-card" class="md-elevation-z2"><p>Some content</p></div> * * For an explanation of the design behind how elevation is implemented, see the design doc at * https://goo.gl/Kq0k9Z. */ /** * The css property used for elevation. In most cases this should not be changed. It is exposed * as a variable for abstraction / easy use when needing to reference the property directly, for * example in a will-change rule. */ /** The default duration value for elevation transitions. */ /** The default easing value for elevation transitions. */ /** * Applies the correct css rules to an element to give it the elevation specified by $zValue. * The $zValue must be between 0 and 24. */ /** * Returns a string that can be used as the value for a transition property for elevation. * Calling this function directly is useful in situations where a component needs to transition * more than one property. * * .foo { *   transition: md-elevation-transition-property-value(), opacity 100ms ease; *   will-change: $md-elevation-property, opacity; * } */ /** * Applies the correct css rules needed to have an element transition between elevations. * This mixin should be applied to elements whose elevation values will change depending on their * context (e.g. when active or disabled). */ /** Applies a property to an md-button element for each of the supported palettes. */ /** Applies a focus style to an md-button element for each of the supported palettes. */ [md-raised-button], [md-fab], [md-mini-fab], [md-button], [md-icon-button] { box-sizing: border-box; position: relative; background: transparent; text-align: center; cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; outline: none; border: none; display: inline-block; white-space: nowrap; text-decoration: none; vertical-align: baseline; font-size: 14px; font-family: Roboto, "Helvetica Neue", sans-serif; font-weight: 500; color: currentColor; margin: 0; min-width: 88px; line-height: 36px; padding: 0 16px; border-radius: 3px; } .md-primary[md-raised-button], .md-primary[md-fab], .md-primary[md-mini-fab], .md-primary[md-button], .md-primary[md-icon-button] { color: #009688; } .md-accent[md-raised-button], .md-accent[md-fab], .md-accent[md-mini-fab], .md-accent[md-button], .md-accent[md-icon-button] { color: #9c27b0; } .md-warn[md-raised-button], .md-warn[md-fab], .md-warn[md-mini-fab], .md-warn[md-button], .md-warn[md-icon-button] { color: #f44336; } .md-primary[disabled][md-raised-button], .md-primary[disabled][md-fab], .md-primary[disabled][md-mini-fab], .md-primary[disabled][md-button], .md-primary[disabled][md-icon-button], .md-accent[disabled][md-raised-button], .md-accent[disabled][md-fab], .md-accent[disabled][md-mini-fab], .md-accent[disabled][md-button], .md-accent[disabled][md-icon-button], .md-warn[disabled][md-raised-button], .md-warn[disabled][md-fab], .md-warn[disabled][md-mini-fab], .md-warn[disabled][md-button], .md-warn[disabled][md-icon-button], [disabled][disabled][md-raised-button], [disabled][disabled][md-fab], [disabled][disabled][md-mini-fab], [disabled][disabled][md-button], [disabled][disabled][md-icon-button] { color: rgba(0, 0, 0, 0.38); } [disabled][md-raised-button], [disabled][md-fab], [disabled][md-mini-fab], [disabled][md-button], [disabled][md-icon-button] { cursor: default; } .md-button-focus[md-raised-button]::after, .md-button-focus[md-fab]::after, .md-button-focus[md-mini-fab]::after, .md-button-focus[md-button]::after, .md-button-focus[md-icon-button]::after { position: absolute; top: 0; left: 0; bottom: 0; right: 0; content: \'\'; background-color: rgba(0, 0, 0, 0.12); border-radius: inherit; pointer-events: none; } .md-button-focus.md-primary[md-raised-button]::after, .md-button-focus.md-primary[md-fab]::after, .md-button-focus.md-primary[md-mini-fab]::after, .md-button-focus.md-primary[md-button]::after, .md-button-focus.md-primary[md-icon-button]::after { background-color: rgba(0, 150, 136, 0.12); } .md-button-focus.md-accent[md-raised-button]::after, .md-button-focus.md-accent[md-fab]::after, .md-button-focus.md-accent[md-mini-fab]::after, .md-button-focus.md-accent[md-button]::after, .md-button-focus.md-accent[md-icon-button]::after { background-color: rgba(156, 39, 176, 0.12); } .md-button-focus.md-warn[md-raised-button]::after, .md-button-focus.md-warn[md-fab]::after, .md-button-focus.md-warn[md-mini-fab]::after, .md-button-focus.md-warn[md-button]::after, .md-button-focus.md-warn[md-icon-button]::after { background-color: rgba(244, 67, 54, 0.12); } [md-raised-button], [md-fab], [md-mini-fab] { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); background-color: #fafafa; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); -webkit-transition: background 400ms cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); transition: background 400ms cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); } .md-primary[md-raised-button], .md-primary[md-fab], .md-primary[md-mini-fab] { color: white; } .md-accent[md-raised-button], .md-accent[md-fab], .md-accent[md-mini-fab] { color: rgba(255, 255, 255, 0.870588); } .md-warn[md-raised-button], .md-warn[md-fab], .md-warn[md-mini-fab] { color: white; } .md-primary[disabled][md-raised-button], .md-primary[disabled][md-fab], .md-primary[disabled][md-mini-fab], .md-accent[disabled][md-raised-button], .md-accent[disabled][md-fab], .md-accent[disabled][md-mini-fab], .md-warn[disabled][md-raised-button], .md-warn[disabled][md-fab], .md-warn[disabled][md-mini-fab], [disabled][disabled][md-raised-button], [disabled][disabled][md-fab], [disabled][disabled][md-mini-fab] { color: rgba(0, 0, 0, 0.38); } .md-primary[md-raised-button], .md-primary[md-fab], .md-primary[md-mini-fab] { background-color: #009688; } .md-accent[md-raised-button], .md-accent[md-fab], .md-accent[md-mini-fab] { background-color: #9c27b0; } .md-warn[md-raised-button], .md-warn[md-fab], .md-warn[md-mini-fab] { background-color: #f44336; } .md-primary[disabled][md-raised-button], .md-primary[disabled][md-fab], .md-primary[disabled][md-mini-fab], .md-accent[disabled][md-raised-button], .md-accent[disabled][md-fab], .md-accent[disabled][md-mini-fab], .md-warn[disabled][md-raised-button], .md-warn[disabled][md-fab], .md-warn[disabled][md-mini-fab], [disabled][disabled][md-raised-button], [disabled][disabled][md-fab], [disabled][disabled][md-mini-fab] { background-color: rgba(0, 0, 0, 0.12); } [md-raised-button]:active, [md-fab]:active, [md-mini-fab]:active { box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); } [disabled][md-raised-button], [disabled][md-fab], [disabled][md-mini-fab] { box-shadow: none; } [md-button][disabled]:hover.md-primary, [md-button][disabled]:hover.md-accent, [md-button][disabled]:hover.md-warn, [md-button][disabled]:hover:hover { background-color: transparent; } [md-fab] { min-width: 0; border-radius: 50%; background-color: #9c27b0; color: rgba(255, 255, 255, 0.870588); width: 56px; height: 56px; padding: 0; } [md-fab] i, [md-fab] md-icon { padding: 16px 0; } [md-mini-fab] { min-width: 0; border-radius: 50%; background-color: #9c27b0; color: rgba(255, 255, 255, 0.870588); width: 40px; height: 40px; padding: 0; } [md-mini-fab] i, [md-mini-fab] md-icon { padding: 8px 0; } [md-icon-button] { min-width: 0; padding: 0; width: 40px; height: 40px; line-height: 24px; border-radius: 50%; } [md-icon-button] .md-button-wrapper > * { vertical-align: middle; } [md-button]:hover::after, [md-icon-button]:hover::after { position: absolute; top: 0; left: 0; bottom: 0; right: 0; content: \'\'; background-color: rgba(0, 0, 0, 0.12); border-radius: inherit; pointer-events: none; } [md-button]:hover.md-primary::after, [md-icon-button]:hover.md-primary::after { background-color: rgba(0, 150, 136, 0.12); } [md-button]:hover.md-accent::after, [md-icon-button]:hover.md-accent::after { background-color: rgba(156, 39, 176, 0.12); } [md-button]:hover.md-warn::after, [md-icon-button]:hover.md-warn::after { background-color: rgba(244, 67, 54, 0.12); } @media screen and (-ms-high-contrast: active) { .md-raised-button, .md-fab, .md-mini-fab { border: 1px solid #fff; } } '],encapsulation:r.ViewEncapsulation.None}),o("design:paramtypes",[r.ElementRef,r.Renderer])],n)}(i);e.MdAnchor=l,e.MD_BUTTON_DIRECTIVES=[i,l]},function(t,e,n){"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=this&&this.__decorate||function(t,e,n,s){var a,o=arguments.length,r=o<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,s);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(r=(o<3?a(r):o>3?a(e,n,r):a(e,n))||r);return o>3&&r&&Object.defineProperty(e,n,r),r},o=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},r=n(1),i=n(391),l=n(401),c=n(401);e.MdIconRegistry=c.MdIconRegistry;var p=function(t){function e(e){t.call(this,'Invalid icon name: "'+e+'"')}return s(e,t),e}(i.MdError);e.MdIconInvalidNameError=p;var d=function(){function e(t,e,n){this._element=t,this._renderer=e,this._mdIconRegistry=n,this.hostAriaLabel=""}return e.prototype._splitIconName=function(t){if(!t)return["",""];var e=t.split(":");switch(e.length){case 1:return["",e[0]];case 2:return e;default:throw new p(t)}},e.prototype.ngOnChanges=function(t){var e=this,n=Object.keys(t);if(n.indexOf("svgIcon")!=-1||n.indexOf("svgSrc")!=-1)if(this.svgIcon){var s=this._splitIconName(this.svgIcon),a=s[0],o=s[1];this._mdIconRegistry.getNamedSvgIcon(o,a).subscribe(function(t){return e._setSvgElement(t)},function(t){return console.log("Error retrieving icon: "+t)})}else this.svgSrc&&this._mdIconRegistry.getSvgIconFromUrl(this.svgSrc).subscribe(function(t){return e._setSvgElement(t)},function(t){return console.log("Error retrieving icon: "+t)});this._usingFontIcon()&&this._updateFontIconClasses(),this._updateAriaLabel()},e.prototype.ngOnInit=function(){this._usingFontIcon()&&this._updateFontIconClasses()},e.prototype.ngAfterViewChecked=function(){this._updateAriaLabel()},e.prototype._updateAriaLabel=function(){var t=this._getAriaLabel();t&&this._renderer.setElementAttribute(this._element.nativeElement,"aria-label",t)},e.prototype._getAriaLabel=function(){var t=this.hostAriaLabel||this.alt||this.fontIcon||this._splitIconName(this.svgIcon)[1];if(t)return t;if(this._usingFontIcon()){var e=this._element.nativeElement.textContent;if(e)return e}return null},e.prototype._usingFontIcon=function(){return!(this.svgIcon||this.svgSrc)},e.prototype._setSvgElement=function(t){var e=this._element.nativeElement;e.innerHTML="",this._renderer.projectNodes(e,[t])},e.prototype._updateFontIconClasses=function(){if(this._usingFontIcon()){var t=this._element.nativeElement,e=this.fontSet?this._mdIconRegistry.classNameForFontAlias(this.fontSet):this._mdIconRegistry.getDefaultFontSetClass();e!=this._previousFontSetClass&&(this._previousFontSetClass&&this._renderer.setElementClass(t,this._previousFontSetClass,!1),e&&this._renderer.setElementClass(t,e,!0),this._previousFontSetClass=e),this.fontIcon!=this._previousFontIconClass&&(this._previousFontIconClass&&this._renderer.setElementClass(t,this._previousFontIconClass,!1),this.fontIcon&&this._renderer.setElementClass(t,this.fontIcon,!0),this._previousFontIconClass=this.fontIcon)}},a([r.Input(),o("design:type",String)],e.prototype,"svgSrc",void 0),a([r.Input(),o("design:type",String)],e.prototype,"svgIcon",void 0),a([r.Input(),o("design:type",String)],e.prototype,"fontSet",void 0),a([r.Input(),o("design:type",String)],e.prototype,"fontIcon",void 0),a([r.Input(),o("design:type",String)],e.prototype,"alt",void 0),a([r.Input("aria-label"),o("design:type",String)],e.prototype,"hostAriaLabel",void 0),e=a([r.Component({moduleId:t.id,template:"<ng-content></ng-content>",selector:"md-icon",styles:['/** The width/height of the icon element. */ /** This works because we\'re using ViewEncapsulation.None. If we used the default encapsulation, the selector would need to be ":host". */ md-icon { background-repeat: no-repeat; display: inline-block; fill: currentColor; height: 24px; width: 24px; } '],host:{role:"img"},encapsulation:r.ViewEncapsulation.None,changeDetection:r.ChangeDetectionStrategy.OnPush}),o("design:paramtypes",[r.ElementRef,r.Renderer,l.MdIconRegistry])],e)}();e.MdIcon=d,e.MD_ICON_DIRECTIVES=[d]},function(t,e,n){"use strict";var s=this&&this.__decorate||function(t,e,n,s){var a,o=arguments.length,r=o<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,s);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(r=(o<3?a(r):o>3?a(e,n,r):a(e,n))||r);return o>3&&r&&Object.defineProperty(e,n,r),r},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},o=n(1),r=n(1),i=n(1),l=function(){function e(t,e){this.elementRef=t,this.renderer=e}return Object.defineProperty(e.prototype,"color",{get:function(){return this._color},set:function(t){this._updateColor(t)},enumerable:!0,configurable:!0}),e.prototype._updateColor=function(t){this._setElementColor(this._color,!1),this._setElementColor(t,!0),this._color=t},e.prototype._setElementColor=function(t,e){null!=t&&""!=t&&this.renderer.setElementClass(this.elementRef.nativeElement,"md-"+t,e)},s([o.Input(),a("design:type",String)],e.prototype,"color",null),e=s([o.Component({moduleId:t.id,selector:"md-toolbar",template:'<div class="md-toolbar-layout"> <md-toolbar-row> <ng-content></ng-content> </md-toolbar-row> <ng-content select="md-toolbar-row"></ng-content> </div>',styles:["/** * Mixin that creates a new stacking context. * see https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context */ /** * This mixin hides an element visually. * That means it's still accessible for screen-readers but not visible in view. */ /** * Forces an element to grow to fit floated contents; used as as an alternative to * `overflow: hidden;` because it doesn't cut off contents. */ /** * A mixin, which generates temporary ink ripple on a given component. * When $bindToParent is set to true, it will check for the focused class on the same selector as you included * that mixin. * It is also possible to specify the color palette of the temporary ripple. By default it uses the * accent palette for its background. */ md-toolbar { display: -webkit-box; display: -ms-flexbox; display: flex; box-sizing: border-box; width: 100%; min-height: 64px; font-size: 20px; font-weight: 400; font-family: Roboto, \"Helvetica Neue\", sans-serif; padding: 0 16px; -webkit-box-orient: vertical; -webkit-box-direction: normal; -ms-flex-direction: column; flex-direction: column; background: whitesmoke; color: rgba(0, 0, 0, 0.87); } md-toolbar.md-primary { background: #009688; color: white; } md-toolbar.md-accent { background: #9c27b0; color: rgba(255, 255, 255, 0.870588); } md-toolbar.md-warn { background: #f44336; color: white; } md-toolbar md-toolbar-row { display: -webkit-box; display: -ms-flexbox; display: flex; box-sizing: border-box; width: 100%; height: 64px; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -ms-flex-direction: row; flex-direction: row; -webkit-box-align: center; -ms-flex-align: center; align-items: center; } "],changeDetection:o.ChangeDetectionStrategy.OnPush,encapsulation:o.ViewEncapsulation.None}),a("design:paramtypes",[i.ElementRef,r.Renderer])],e)}();e.MdToolbar=l,e.MD_TOOLBAR_DIRECTIVES=[l]},function(t,e,n){"use strict";var s=this&&this.__extends||function(t,e){function n(){this.constructor=t}for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s]);t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)},a=this&&this.__decorate||function(t,e,n,s){var a,o=arguments.length,r=o<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,s);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(r=(o<3?a(r):o>3?a(e,n,r):a(e,n))||r);return o>3&&r&&Object.defineProperty(e,n,r),r},o=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},r=this&&this.__param||function(t,e){return function(n,s){e(n,s,t)}},i=n(1),l=n(112),c=n(474),p=n(475),d=n(391),h=n(476),u=function(t){function e(e){t.call(this,"A sidenav was already declared for 'align=\""+e+"\"'")}return s(e,t),e}(d.MdError);e.MdDuplicatedSidenavError=u;var m=function(){function e(t){this._elementRef=t,this.align="start",this.mode="over",this._opened=!1,this.onOpenStart=new i.EventEmitter,this.onOpen=new i.EventEmitter,this.onCloseStart=new i.EventEmitter,this.onClose=new i.EventEmitter,this._transition=!1}return Object.defineProperty(e.prototype,"opened",{get:function(){return this._opened},set:function(t){this.toggle(t)},enumerable:!0,configurable:!0}),e.prototype.open=function(){return this.toggle(!0)},e.prototype.close=function(){return this.toggle(!1)},e.prototype.toggle=function(t){if(void 0===t&&(t=!this.opened),t===this.opened)return this._transition?t?this._openPromise:this._closePromise:Promise.resolve(null);if(this._opened=t,this._transition=!0,t?this.onOpenStart.emit(null):this.onCloseStart.emit(null),t){if(null==this._openPromise){var e=new p.PromiseCompleter;this._openPromise=e.promise,this._openPromiseReject=e.reject,this._openPromiseResolve=e.resolve}return this._openPromise}if(null==this._closePromise){var e=new p.PromiseCompleter;this._closePromise=e.promise,this._closePromiseReject=e.reject,this._closePromiseResolve=e.resolve}return this._closePromise},e.prototype.onTransitionEnd=function(t){t.target==this._elementRef.nativeElement&&t.propertyName.endsWith("transform")&&(this._transition=!1,this._opened?(null!=this._openPromise&&this._openPromiseResolve(),null!=this._closePromise&&this._closePromiseReject(),this.onOpen.emit(null)):(null!=this._closePromise&&this._closePromiseResolve(),null!=this._openPromise&&this._openPromiseReject(),this.onClose.emit(null)),this._openPromise=null,this._closePromise=null)},Object.defineProperty(e.prototype,"_isClosing",{get:function(){return!this._opened&&this._transition},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_isOpening",{get:function(){return this._opened&&this._transition},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_isClosed",{get:function(){return!this._opened&&!this._transition},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_isOpened",{get:function(){return this._opened&&!this._transition},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_isEnd",{get:function(){return"end"==this.align},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_modeSide",{get:function(){return"side"==this.mode},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_modeOver",{get:function(){return"over"==this.mode},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"_modePush",{get:function(){return"push"==this.mode},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){return this._elementRef.nativeElement?this._elementRef.nativeElement.offsetWidth:0},enumerable:!0,configurable:!0}),a([i.Input(),o("design:type",Object)],e.prototype,"align",void 0),a([i.Input(),o("design:type",Object)],e.prototype,"mode",void 0),a([i.Input("opened"),h.BooleanFieldValue(),o("design:type",Boolean)],e.prototype,"_opened",void 0),a([i.Output("open-start"),o("design:type",Object)],e.prototype,"onOpenStart",void 0),a([i.Output("open"),o("design:type",Object)],e.prototype,"onOpen",void 0),a([i.Output("close-start"),o("design:type",Object)],e.prototype,"onCloseStart",void 0),a([i.Output("close"),o("design:type",Object)],e.prototype,"onClose",void 0),a([i.HostBinding("class.md-sidenav-closing"),o("design:type",Object)],e.prototype,"_isClosing",null),a([i.HostBinding("class.md-sidenav-opening"),o("design:type",Object)],e.prototype,"_isOpening",null),a([i.HostBinding("class.md-sidenav-closed"),o("design:type",Object)],e.prototype,"_isClosed",null),a([i.HostBinding("class.md-sidenav-opened"),o("design:type",Object)],e.prototype,"_isOpened",null),a([i.HostBinding("class.md-sidenav-end"),o("design:type",Object)],e.prototype,"_isEnd",null),a([i.HostBinding("class.md-sidenav-side"),o("design:type",Object)],e.prototype,"_modeSide",null),a([i.HostBinding("class.md-sidenav-over"),o("design:type",Object)],e.prototype,"_modeOver",null),a([i.HostBinding("class.md-sidenav-push"),o("design:type",Object)],e.prototype,"_modePush",null),e=a([i.Component({moduleId:t.id,selector:"md-sidenav",template:"<ng-content></ng-content>",host:{"(transitionend)":"onTransitionEnd($event)"},changeDetection:i.ChangeDetectionStrategy.OnPush}),o("design:paramtypes",[i.ElementRef])],e)}();e.MdSidenav=m;var f=function(){function e(t,e,n){var s=this;this._dir=t,this._element=e,this._renderer=n,null!=t&&t.dirChange.subscribe(function(){return s._validateDrawers()})}return Object.defineProperty(e.prototype,"start",{get:function(){return this._start},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"end",{get:function(){return this._end},enumerable:!0,configurable:!0}),e.prototype.ngAfterContentInit=function(){var t=this;this._sidenavs.changes.subscribe(function(){return t._validateDrawers()}),this._sidenavs.forEach(function(e){return t._watchSidenavToggle(e)}),this._validateDrawers()},e.prototype._watchSidenavToggle=function(t){var e=this;t&&"side"!==t.mode&&(t.onOpen.subscribe(function(){return e._setLayoutClass(t,!0)}),t.onClose.subscribe(function(){return e._setLayoutClass(t,!1)}))},e.prototype._setLayoutClass=function(t,e){this._renderer.setElementClass(this._element.nativeElement,"md-sidenav-opened",e)},e.prototype._validateDrawers=function(){var t=this;this._start=this._end=null,this._sidenavs.forEach(function(e){if("end"==e.align){if(null!=t._end)throw new u("end");t._end=e}else{if(null!=t._start)throw new u("start");t._start=e}}),this._right=this._left=null,null==this._dir||"ltr"==this._dir.value?(this._left=this._start,this._right=this._end):(this._left=this._end,this._right=this._start)},e.prototype.closeModalSidenav=function(){null!=this._start&&"side"!=this._start.mode&&this._start.close(),null!=this._end&&"side"!=this._end.mode&&this._end.close()},e.prototype.isShowingBackdrop=function(){return this._isSidenavOpen(this._start)&&"side"!=this._start.mode||this._isSidenavOpen(this._end)&&"side"!=this._end.mode},e.prototype._isSidenavOpen=function(t){return null!=t&&t.opened},e.prototype._getSidenavEffectiveWidth=function(t,e){return this._isSidenavOpen(t)&&t.mode==e?t.width:0},e.prototype.getMarginLeft=function(){return this._getSidenavEffectiveWidth(this._left,"side")},e.prototype.getMarginRight=function(){return this._getSidenavEffectiveWidth(this._right,"side")},e.prototype.getPositionLeft=function(){return this._getSidenavEffectiveWidth(this._left,"push")},e.prototype.getPositionRight=function(){return this._getSidenavEffectiveWidth(this._right,"push")},e.prototype.getPositionOffset=function(){return this.getPositionLeft()-this.getPositionRight()},e.prototype.getStyles=function(){return{marginLeft:this.getMarginLeft()+"px",marginRight:this.getMarginRight()+"px",transform:"translate3d("+this.getPositionOffset()+"px, 0, 0)"}},a([i.ContentChildren(m),o("design:type",i.QueryList)],e.prototype,"_sidenavs",void 0),e=a([i.Component({moduleId:t.id,selector:"md-sidenav-layout",directives:[m,l.NgStyle],template:'<div class="md-sidenav-backdrop" (click)="closeModalSidenav()" [class.md-sidenav-shown]="isShowingBackdrop()"></div> <ng-content select="md-sidenav"></ng-content> <md-content [ngStyle]="getStyles()"> <ng-content></ng-content> </md-content> ',styles:["/** * Mixin that creates a new stacking context. * see https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context */ /** * This mixin hides an element visually. * That means it's still accessible for screen-readers but not visible in view. */ /** * Forces an element to grow to fit floated contents; used as as an alternative to * `overflow: hidden;` because it doesn't cut off contents. */ /** * A mixin, which generates temporary ink ripple on a given component. * When $bindToParent is set to true, it will check for the focused class on the same selector as you included * that mixin. * It is also possible to specify the color palette of the temporary ripple. By default it uses the * accent palette for its background. */ /** * A collection of mixins and CSS classes that can be used to apply elevation to a material * element. * See: https://www.google.com/design/spec/what-is-material/elevation-shadows.html * Examples: * * * .md-foo { *   @include $md-elevation(2); * *   &:active { *     @include $md-elevation(8); *   } * } * * <div id=\"external-card\" class=\"md-elevation-z2\"><p>Some content</p></div> * * For an explanation of the design behind how elevation is implemented, see the design doc at * https://goo.gl/Kq0k9Z. */ /** * The css property used for elevation. In most cases this should not be changed. It is exposed * as a variable for abstraction / easy use when needing to reference the property directly, for * example in a will-change rule. */ /** The default duration value for elevation transitions. */ /** The default easing value for elevation transitions. */ /** * Applies the correct css rules to an element to give it the elevation specified by $zValue. * The $zValue must be between 0 and 24. */ /** * Returns a string that can be used as the value for a transition property for elevation. * Calling this function directly is useful in situations where a component needs to transition * more than one property. * * .foo { *   transition: md-elevation-transition-property-value(), opacity 100ms ease; *   will-change: $md-elevation-property, opacity; * } */ /** * Applies the correct css rules needed to have an element transition between elevations. * This mixin should be applied to elements whose elevation values will change depending on their * context (e.g. when active or disabled). */ /** * Mixin to help with defining LTR/RTL 'transform: translate3d()' values. * @param $open The translation value when the sidenav is opened. * @param $close The translation value when the sidenav is closed. */ /* This mixin ensures a sidenav element spans the whole viewport.*/ :host { position: relative; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); box-sizing: border-box; -webkit-overflow-scrolling: touch; display: block; overflow: hidden; } :host[fullscreen] { position: absolute; top: 0; left: 0; right: 0; bottom: 0; } :host[fullscreen].md-sidenav-opened { overflow: hidden; } :host > .md-sidenav-backdrop { position: absolute; top: 0; left: 0; right: 0; bottom: 0; display: block; z-index: 2; visibility: hidden; } :host > .md-sidenav-backdrop.md-sidenav-shown { visibility: visible; background-color: rgba(0, 0, 0, 0.6); } :host > md-content { position: relative; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); display: block; height: 100%; overflow: auto; } :host > md-sidenav { position: relative; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); display: block; position: absolute; top: 0; bottom: 0; z-index: 3; min-width: 5%; overflow-y: auto; background-color: white; -webkit-transform: translate3d(-100%, 0, 0); transform: translate3d(-100%, 0, 0); } :host > md-sidenav.md-sidenav-closed { visibility: hidden; } :host > md-sidenav.md-sidenav-closing { -webkit-transform: translate3d(-100%, 0, 0); transform: translate3d(-100%, 0, 0); will-change: transform; } :host > md-sidenav.md-sidenav-opening { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); visibility: visible; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); will-change: transform; } :host > md-sidenav.md-sidenav-opened { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); } :host > md-sidenav.md-sidenav-push { background-color: white; } :host > md-sidenav.md-sidenav-side { z-index: 1; } :host > md-sidenav.md-sidenav-end { right: 0; -webkit-transform: translate3d(100%, 0, 0); transform: translate3d(100%, 0, 0); } :host > md-sidenav.md-sidenav-end.md-sidenav-closed { visibility: hidden; } :host > md-sidenav.md-sidenav-end.md-sidenav-closing { -webkit-transform: translate3d(100%, 0, 0); transform: translate3d(100%, 0, 0); will-change: transform; } :host > md-sidenav.md-sidenav-end.md-sidenav-opening { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); visibility: visible; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); will-change: transform; } :host > md-sidenav.md-sidenav-end.md-sidenav-opened { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); } :host-context([dir='rtl']) > md-sidenav { -webkit-transform: translate3d(100%, 0, 0); transform: translate3d(100%, 0, 0); } :host-context([dir='rtl']) > md-sidenav.md-sidenav-closed { visibility: hidden; } :host-context([dir='rtl']) > md-sidenav.md-sidenav-closing { -webkit-transform: translate3d(100%, 0, 0); transform: translate3d(100%, 0, 0); will-change: transform; } :host-context([dir='rtl']) > md-sidenav.md-sidenav-opening { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); visibility: visible; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); will-change: transform; } :host-context([dir='rtl']) > md-sidenav.md-sidenav-opened { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); } :host-context([dir='rtl']) > md-sidenav.md-sidenav-end { left: 0; right: auto; -webkit-transform: translate3d(-100%, 0, 0); transform: translate3d(-100%, 0, 0); } :host-context([dir='rtl']) > md-sidenav.md-sidenav-end.md-sidenav-closed { visibility: hidden; } :host-context([dir='rtl']) > md-sidenav.md-sidenav-end.md-sidenav-closing { -webkit-transform: translate3d(-100%, 0, 0); transform: translate3d(-100%, 0, 0); will-change: transform; } :host-context([dir='rtl']) > md-sidenav.md-sidenav-end.md-sidenav-opening { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); visibility: visible; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); will-change: transform; } :host-context([dir='rtl']) > md-sidenav.md-sidenav-end.md-sidenav-opened { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); } ","/** * We separate transitions to be able to disable them in unit tests, by simply not loading this file. */ :host > .md-sidenav-backdrop.md-sidenav-shown { -webkit-transition: background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1); transition: background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } :host > md-content { -webkit-transition: -webkit-transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); transition: -webkit-transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1), -webkit-transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } :host > md-sidenav { -webkit-transition: -webkit-transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); transition: -webkit-transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1), -webkit-transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1); } "]
}),r(0,i.Optional()),o("design:paramtypes",[c.Dir,i.ElementRef,i.Renderer])],e)}();e.MdSidenavLayout=f,e.MD_SIDENAV_DIRECTIVES=[f,m]},function(t,e,n){"use strict";var s=this&&this.__decorate||function(t,e,n,s){var a,o=arguments.length,r=o<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,s);else for(var i=t.length-1;i>=0;i--)(a=t[i])&&(r=(o<3?a(r):o>3?a(e,n,r):a(e,n))||r);return o>3&&r&&Object.defineProperty(e,n,r),r},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},o=n(1),r=function(){function t(){this._dir="ltr",this.dirChange=new o.EventEmitter}return Object.defineProperty(t.prototype,"dir",{get:function(){return this._dir},set:function(t){var e=this._dir;this._dir=t,e!=this._dir&&this.dirChange.emit(null)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){return this.dir},set:function(t){this.dir=t},enumerable:!0,configurable:!0}),s([o.Input("dir"),a("design:type",String)],t.prototype,"_dir",void 0),s([o.Output(),a("design:type",Object)],t.prototype,"dirChange",void 0),s([o.HostBinding("attr.dir"),a("design:type",String)],t.prototype,"dir",null),t=s([o.Directive({selector:"[dir]",exportAs:"$implicit"}),a("design:paramtypes",[])],t)}();e.Dir=r},function(t,e){"use strict";var n=function(){function t(){var t=this;this.promise=new Promise(function(e,n){t.resolve=e,t.reject=n})}return t}();e.PromiseCompleter=n},function(t,e){"use strict";function n(){return function(t,e){var n=t[e],s="__md_private_symbol_"+e;t[s]=n,Object.defineProperty(t,e,{get:function(){return this[s]},set:function(t){this[s]=null!=t&&""+t!="false"}})}}e.BooleanFieldValue=n},function(t,e){t.exports="/* SHADOWS */\n/* Shadows */\n// Focus shadow define-mixin.\n/* Animations */\nmd-toolbar {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\nmd-toolbar .fill-remaining {\n  -webkit-box-flex: 1;\n      -ms-flex: 1 1 auto;\n          flex: 1 1 auto;\n}\nmd-toolbar button {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  color: white;\n  background: transparent;\n  border: none;\n  line-height: 64px;\n  cursor: pointer;\n  outline: none;\n}\nmd-toolbar a {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  color: white;\n  line-height: 64px;\n  text-decoration: none;\n  font-size: 0.8em;\n}\nmd-toolbar .name {\n  margin-left: 8px;\n}\nmd-toolbar img {\n  margin-top: -2px;\n}\nmd-sidenav-layout {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  position: relative;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n\n  -webkit-overflow-scrolling: touch;\n  background-color: transparent;\n}\nmd-sidenav-layout span {\n  -webkit-transition: -webkit-transform 0.3s ease-in-out;\n  transition: -webkit-transform 0.3s ease-in-out;\n  transition: transform 0.3s ease-in-out;\n  transition: transform 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out\n}\nmd-sidenav-layout span.toggled, md-sidenav-layout span.core-toggled {\n  -webkit-transform: rotate(180deg) !important;\n          transform: rotate(180deg) !important;\n}\nmd-sidenav-layout md-icon {\n  color: rgba(255, 255, 255, 0.7) !important;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\nmd-sidenav-layout .content {\n  padding: 0 32px 32px 32px;\n  min-height: 100vh;\n}\nmd-sidenav-layout .fill-remaining {\n  -webkit-box-flex: 1;\n      -ms-flex: 1 1 auto;\n          flex: 1 1 auto;\n}\nmd-sidenav-layout md-sidenav {\n  width: 240px;\n  background-color: #263238;\n}\nmd-sidenav-layout md-sidenav nav {\n  position: relative;\n  -webkit-box-flex: 1;\n      -ms-flex-positive: 1;\n          flex-grow: 1;\n  overflow-x: hidden;\n  background-color: #263238;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\nmd-sidenav-layout md-sidenav nav .children {\n  overflow: hidden;\n  position: relative;\n  background-color: #212B2F;\n  box-shadow: inset 0 2px 2px 0 rgba(0,0,0,.14),\n                    inset 0 3px 1px -2px rgba(0,0,0,.2),\n                    inset 0 1px 5px 0 rgba(0,0,0,.12);\n  -webkit-transition: max-height 1s;\n  transition: max-height 1s;\n  overflow: hidden;\n}\nmd-sidenav-layout md-sidenav nav .children > .disabled {\n  color: rgba(255, 255, 255, 0.15);\n  cursor: default\n}\nmd-sidenav-layout md-sidenav nav .children > .disabled:hover {\n  background-color: transparent;\n}\nmd-sidenav-layout md-sidenav nav .children > a {}\nmd-sidenav-layout md-sidenav nav .children > a:hover {\n  background-color: #263238;\n}\nmd-sidenav-layout md-sidenav nav > a {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -ms-flex-negative: 0;\n      flex-shrink: 0;\n  box-sizing: border-box;\n  margin: 0;\n  padding: 16px;\n  width: 100%;\n  color: rgba(255, 255, 255, 0.7);\n  font-weight: 400;\n  text-decoration: none;\n  cursor: pointer;\n}\nmd-sidenav-layout md-sidenav nav > a > md-icon {\n  padding-right: 8px;\n  color: rgba(0, 0, 0, 0.54);\n}\nmd-sidenav-layout md-sidenav nav > a:hover {\n  background-color: #212B2F;\n}\nfooter {\n  background-color: #263238;\n  bottom: 0;\n  color: white;\n  padding-top: 0;\n  right: 0;\n  margin-top: 16px;\n\n  display: -webkit-box;\n\n  display: -ms-flexbox;\n\n  display: flex;\n  -ms-flex-flow: row wrap;\n      flex-flow: row wrap;\n  margin: 0 auto;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  padding: 16px;\n  box-sizing: border-box;\n}\nfooter ul {\n  font-size: 14px;\n  font-weight: 400;\n  letter-spacing: 0;\n  line-height: 24px;\n  list-style: none;\n  padding: 0;\n  display: inline;\n}\nfooter a {\n  color: white;\n  text-decoration: none;\n}\nfooter .footer-links {\n  box-sizing: border-box;\n  width: calc(16.6666666667% - 16px);\n  margin-left: 24px;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n}\nfooter img {\n  margin: 8px;\n  margin-left: 16px;\n}\nfooter .copy {\n  -webkit-box-pack: end;\n      -ms-flex-pack: end;\n          justify-content: flex-end;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n}\nfooter .copy .power-text {\n  font-size: 12px;\n  margin: 0;\n  opacity: .54;\n  text-align: right;\n}\n"},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.APP_ROUTE_PROVIDER=e.routes=void 0;var s=n(432),a=n(479),o=n(482),r=n(485),i=n(488),l=n(491),c=n(494),p=n(497),d=n(500),h=n(503),u=n(506),m=n(509),f=n(512),g=n(515),b=n(518),y=n(521),v=n(524),j=n(527),_=e.routes=[{path:"",component:a.Home},{path:"md-button",component:o.AppMdButton},{path:"md-card",component:r.AppMdCard},{path:"md-checkbox",component:i.AppMdCheckbox},{path:"md-grid-list",component:l.AppMdGridList},{path:"md-icon",component:c.AppMdIcon},{path:"md-input",component:p.AppMdInput},{path:"md-list",component:d.AppMdList},{path:"md-progress-bar",component:h.AppMdProgressBar},{path:"md-progress-circle",component:u.AppMdProgressCircle},{path:"md-radio",component:m.AppMdRadio},{path:"md-sidenav",component:f.AppMdSidenav},{path:"md-slide-toggle",component:g.AppMdSlideToggle},{path:"md-tabs",component:b.AppMdTabs},{path:"md-toolbar",component:y.AppMdToolbar},{path:"a11y",component:v.A11y},{path:"portal",component:j.Portal},{path:"**",component:a.Home}];e.APP_ROUTE_PROVIDER=[(0,s.provideRouter)(_)]},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.Home=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(480),m=n(481),f=e.Home=function b(t){s(this,b),this.router=t};e.Home=f=d([(0,o.Component)({moduleId:t.id,selector:"home",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},function(t,e){t.exports="/* SHADOWS */\n/* Shadows */\n// Focus shadow define-mixin.\n/* Animations */\nhome {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  position: relative;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n\n  -webkit-overflow-scrolling: touch;\n}\n.sidenav-content {\n  padding: 15px;\n}\n.hero-background {\n  background: -webkit-linear-gradient(rgb(0,121,107),rgb(0,150,136));\n  background: linear-gradient(rgb(0,121,107),rgb(0,150,136));\n  margin-bottom: 60px;\n  margin-left: -32px;\n  color: #fff;\n  width: calc(100% + 64px);\n}\n.hero-background .hero-container {\n  padding: 56px 0 56px 0;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n.hero-background .hero-container .hero-image {\n  width: 400px;\n  padding-right: 40px;\n}\n.hero-background .hero-container .section--center {\n  max-width: 920px;\n}\n.hero-background .hero-container button {\n  color: black;\n}\nh4 {\n  font-size: 34px;\n  font-weight: 400;\n  line-height: 40px;\n}\n.features-container {\n  max-width: 920px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  margin: 0 auto;\n}\n.features-container .button-container {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  margin-bottom: 16px;\n}\n.features-list {\n  width: 700px;\n  margin: 0 0 23px 0;\n  padding: 15px;\n}\n.features-list h4 {\n  font-size: 34px;\n  font-weight: 400;\n  line-height: 40px;\n  color: rgba(0, 0, 0, 0.87);\n  margin-top: 10px;\n  margin: 0 0 16px 0;\n}\n.features-list p {\n  font-size: 16px;\n  line-height: 30px;\n  opacity: .87;\n}\n"},function(t,e){t.exports='\n<header class="hero-background">\n  <section class="hero-container section--center mdl-grid mdl-grid--no-spacing">\n    <div class="logo-container mdl-cell mdl-cell--6-col-desktop mdl-cell--12-col-tablet mdl-cell--12-col-phone">\n      <img class="hero-image" src="https://material.angular.io/images/material-logo.png" alt="Angular Material">\n    </div>\n    <div class="mdl-cell mdl-cell--6-col-desktop mdl-cell--12-col-tablet mdl-cell--12-col-phone">\n      <h4 class="">Angular Material</h4>\n      <h5 class="tagline">Material Design components for Angular 2 apps</h5>\n      <button md-raised-button target="_blank" href="https://github.com/angular/material2">\n        Preview on GitHub\n      </button>\n    </div>\n  </section>\n</header>\n\n<section class="features-container">\n  <div class="features-list">\n    <h4>Sprint from Zero to App</h4>\n    <p>Hit the ground running with comprehensive, modern UI components that work across web, mobile and desktop.</p>\n  </div>\n\n  <div class="features-list">\n    <h4>Fast and Consistent</h4>\n    <p>Finely tuned performance, because every millisecond counts. Fully tested across IE11 and current versions of Chrome, Edge, Firefox, and Safari.</p>\n  </div>\n\n  <div class="features-list">\n    <h4>Versatile</h4>\n    <p>Themable, for when you need to stay on-brand or just have a favorite color. Accessible and internationalized so that all users are welcome.</p>\n  </div>\n\n  <div class="features-list">\n    <h4>Optimized for Angular</h4>\n    <p>Built by the Angular team to integrate seamlessly with Angular 2.</p>\n  </div>\n\n  <div class="button-container">\n    <button md-raised-button color="primary" href="https://github.com/angular/material2">\n      Preview on GitHub\n    </button>\n  </div>\n</section>\n'},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdButton=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(483),m=n(484),f=e.AppMdButton=function b(t){s(this,b),this.router=t,this.isDisabled=!0};e.AppMdButton=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-button",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},function(t,e){t.exports="/* SHADOWS */\n/* Shadows */\n// Focus shadow define-mixin.\n/* Animations */\nh1, h2, h3, h4 {\n    margin: 24px 0 16px 0;\n  }\nimg {\n    max-width: 100%;\n  }\ntable {\n    width: 100%;\n  }\ntable th, table td {\n    text-align: left;\n    padding: 8px;\n    border: 1px solid rgba(0, 0, 0, 0.12);\n}\npre {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n  }\nh1 {\n    font-size: 56px;\n    font-weight: 400;\n    line-height: 1.35;\n    letter-spacing: -0.02em;\n  }\nh3 {\n    font-size: 34px;\n    font-weight: 400;\n    line-height: 40px;\n  }\np {\n    font-size: 16px;\n    line-height: 30px;\n    opacity: .87;\n  }\n"},function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="md-button"><a class="header-link" href="#md-button"></a>md-button</h1>\n\n    <p><code>md-button</code> is an HTML <code>&lt;button&gt;</code> or <code>&lt;a&gt;</code> tag\n        enhanced with styling and animation to match the\n<a href="https://www.google.com/design/spec/components/buttons.html">Material Design button spec</a>.</p>\n    <p>Users should employ a button element (<code>&lt;button&gt;</code>) when\n        clicking triggers some action in the current view <em>without navigating</em>.\n        An anchor element (<code>&lt;a&gt;</code>) should be used when clicking <em>navigates</em>\nthe\n        user to another URL. Depending on which element is used, the component\n        will either be an instance of <code>MdButton</code> or <code>MdAnchor</code>.\n        Visually, the two are identical.</p>\n    \n<h3 id="button-types"><a class="header-link" href="#button-types"></a>Button types</h3>\n\n    <p>There are five types of buttons:</p>\n    <ol class="list">\n        <li>Flat buttons - <code>md-button</code>\n            <ul class="list">\n                <li>Rectangular button</li>\n                <li>Defaults to white background</li>\n                <li>No box shadow</li>\n            </ul>\n        </li>\n        <li>Raised buttons - <code>md-raised-button</code>\n            <ul class="list">\n                <li>Rectangular button</li>\n                <li>Defaults to white background</li>\n                <li>Box shadow applied</li>\n            </ul>\n        </li>\n        <li>Icon buttons - <code>md-icon-button</code>\n            <ul class="list">\n                <li>Circular button</li>\n                <li>Transparent background</li>\n                <li>40 by 40 px</li>\n            </ul>\n        </li>\n        <li>Floating Action Buttons (FABs) - <code>md-fab</code>\n            <ul class="list">\n                <li>Circular button</li>\n                <li>Defaults background to &quot;accent&quot; palette defined in theme</li>\n                <li>Box shadow applied</li>\n                <li>56 by 56 px</li>\n            </ul>\n        </li>\n        <li>Mini Floating Action Buttons (Mini FABs) - <code>md-mini-fab</code>\n            <ul\n            class="list">\n                <li>Circular button</li>\n                <li>Defaults background to &quot;accent&quot; palette defined in theme</li>\n                <li>Box shadow applied</li>\n                <li>40 by 40 px</li>\n                </ul>\n        </li>\n    </ol>\n    <p>Each is an attribute directive that you can add to a <code>button</code> or <code>a</code> tag.\n        You can provide custom content to the button by inserting it between the\n        tags, as you would with a normal button.</p>\n    <p>Example:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-button</span>&gt;</span>FLAT<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-raised-button</span>&gt;</span>RAISED<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-icon-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"md-24"</span>&gt;</span>favorite<span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-fab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"md-24"</span>&gt;</span>add<span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-mini-fab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"md-24"</span>&gt;</span>add<span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></code></pre>\n    <p>Output:</p>\n    <p class="img-container">\n        <img src="https://material.angularjs.org/material2_assets/buttons/basic-buttons.png">\n    </p>\n    \n<h3 id="theming"><a class="header-link" href="#theming"></a>Theming</h3>\n\n    <p>All button types can be themed to match your &quot;primary&quot; palette,\n        your &quot;accent&quot; palette, or your &quot;warn&quot; palette using\n        the <code>color</code> attribute. Simply pass in the palette name.</p>\n    <p>In flat buttons, the palette chosen will affect the text color, while\n        in other buttons, it affects the background.</p>\n    <p>Example:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"primary"</span>&gt;</span>PRIMARY<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"accent"</span>&gt;</span>ACCENT<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"warn"</span>&gt;</span>WARN<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></code></pre>\n    <p>Output:</p>\n    <p class="img-container">\n        <img src="https://material.angularjs.org/material2_assets/buttons/colored-buttons.png">\n    </p>\n    \n<h3 id="disabling"><a class="header-link" href="#disabling"></a>Disabling</h3>\n\n    <p>You can disable any button type through the native <code>disabled</code> property.\n        You can add it directly, or bind it to a property on your component class\n        by adding <code>[disabled]=&quot;isDisabled&quot;</code> given that the <code>isDisabled</code>\nproperty\n        exists.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-button</span> <span class="hljs-attr">disabled</span>&gt;</span>OFF<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-raised-button</span> [<span class="hljs-attr">disabled</span>]=<span class="hljs-string">"isDisabled"</span>&gt;</span>OFF<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-mini-fab</span> [<span class="hljs-attr">disabled</span>]=<span class="hljs-string">"isDisabled"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span>&gt;</span>check<span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></code></pre>\n    <p>Output:</p>\n    <p class="img-container">\n        <img src="https://material.angularjs.org/material2_assets/buttons/disabled-buttons.png">\n    </p>\n    \n<h3 id="accessibility"><a class="header-link" href="#accessibility"></a>Accessibility</h3>\n\n    <ul class="list">\n        <li>In high contrast mode, a strong border is added to the button to make\n            it easier to see.</li>\n        <li>Button focus events originating from the keyboard will retain focus styles,\n            while button focus events from the mouse will not.</li>\n        <li>As <code>md-button</code> is added to an existing <code>button</code> or <code>a</code> tag,\n            it enjoys all the accessibility natively built into these elements.</li>\n    </ul>\n    \n<h3 id="upcoming-work"><a class="header-link" href="#upcoming-work"></a>Upcoming work</h3>\n\n    <p>We will also be adding ink ripples to buttons in an upcoming milestone.</p>\n    <h3\n    id="api-summary"><a class="header-link" href="#api-summary"></a>API Summary</h3>\n        <p>Properties:</p>\n        <table>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Type</th>\n                    <th>Description</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><code>color</code>\n                    </td>\n                    <td>`&quot;primary&quot;</td>\n                    <td>&quot;accent&quot;</td>\n                    <td>&quot;warn&quot;`</td>\n                    <td>The color palette of the button</td>\n                </tr>\n                <tr>\n                    <td><code>disabled</code>\n                    </td>\n                    <td>boolean</td>\n                    <td>Whether or not the button is disabled</td>\n                </tr>\n            </tbody>\n        </table>\n</article>'},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdCard=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(486),m=n(487),f=e.AppMdCard=function b(t){s(this,b),this.router=t};e.AppMdCard=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-card",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="md-card"><a class="header-link" href="#md-card"></a>md-card</h1>\n\n    <p><code>md-card</code> is a content container component that conforms to\n        the spec of a Material Design card.</p>\n    <p>See plunker example <a href="http://plnkr.co/edit/pkUNGMXPcf8RXKapXNXQ?p=preview">here</a>.</p>\n    <h2\n    id="usage"><a class="header-link" href="#usage"></a>Usage</h2>\n        <p>Simply add your content between <code>md-card</code> tags to consume basic\n            card styles like box-shadow and default padding.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-card</span>&gt;</span>\n   Basic card.\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-card</span>&gt;</span></code></pre>\n        <p>Output:</p>\n        <p class="img-container">\n            <img src="https://material.angularjs.org/material2_assets/cards/basic-card-min.png">\n        </p>\n        \n<h3 id="preset-sections"><a class="header-link" href="#preset-sections"></a>Preset sections</h3>\n\n        <p>We also provide a number of preset sections that you can mix and match\n            within the <code>md-card</code> tags.</p>\n        <ul class="list">\n            <li><code>&lt;md-card-title&gt;</code>: adds styles for a title</li>\n            <li><code>&lt;md-card-subtitle&gt;</code>: adds styles for a subtitle</li>\n            <li><code>&lt;md-card-content&gt;</code>: main content section, intended for\n                blocks of text</li>\n            <li><code>&lt;img md-card-image&gt;</code>: stretches image to container width</li>\n            <li><code>&lt;md-card-actions&gt;</code>: wraps and styles buttons</li>\n            <li><code>&lt;md-card-footer&gt;</code>: anchors section to bottom of card</li>\n        </ul>\n        <p>Example markup for a card with section presets:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-card</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-card-subtitle</span>&gt;</span>Subtitle first<span class="hljs-tag">&lt;/<span class="hljs-name">md-card-subtitle</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-card-title</span>&gt;</span>Card with title<span class="hljs-tag">&lt;/<span class="hljs-name">md-card-title</span>&gt;</span>   \n   <span class="hljs-tag">&lt;<span class="hljs-name">md-card-content</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>This is supporting text.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do \n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">md-card-content</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-card-actions</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-button</span>&gt;</span>LIKE<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-button</span>&gt;</span>SHARE<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">md-card-actions</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-card</span>&gt;</span></code></pre>\n        <p>Output:</p>\n        <p class="img-container">\n            <img src="https://material.angularjs.org/material2_assets/cards/sections-card-min.png">\n        </p>\n        \n<h4 id="preset-shortcuts"><a class="header-link" href="#preset-shortcuts"></a>Preset shortcuts</h4>\n\n        <p><code>md-card-actions</code> has a few layout shortcuts. You can add <code>align=&quot;end&quot;</code> to\n            align the buttons at the end of the main axis (flex-end). The default is <code>align=&quot;start&quot;</code> (flex-start).</p>\n        <h3\n        id="preset-layouts"><a class="header-link" href="#preset-layouts"></a>Preset layouts</h3>\n            <p>You can also leverage preset layouts that format some of the sections\n                together.</p>\n            \n<h4 id="-md-card-header-"><a class="header-link" href="#-md-card-header-"></a><code>&lt;md-card-header&gt;</code></h4>\n\n            <p>Formats the following sections into a header:</p>\n            <ul class="list">\n                <li><code>&lt;md-card-title&gt;</code>: title to format within header</li>\n                <li><code>&lt;md-card-subtitle&gt;</code>: subtitle to format within header</li>\n                <li><code>&lt;img md-card-avatar&gt;</code>: image to use for avatar</li>\n            </ul>\n            <p>Example markup for a card with a header:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-card</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-card-header</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">md-card-avatar</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"path/to/img.png"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">md-card-title</span>&gt;</span>Header title<span class="hljs-tag">&lt;/<span class="hljs-name">md-card-title</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">md-card-subtitle</span>&gt;</span>Header subtitle<span class="hljs-tag">&lt;/<span class="hljs-name">md-card-subtitle</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">md-card-header</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">md-card-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"path/to/img.png"</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-card-content</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Here is some more content<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">md-card-content</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-card</span>&gt;</span></code></pre>\n            <p>Output:</p>\n            <p class="img-container">\n                <img src="https://material.angularjs.org/material2_assets/cards/header-card-min.png">\n            </p>\n            \n<h4 id="-md-card-title-group-"><a class="header-link" href="#-md-card-title-group-"></a><code>&lt;md-card-title-group&gt;</code></h4>\n\n            <p>Groups the following sections together:</p>\n            <ul class="list">\n                <li><code>&lt;md-card-title&gt;</code>: title to format within group</li>\n                <li><code>&lt;md-card-subtitle&gt;</code>: subtitle to format within group</li>\n                <li>One of the following image sizes:\n                    <ul class="list">\n                        <li><code>&lt;img md-card-sm-image&gt;</code>\n                        </li>\n                        <li><code>&lt;img md-card-md-image&gt;</code>\n                        </li>\n                        <li><code>&lt;img md-card-lg-image&gt;</code>\n                        </li>\n                    </ul>\n                </li>\n            </ul>\n            <p>Example markup for a card with title-group layout:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-card</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-card-title-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">md-card-sm-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"path/to/img.png"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">md-card-title</span>&gt;</span>Card with title<span class="hljs-tag">&lt;/<span class="hljs-name">md-card-title</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">md-card-subtitle</span>&gt;</span>Subtitle<span class="hljs-tag">&lt;/<span class="hljs-name">md-card-subtitle</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">md-card-title-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-card</span>&gt;</span></code></pre>\n            <p>Output:</p>\n            <p class="img-container">\n                <img src="https://material.angularjs.org/material2_assets/cards/title-group-card-min.png">\n            </p>\n</article>';
},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdCheckbox=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(489),m=n(490),f=e.AppMdCheckbox=function b(t){s(this,b),this.router=t};e.AppMdCheckbox=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-checkbox",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="md-checkbox"><a class="header-link" href="#md-checkbox"></a>md-checkbox</h1>\n\n    <p><code>md-checkbox</code> is a Material Design selection control that allows\n        users to make a binary choice for a predetermined conditioned. It is modeled\n        after the browser&#39;s native checkbox element, and behaves in the same\n        way. Similar to the native checkbox element, it supports an indeterminate\n        state for &quot;mixed&quot; checkboxes.</p>\n    <p>A demo of the checkbox can be found at <a href="https://plnkr.co/edit/P7qce8lN9n2flS6kBhDy?p=preview">https://plnkr.co/edit/P7qce8lN9n2flS6kBhDy?p=preview</a>.</p>\n    <h2\n    id="usage"><a class="header-link" href="#usage"></a>Usage</h2>\n        \n<h3 id="basic-usage"><a class="header-link" href="#basic-usage"></a>Basic Usage</h3>\n\n        <p><code>md-checkbox</code> can be used anywhere a normal checkbox would be\n            used, and in the same way.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">"let todo of todos"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">md-checkbox</span> [<span class="hljs-attr">checked</span>]=<span class="hljs-string">"todo.completed"</span>\n                 (<span class="hljs-attr">change</span>)=<span class="hljs-string">"todo.completed = $event"</span>&gt;</span>\n      {{todo.name} } \n    <span class="hljs-tag">&lt;/<span class="hljs-name">md-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></code></pre>\n        <h3\n        id="usage-within-forms"><a class="header-link" href="#usage-within-forms"></a>Usage within Forms</h3>\n            <p>In addition to supporting native checkbox functionality, <code>md-checkbox</code> also\n                supports <code>[(ngModel)]</code>\nfor use within forms.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">form</span> (<span class="hljs-attr">submit</span>)=<span class="hljs-string">"saveUser()"</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- Form fields... --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">md-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">"user.agreesToTOS"</span>&gt;</span>\n      I have read and agree to the terms of service.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">md-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> [<span class="hljs-attr">disabled</span>]=<span class="hljs-string">"!user.agreesToTOS"</span>&gt;</span>Sign Up<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></code></pre>\n            <h3\n            id="indeterminate-checkboxes"><a class="header-link" href="#indeterminate-checkboxes"></a>Indeterminate\n                Checkboxes</h3>\n                <p>Indeterminate checkboxes are useful when a checkbox needs to be in a &quot;mixed&quot;\n                    state</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-checkbox</span> [<span class="hljs-attr">checked</span>]=<span class="hljs-string">"false"</span>\n             [<span class="hljs-attr">indeterminate</span>]=<span class="hljs-string">"isIndeterminate"</span>\n             (<span class="hljs-attr">change</span>)=<span class="hljs-string">"isIndeterminate = false"</span>&gt;</span>\n  Click the Button Below to Make Me Indeterminate.\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"isIndeterminate = true"</span>&gt;</span>\n  Make Indeterminate\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></code></pre>\n                <h3\n                id="alignment"><a class="header-link" href="#alignment"></a>Alignment</h3>\n                    <p>Note that checkboxes can be aligned to come at the &quot;start&quot; or\n                        the &quot;end&quot; of its corresponding label.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-checkbox</span> [<span class="hljs-attr">checked</span>]=<span class="hljs-string">"true"</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"end"</span>&gt;</span>\n  I come after my label.\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-checkbox</span>&gt;</span></code></pre>\n                    <p>Note that this alignment is preserved within RTL layouts.</p>\n                    \n<h3 id="accessibility"><a class="header-link" href="#accessibility"></a>Accessibility</h3>\n\n                    <p>By default, <code>md-checkbox</code> provides all the accessibility attributes\n                        needed. It also supports keyboard navigation and toggling via the spacebar.\n                        However, you can provide an <code>aria-label</code> to the checkbox if you\n                        do not wish to have any label text.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-checkbox</span> [<span class="hljs-attr">checked</span>]=<span class="hljs-string">"false"</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">"My standalone checkbox"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-checkbox</span>&gt;</span></code></pre>\n</article>'},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdGridList=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(492),m=n(493),f=e.AppMdGridList=function b(t){s(this,b),this.router=t};e.AppMdGridList=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-grid-list",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="md-grid-list"><a class="header-link" href="#md-grid-list"></a>md-grid-list</h1>\n\n    <p><code>md-grid-list</code> is an alternative list view that arranges cells\n        into grid-based layout. See Material Design spec <a href="https://www.google.com/design/spec/components/grid-lists.html">here</a>.</p>\n    <h2\n    id="usage"><a class="header-link" href="#usage"></a>Usage</h2>\n        \n<h3 id="simple-grid-list"><a class="header-link" href="#simple-grid-list"></a>Simple grid list</h3>\n\n        <p>To use <code>md-grid-list</code>, first import the grid list directives\n            and add them to your component&#39;s directives array:</p>\n<pre class="hljs"><code>@Component({\n  ...\n  directives: [MD_GRID_LIST_DIRECTIVES]\n} )</code></pre>\n        <p>In your template, create an <code>md-grid-list</code> element and specify\n            the number of columns you want for your grid using the <code>cols</code> property\n            (this is the only mandatory attribute).</p>\n        <p>You can define each tile using an <code>md-grid-tile</code> element, passing\n            any tile content between its tags.</p>\n        <p>Tiles are greedily placed in the first position of the grid that fits\n            them, so row count depends on how many tiles can fit in each row, given\n            the col count and the colspan/rowspan of each tile.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-grid-list</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">"4"</span> [<span class="hljs-attr">style.background</span>]=<span class="hljs-string">"\'lightblue\'"</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-grid-tile</span>&gt;</span>One<span class="hljs-tag">&lt;/<span class="hljs-name">md-grid-tile</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-grid-tile</span>&gt;</span>Two<span class="hljs-tag">&lt;/<span class="hljs-name">md-grid-tile</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-grid-tile</span>&gt;</span>Three<span class="hljs-tag">&lt;/<span class="hljs-name">md-grid-tile</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-grid-tile</span>&gt;</span>Four<span class="hljs-tag">&lt;/<span class="hljs-name">md-grid-tile</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-grid-list</span>&gt;</span></code></pre>\n        <p>Output:</p>\n        <p class="img-container">\n            <img src="https://material.angularjs.org/material2_assets/grid-list/basic-grid-list.png">\n        </p>\n        \n<h2 id="grid-list-config"><a class="header-link" href="#grid-list-config"></a>Grid list config</h2>\n\n        <p>####<code>cols</code>\n        </p>\n        <p>The <code>cols</code> property controls the number of columns displayed\n            in your grid. It must be set or the grid list will not be able to generate\n            your layout.</p>\n        <p>Ex: <code>&lt;md-grid-list cols=&quot;3&quot;&gt;...</code>\n        </p>\n        <p>Default: There is no reasonable default value for this, so if it is unspecified,\n            the grid list will throw an error.</p>\n        <p>####<code>rowHeight</code>\n        </p>\n        <p>Row height for the list can be calculated in three ways:</p>\n        <ol class="list">\n            <li>\n                <p><strong>Fixed height</strong>: The height can be in <code>px</code>, <code>em</code>,\n                    or <code>rem</code>. If no units are specified, <code>px</code> units are\n                    assumed.</p>\n                <p>Ex: <code>&lt;md-grid-list cols=&quot;3&quot; rowHeight=&quot;100px&quot;&gt;...</code>\n                </p>\n            </li>\n            <li>\n                <p><strong>Ratio</strong>: This ratio is width:height, and must be passed\n                    in with a colon, not a decimal.</p>\n                <p>Ex: <code>&lt;md-grid-list cols=&quot;3&quot; rowHeight=&quot;4:3&quot;&gt;...</code>.</p>\n            </li>\n            <li>\n                <p><strong>Fit</strong>: This mode automatically divides the available height\n                    by the number of rows. Please note the height of the grid-list or its container\n                    must be set.</p>\n                <p>Ex: <code>&lt;md-grid-list cols=&quot;3&quot; rowHeight=&quot;fit&quot;&gt;...</code>\n                </p>\n            </li>\n        </ol>\n        <p>Defaults to a 1:1 ratio of width:height.</p>\n        <p>####<code>gutterSize</code>\n        </p>\n        <p>Gutter size can be set to any <code>px</code>, <code>em</code>, or <code>rem</code> value\n            with the <code>gutterSize</code> property. If no units are specified, <code>px</code> units\n            are assumed.</p>\n        <p>Ex: <code>&lt;md-grid-list cols=&quot;3&quot; gutterSize=&quot;4px&quot;&gt;...</code>\n        </p>\n        <p>Defaults to <code>1px</code>.</p>\n        \n<h2 id="grid-tile-config"><a class="header-link" href="#grid-tile-config"></a>Grid tile config</h2>\n\n        <p>You can set the rowspan and colspan of each tile individually, using the <code>rowspan</code> and <code>colspan</code> properties.\n            If not set, they both default to <code>1</code>.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-grid-list</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">"4"</span> <span class="hljs-attr">rowHeight</span>=<span class="hljs-string">"100px"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-grid-tile</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">"let tile of tiles"</span> [<span class="hljs-attr">colspan</span>]=<span class="hljs-string">"tile.cols"</span> [<span class="hljs-attr">rowspan</span>]=<span class="hljs-string">"tile.rows"</span>\n  [<span class="hljs-attr">style.background</span>]=<span class="hljs-string">"tile.color"</span>&gt;</span>\n    {{tile.text} } \n  <span class="hljs-tag">&lt;/<span class="hljs-name">md-grid-tile</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-grid-list</span>&gt;</span></code></pre>\n        <pre\n        class="hljs"><code>...\nexport <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyComp</span> </span>{\n  tiles: any[] = [\n    {text: <span class="hljs-string">\'One\'</span>, cols: <span class="hljs-number">3</span>, rows: <span class="hljs-number">1</span>, color: <span class="hljs-string">\'lightblue\'</span>} ,\n    {text: <span class="hljs-string">\'Two\'</span>, cols: <span class="hljs-number">1</span>, rows: <span class="hljs-number">2</span>, color: <span class="hljs-string">\'lightgreen\'</span>} ,\n    {text: <span class="hljs-string">\'Three\'</span>, cols: <span class="hljs-number">1</span>, rows: <span class="hljs-number">1</span>, color: <span class="hljs-string">\'lightpink\'</span>} ,\n    {text: <span class="hljs-string">\'Four\'</span>, cols: <span class="hljs-number">2</span>, rows: <span class="hljs-number">1</span>, color: <span class="hljs-string">\'#DDBDF1\'</span>} ,\n  ];\n} </code>\n            </pre>\n            <p>Output:</p>\n            <p class="img-container">\n                <img src="https://material.angularjs.org/material2_assets/grid-list/fancy-grid-list.png">\n            </p>\n            \n<h2 id="todo"><a class="header-link" href="#todo"></a>TODO</h2>\n\n            <ul class="list">\n                <li>Grid tile headers and footers</li>\n                <li>Responsive sizing support</li>\n            </ul>\n</article>'},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdIcon=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(495),m=n(496),f=e.AppMdIcon=function b(t){s(this,b),this.router=t};e.AppMdIcon=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-icon",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="md-icon"><a class="header-link" href="#md-icon"></a>md-icon</h1>\n\n    <p><code>md-icon</code> is a component that displays an icon, which can be\n        a font glyph or an SVG image.</p>\n    \n<h2 id="mdiconregistry"><a class="header-link" href="#mdiconregistry"></a>MdIconRegistry</h2>\n\n    <p><code>MdIconRegistry</code> is an injectable service that allows you to\n        associate icon names with SVG URLs and define aliases for CSS font classes.\n        Its methods are discussed below and listed in the API summary.</p>\n    \n<h2 id="font-icons"><a class="header-link" href="#font-icons"></a>Font icons</h2>\n\n    \n<h3 id="ligatures"><a class="header-link" href="#ligatures"></a>Ligatures</h3>\n\n    <p>Some fonts are designed to show icons by using <a href="https://en.wikipedia.org/wiki/Typographic_ligature">ligatures</a>,\n        for example by rendering the text &quot;home&quot; as a home image. To\n        use a ligature icon, put its text in the content of the <code>md-icon</code> component,\n        for example:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span>&gt;</span>home<span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span></code></pre>\n    <p>By default the <a href="http://google.github.io/material-design-icons/#icon-font-for-the-web">Material icons font</a> is\n        used. (You will still need to include the HTML to load the font and its\n        CSS, as described in the link). You can specify a different font by setting\n        the <code>fontSet</code> input to either the CSS class to apply to use the\n        desired font, or to an alias previously registered with <code>MdIconRegistry.registerFontClassAlias</code>,\n        for example:</p>\n<pre class="hljs"><code>mdIconRegistry.registerFontClassAlias(<span class="hljs-string">\'myfont\'</span>, <span class="hljs-string">\'my-icon-font-class\'</span>);</code></pre>\n    <pre\n    class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span> <span class="hljs-attr">fontSet</span>=<span class="hljs-string">"myfont"</span>&gt;</span>help<span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span></code>\n        </pre>\n        <h3 id="font-icons-via-css"><a class="header-link" href="#font-icons-via-css"></a>Font icons via CSS</h3>\n\n        <p>Fonts can also display icons by defining a CSS class for each icon glyph,\n            which typically uses a :before selector to cause the icon to appear.\n            <a\n            href="https://fortawesome.github.io/Font-Awesome/examples/">FontAwesome</a>uses this approach to display its icons. To use such a\n                font, set the <code>fontSet</code> input to the font&#39;s CSS class (either\n                the class itself or an alias registered with <code>MdIconRegistry.registerFontClassAlias</code>),\n                and set the <code>fontIcon</code> input to the class for the specific icon\n                to show. Example:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span> <span class="hljs-attr">fontSet</span>=<span class="hljs-string">"fa"</span> <span class="hljs-attr">fontIcon</span>=<span class="hljs-string">"fa-square"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span></code></pre>\n        <p>For both types of font icons, you can specify the default font class to\n            use when <code>fontSet</code> is not explicitly set by calling <code>MdIconRegistry.setDefaultFontSetClass</code>.</p>\n        <h2\n        id="svg-icons"><a class="header-link" href="#svg-icons"></a>SVG icons</h2>\n            <p>When an <code>md-icon</code> component displays an SVG icon, it does so\n                by directly inlining the SVG content into the page as a child of the component.\n                (Rather than using an\n                <img>tag or a div background image). This makes it easier to apply CSS styles\n                to SVG icons. For example, the default color of the SVG content is the\n                CSS <a href="http://www.quirksmode.org/css/color/currentcolor.html">currentColor</a> value.\n                This makes SVG icons by default have the same color as surrounding text,\n                and allows you to change the color by setting the &quot;color&quot; style\n                on the <code>md-icon</code> element.</p>\n            \n<h3 id="icons-from-urls"><a class="header-link" href="#icons-from-urls"></a>Icons from URLs</h3>\n\n            <p>SVG icons can be used either by directly specifying the icon&#39;s URL,\n                or by associating an icon name with a URL and then referring to the name.\n                To use a URL directly, set the <code>svgSrc</code> input:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span> <span class="hljs-attr">svgSrc</span>=<span class="hljs-string">"/assets/sun.svg"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span></code></pre>\n            <h3\n            id="named-icons"><a class="header-link" href="#named-icons"></a>Named icons</h3>\n                <p>To associate a name with an icon URL, use the <code>addSvgIcon</code> or <code>addSvgIconInNamespace</code> methods\n                    of <code>MdIconRegistry</code>. After registering an icon, it can be displayed\n                    by setting the <code>svgIcon</code> input. For an icon in the default namespace,\n                    use the name directly. For a non-default namespace, use the format <code>[namespace]:[name]</code>.\n                    Examples:</p>\n<pre class="hljs"><code>mdIconRegistry.addSvgIcon(<span class="hljs-string">\'moon\'</span>, <span class="hljs-string">\'/assets/moon.svg\'</span>);\nmdIconRegistry.addSvgIconInNamespace(<span class="hljs-string">\'animals\'</span>, <span class="hljs-string">\'cat\'</span>, <span class="hljs-string">\'/assets/cat.svg\'</span>);</code></pre>\n                <pre\n                class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span> <span class="hljs-attr">svgIcon</span>=<span class="hljs-string">"moon"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span> <span class="hljs-attr">svgIcon</span>=<span class="hljs-string">"animals:cat"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span></code>\n                    </pre>\n                    <h3 id="icon-sets"><a class="header-link" href="#icon-sets"></a>Icon sets</h3>\n\n                    <p>Icon sets allow grouping multiple icons into a single SVG file. The content\n                        of an icon set file looks like this, where each nested <code>&lt;svg&gt;</code> tag\n                        defines an individual icon, and is identified with a unique &quot;id&quot;\n                        attribute.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">defs</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"mercury"</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"venus"</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"earth"</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"mars"</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">defs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span></code></pre>\n                    <p>Icon sets are registered using the <code>addSvgIconSet</code> or <code>addSvgIconSetInNamespace</code> methods\n                        of <code>MdIconRegistry</code>. After an icon set is registered, each of\n                        its embedded icons can be accessed by their &quot;id&quot; attributes.\n                        To display an icon from an icon set, use the <code>svgIcon</code> input in\n                        the same way as for individually registered icons. Example:</p>\n<pre class="hljs"><code>mdIconRegistry.addSvgIconSetInNamespace(<span class="hljs-string">\'planets\'</span>, <span class="hljs-string">\'/assets/planets.svg\'</span>);</code></pre>\n                    <pre\n                    class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span> <span class="hljs-attr">svgIcon</span>=<span class="hljs-string">"planets:venus"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span></code>\n                        </pre>\n                        <p>Multiple icon sets can be registered in the same namespace. If you request\n                            an icon whose id appears in more than one icon set, the icon from the most\n                            recently registered set will be used.</p>\n                        <p>Note that all SVG icons are fetched via XmlHttpRequest, and due to the\n                            same-origin policy their URLs must be on the same domain as the containing\n                            page, or their servers must be configured to allow cross-domain access.</p>\n                        <h3\n                        id="accessibility"><a class="header-link" href="#accessibility"></a>Accessibility</h3>\n                            <p>If you set an &quot;aria-label&quot; attribute on the md-icon element,\n                                its value will be used as-is. If you do not, the md-icon component will\n                                attempt to set the aria-label value from one of these sources:</p>\n                            <ul class="list">\n                                <li>The <code>alt</code> attribute</li>\n                                <li>The <code>fontIcon</code> input</li>\n                                <li>The name of the icon from the <code>svgIcon</code> input (not including\n                                    any namespace)</li>\n                                <li>The text content of the component (for ligature icons)</li>\n                            </ul>\n                            \n<h3 id="api-summary"><a class="header-link" href="#api-summary"></a>API Summary</h3>\n\n                            <p>md-icon Properties:</p>\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Type</th>\n                                        <th>Description</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td><code>svgSrc</code>\n                                        </td>\n                                        <td>string</td>\n                                        <td>The URL of the SVG icon to display</td>\n                                    </tr>\n                                    <tr>\n                                        <td><code>svgIcon</code>\n                                        </td>\n                                        <td>string</td>\n                                        <td>The name (and possibly namespace) of an icon previously registered with <code>MdIconRegistry.addSvgIcon</code> or <code>MdIconRegistry.addSvgIconInNamespace</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td><code>fontSet</code>\n                                        </td>\n                                        <td>string</td>\n                                        <td>The font to use to display an icon glyph. The value can be either a CSS\n                                            class name, or an alias previously defined with <code>MdIconRegistry.registerFontClassAlias</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td><code>fontIcon</code>\n                                        </td>\n                                        <td>string</td>\n                                        <td>The CSS class that identifies the specific icon to use from an icon font</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <p>MdIconRegistry methods (all methods return <code>this</code> for chaining):</p>\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Signature</th>\n                                        <th>Description</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>addSvgIcon(name: string, url: string): MdIconProvider</td>\n                                        <td>Associates an icon name with a URL in the default namespace. When an <code>md-icon</code> component\n                                            has its <code>svgIcon</code> input set to this name, the icon will be loaded\n                                            from this URL.</td>\n                                    </tr>\n                                    <tr>\n                                        <td>addSvgIconInNamespace(namespace: string, iconName: string, url: string):\n                                            MdIconProvider</td>\n                                        <td>Associates an icon name with a URL in the specified namespace.</td>\n                                    </tr>\n                                    <tr>\n                                        <td>addSvgIconSet(url: string): MdIconProvider</td>\n                                        <td>Makes the icons contained in the icon set from a URL available in the\n                                            default namespace.</td>\n                                    </tr>\n                                    <tr>\n                                        <td>addSvgIconSetInNamespace(namespace: string, url: string): MdIconProvider</td>\n                                        <td>Makes the icons contained in the icon set from a URL available in the\n                                            specified namespace.</td>\n                                    </tr>\n                                    <tr>\n                                        <td>registerFontClassAlias(alias: string, className: string): MdIconProvider</td>\n                                        <td>Associates a font alias with a CSS class. When an <code>md-icon</code> component\n                                            has its <code>fontSet</code> input set to the alias, the CSS class will be\n                                            added to the component&#39;s element. It is assumed that the user has defined\n                                            a corresponding CSS rule to set the desired font.</td>\n                                    </tr>\n                                    <tr>\n                                        <td>setDefaultFontSetClass(className: string): MdIconProvider</td>\n                                        <td>Sets the default CSS class to apply to font icons when mdFontSet is not\n                                            set.</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n</article>';
},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdInput=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(498),m=n(499),f=e.AppMdInput=function b(t){s(this,b),this.router=t};e.AppMdInput=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-button",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="mdinput"><a class="header-link" href="#mdinput"></a>mdInput</h1>\n\n    <p>Inputs are the basic input component of Material 2. The spec can be found\n        <a\n        href="https://www.google.com/design/spec/components/text-fields.html">here</a>.</p>\n    \n<h2 id="notes"><a class="header-link" href="#notes"></a>Notes</h2>\n\n    <ul class="list">\n        <li>The <code>&lt;md-input&gt;</code> component fully support two-way binding\n            of <code>ngModel</code>, as if it was a normal <code>&lt;input&gt;</code>.</li>\n    </ul>\n    \n<h2 id="type"><a class="header-link" href="#type"></a>Type</h2>\n\n    <p>At the time of writing this README, the <code>[type]</code> attribute is\n        copied to the actual <code>&lt;input&gt;</code> element in the <code>&lt;md-input&gt;</code>.</p>\n    <p>The valid <code>type</code> attribute values are any supported by your browser,\n        with the exception of <code>file</code>, <code>checkbox</code> and <code>radio</code>.\n        File inputs aren&#39;t supported for now, while check boxes and radio buttons\n        have their own components.</p>\n    \n<h2 id="prefix-and-suffix"><a class="header-link" href="#prefix-and-suffix"></a>Prefix and Suffix</h2>\n\n    <p>You can include HTML before, and after the input tag, as prefix or suffix.\n        It will be underlined as per the Material specification, and clicking it\n        will focus the input.</p>\n    <p>To add a prefix, use the <code>md-prefix</code> attribute on the element.\n        Similarly, to add a suffix, use the <code>md-suffix</code> attribute. For\n        example, in a template:</p>\n    \n<h4 id="example"><a class="header-link" href="#example"></a>Example</h4>\n\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"amount"</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"end"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">md-prefix</span>&gt;</span>$&amp;nbsp;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">md-suffix</span>&gt;</span>.00<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-input</span>&gt;</span></code></pre>\n    <p>Will result in this:</p>\n    <p class="img-container">\n        <img src="https://material.angularjs.org/material2_assets/input/prefix-suffix.png">\n    </p>\n    \n<h2 id="hint-labels"><a class="header-link" href="#hint-labels"></a>Hint Labels</h2>\n\n    <p>Hint labels are the labels that shows the underline. You can have up to\n        two hint labels; one on the <code>start</code> of the line (left in an LTR\n        language, right in RTL), or one on the <code>end</code>.</p>\n    <p>You specify a hint-label in one of two ways; either using the <code>hintLabel</code> attribute,\n        or using an <code>&lt;md-hint&gt;</code> directive in the <code>&lt;md-input&gt;</code>,\n        which takes an <code>align</code> attribute containing the side. The attribute\n        version is assumed to be at the <code>start</code>.</p>\n    <p>Specifying a side twice will result in an exception during initialization.</p>\n    <h4\n    id="example-1"><a class="header-link" href="#example-1"></a>Example</h4>\n        <p>A simple character counter can be made like the following:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Character count (100 max)"</span> <span class="hljs-attr">maxLength</span>=<span class="hljs-string">"100"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo-full-width"</span>\n          <span class="hljs-attr">value</span>=<span class="hljs-string">"Hello world. How are you?"</span>\n          #<span class="hljs-attr">characterCountHintExample</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-hint</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"end"</span>&gt;</span>{{characterCountHintExample.characterCount} }  / 100<span class="hljs-tag">&lt;/<span class="hljs-name">md-hint</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-input</span>&gt;</span></code></pre>\n        <p\n        class="img-container">\n            <img src="https://material.angularjs.org/material2_assets/input/character-count.png">\n            </p>\n            \n<h2 id="divider-color"><a class="header-link" href="#divider-color"></a>Divider Color</h2>\n\n            <p>The divider (line under the <code>&lt;md-input&gt;</code> content) color\n                can be changed by using the <code>dividerColor</code> attribute. A value\n                of <code>primary</code> is the default and will correspond to your theme\n                primary color. Alternatively, you can specify <code>accent</code> or <code>warn</code>.</p>\n            <h4\n            id="example-2"><a class="header-link" href="#example-2"></a>Example</h4>\n                <p>^((please not that this example has been doctored to show the colors;\n                    they would normally show only on focus)^)</p>\n                <p class="img-container">\n                    <img src="https://material.angularjs.org/material2_assets/input/divider-colors.png">\n                </p>\n                \n<h2 id="labelling"><a class="header-link" href="#labelling"></a>Labelling</h2>\n\n                <p>You can label the <code>&lt;md-input&gt;</code> as you would a regular <code>&lt;input&gt;</code>.</p>\n                <h2\n                id="full-forms"><a class="header-link" href="#full-forms"></a>Full Forms</h2>\n                    <p>You can make a full form using inputs, and it will support autofill natively.</p>\n                    <h4\n                    id="example-3"><a class="header-link" href="#example-3"></a>Example</h4>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-card</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo-card demo-basic"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-toolbar</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"primary"</span>&gt;</span>Basic<span class="hljs-tag">&lt;/<span class="hljs-name">md-toolbar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-card-content</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">md-input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo-full-width"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Company (disabled)"</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"Google"</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">md-input</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 100%"</span> <span class="hljs-attr">cellspacing</span>=<span class="hljs-string">"0"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">md-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"First name"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 100%"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">md-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Long Last Name That Will Be Truncated"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 100%"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">md-input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo-full-width"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Address"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"1600 Amphitheatre Pkway"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-input</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">md-input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo-full-width"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Address 2"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-input</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 100%"</span> <span class="hljs-attr">cellspacing</span>=<span class="hljs-string">"0"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">md-input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo-full-width"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"City"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">md-input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo-full-width"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"State"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">md-input</span> #<span class="hljs-attr">postalCode</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo-full-width"</span> <span class="hljs-attr">maxLength</span>=<span class="hljs-string">"5"</span>\n                      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Postal Code"</span>\n                      <span class="hljs-attr">value</span>=<span class="hljs-string">"94043"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">md-hint</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"end"</span>&gt;</span>{{postalCode.characterCount} }  / 5<span class="hljs-tag">&lt;/<span class="hljs-name">md-hint</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">md-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">md-card-content</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-card</span>&gt;</span></code></pre>\n                        <p>Will result in this:</p>\n                        <p class="img-container">\n                            <img src="https://material.angularjs.org/material2_assets/input/full-form.png">\n                        </p>\n</article>'},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdList=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(501),m=n(502),f=e.AppMdList=function b(t){s(this,b),this.router=t};e.AppMdList=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-list",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="md-list"><a class="header-link" href="#md-list"></a>md-list</h1>\n\n    <p><code>md-list</code> is a container component that wraps and formats a\n        series of line items. As the base list component, it provides Material\n        Design styling, but no behavior of its own.</p>\n    \n<h2 id="usage"><a class="header-link" href="#usage"></a>Usage</h2>\n\n    \n<h3 id="simple-list"><a class="header-link" href="#simple-list"></a>Simple list</h3>\n\n    <p>To use <code>md-list</code>, first import the list directives and add them\n        to your component&#39;s directives array:</p>\n<pre class="hljs"><code>@Component({\n  ...\n  directives: [MD_LIST_DIRECTIVES]\n} )</code></pre>\n    <p>In your template, create an <code>md-list</code> element and wrap each of\n        your items in an <code>md-list-item</code> tag.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-list</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-list-item</span>&gt;</span> Pepper <span class="hljs-tag">&lt;/<span class="hljs-name">md-list-item</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-list-item</span>&gt;</span> Salt <span class="hljs-tag">&lt;/<span class="hljs-name">md-list-item</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-list-item</span>&gt;</span> Paprika <span class="hljs-tag">&lt;/<span class="hljs-name">md-list-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-list</span>&gt;</span></code></pre>\n    <p>Output:</p>\n    <p class="img-container">\n        <img src="https://material.angularjs.org/material2_assets/list/basic-list.png">\n    </p>\n    \n<h3 id="multi-line-lists"><a class="header-link" href="#multi-line-lists"></a>Multi-line lists</h3>\n\n    <p>If your list requires multiple lines per list item, annotate each line\n        with an <code>md-line</code> attribute. You can use whichever heading tag\n        is appropriate for your DOM hierarchy (doesn&#39;t have to be <code>h3</code>),\n        as long as the <code>md-line</code> attribute is included.</p>\n<pre class="hljs"><code><span class="hljs-comment">&lt;!-- two line list --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">md-list</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-list-item</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">"let message of messages"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">md-line</span>&gt;</span> {{message.from} }  <span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">md-line</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span> {{message.subject} }  <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo-2"</span>&gt;</span> -- {{message.message} }  <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">md-list-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-list</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- three line list --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">md-list</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-list-item</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">"let message of messages"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">md-line</span>&gt;</span> {{message.from} }  <span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">md-line</span>&gt;</span> {{message.subject} }  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">md-line</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo-2"</span>&gt;</span> {{message.message} }  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">md-list-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-list</span>&gt;</span></code></pre>\n    <p>Two line list output:</p>\n    <p class="img-container">\n        <img src="https://material.angularjs.org/material2_assets/list/two-line-list.png">\n    </p>\n    <p>Three line list output:</p>\n    <p class="img-container">\n        <img src="https://material.angularjs.org/material2_assets/list/three-line-list.png">\n    </p>\n    \n<h3 id="lists-with-avatars"><a class="header-link" href="#lists-with-avatars"></a>Lists with avatars</h3>\n\n    <p>To include an avatar, add an image tag with an <code>md-list-avatar</code> attribute.</p>\n    <pre\n    class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-list</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-list-item</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">"let message of messages"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">md-list-avatar</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"..."</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"..."</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">md-line</span>&gt;</span> {{message.from} }  <span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">md-line</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span> {{message.subject} }  <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo-2"</span>&gt;</span> -- {{message.message} }  <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">md-list-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-list</span>&gt;</span></code>\n        </pre>\n        <p>Output:</p>\n        <p class="img-container">\n            <img src="https://material.angularjs.org/material2_assets/list/list-with-avatar-2.png">\n        </p>\n        \n<h3 id="dense-lists"><a class="header-link" href="#dense-lists"></a>Dense lists</h3>\n\n        <p>Lists are also available in &quot;dense layout&quot; mode, which shrinks\n            the font size and height of the list to suit UIs that may need to display\n            more information. To enable this mode, add a <code>dense</code> attribute\n            to the main <code>md-list</code> tag.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-list</span> <span class="hljs-attr">dense</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-list-item</span>&gt;</span> Pepper <span class="hljs-tag">&lt;/<span class="hljs-name">md-list-item</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-list-item</span>&gt;</span> Salt <span class="hljs-tag">&lt;/<span class="hljs-name">md-list-item</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-list-item</span>&gt;</span> Paprika <span class="hljs-tag">&lt;/<span class="hljs-name">md-list-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-list</span>&gt;</span></code></pre>\n        <p>Output:</p>\n        <p class="img-container">\n            <img src="https://material.angularjs.org/material2_assets/list/dense-list.png">\n        </p>\n        \n<h3 id="lists-with-multiple-sections"><a class="header-link" href="#lists-with-multiple-sections"></a>Lists with multiple sections</h3>\n\n        <p>You can add a subheader to a list by annotating a heading tag with an <code>md-subheader</code> attribute.\n            To add a divider, use <code>&lt;md-divider&gt;</code> tags.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-list</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">md-subheader</span>&gt;</span>Folders<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-list-item</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">"let folder of folders"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span> <span class="hljs-attr">md-list-avatar</span>&gt;</span>folder<span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">md-line</span>&gt;</span>{{folder.name} } <span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">md-line</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo-2"</span>&gt;</span> {{folder.updated} }  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">md-list-item</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-divider</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">md-subheader</span>&gt;</span>Notes<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">md-list-item</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">"let note of notes"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span> <span class="hljs-attr">md-list-avatar</span>&gt;</span>note<span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">md-line</span>&gt;</span>{{note.name} } <span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">md-line</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo-2"</span>&gt;</span> {{note.updated} }  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">md-list-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-list</span>&gt;</span></code></pre>\n        <p>Output:</p>\n        <p class="img-container">\n            <img src="https://material.angularjs.org/material2_assets/list/subheader-list.png">\n        </p>\n        \n<h3 id="navigation-lists"><a class="header-link" href="#navigation-lists"></a>Navigation lists</h3>\n\n        <p>Use <code>md-nav-list</code> tags for navigation lists (i.e. lists that\n            have anchor tags).</p>\n        <p>Simple nav lists can tack an <code>md-list-item</code> attribute onto the\n            anchor tag itself:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-nav-list</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">md-list-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"..."</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">"let link of links"</span>&gt;</span> {{ link } }  <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-nav-list</span>&gt;</span></code></pre>\n        <p>If you require a more complex nav list (e.g. with more than one target\n            per item), wrap your anchor tag in an <code>md-list-item</code> element.</p>\n        <pre\n        class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-nav-list</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-list-item</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">"let link of links"</span>&gt;</span>\n     <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">md-line</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"..."</span>&gt;</span>{{ link } } <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>\n     <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-icon-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"showInfo(link)"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">md-icon</span>&gt;</span>info<span class="hljs-tag">&lt;/<span class="hljs-name">md-icon</span>&gt;</span>\n     <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">md-list-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-nav-list</span>&gt;</span></code>\n            </pre>\n            <h3 id="lists-with-secondary-text"><a class="header-link" href="#lists-with-secondary-text"></a>Lists with secondary text</h3>\n\n            <p>Secondary text styling will be part of a broader typography module to\n                <a\n                href="https://github.com/angular/material2/issues/205">come later</a>, and won’t be implemented as part of this component specifically.\n                    Gray text in the examples above comes from a &quot;demo-2&quot; class added\n                    manually by the demo.</p>\n</article>'},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdProgressBar=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(504),m=n(505),f=e.AppMdProgressBar=function b(t){s(this,b),this.router=t};e.AppMdProgressBar=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-progress-bar",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="md-progress-bar"><a class="header-link" href="#md-progress-bar"></a>md-progress-bar</h1>\n\n    <p><code>md-progress-bar</code> is a component for indicating progress and\n        activity, matching the spec of\n<a href="https://www.google.com/design/spec/components/progress-activity.html">Material Design Progress &amp; Activity</a>.</p>\n    <h3\n    id="progress-modes"><a class="header-link" href="#progress-modes"></a>Progress Modes</h3>\n        <p>There are four modes:</p>\n        <ol class="list">\n            <li>Determinate - <code>&lt;md-progress-bar mode=&quot;determinate&quot;&gt;</code>\n                <ul\n                class="list">\n                    <li>Indicates how long an operation will take when the percentage complete\n                        is detectable.</li>\n                    </ul>\n            </li>\n            <li>Indeterminate - <code>&lt;md-progress-bar mode=&quot;indeterminate&quot;&gt;</code>\n                <ul\n                class="list">\n                    <li>Indicates the user must wait while something finishes when it’s not necessary\n                        or possible to indicate how long it will take.</li>\n                    </ul>\n            </li>\n            <li>Buffer - <code>&lt;md-progress-bar mode=&quot;buffer&quot;&gt;</code>\n                <ul\n                class="list">\n                    <li>Indicates how long an operation will take when the percentage complete\n                        is detectable, also provides a value of the preloading for the operation.</li>\n                    </ul>\n            </li>\n            <li>Query - <code>&lt;md-progress-bar mode=&quot;query&quot;&gt;</code>\n                <ul\n                class="list">\n                    <li>Indicates the user must wait while something finishes when it is not yet\n                        possible to indicate how long it will take, but will be possible. Once\n                        possible, the progress mode should be moved to buffer or determinate.</li>\n                    </ul>\n            </li>\n        </ol>\n        <p>Example:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-progress-bar</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">"determinate"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"myValue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-progress-bar</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">md-progress-bar</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">"indeterminate"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-progress-bar</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">md-progress-bar</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">"buffer"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"myValue"</span> <span class="hljs-attr">bufferValue</span>=<span class="hljs-string">"myBufferValue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-progress-bar</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">md-progress-bar</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">"query"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-progress-bar</span>&gt;</span></code></pre>\n        <h3\n        id="theming"><a class="header-link" href="#theming"></a>Theming</h3>\n            <p>All progress indicators can be themed to match your &quot;primary&quot;\n                palette, your &quot;accent&quot; palette, or your &quot;warn&quot; palette\n                using the appropriate class.</p>\n            <p>Example:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-progress-bar</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">"indeterminate"</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"primary"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-progress-bar</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">md-progress-bar</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">"indeterminate"</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"accent"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-progress-bar</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">md-progress-bar</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">"indeterminate"</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"warn"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-progress-bar</span>&gt;</span></code></pre>\n            <h3\n            id="accessibility"><a class="header-link" href="#accessibility"></a>Accessibility</h3>\n                <ul\n                class="list">\n                    <li>ARIA attributes are applied to the indicator defining the valuemin, valuemax\n                        and valuenow attributes.</li>\n                    </ul>\n                    \n<h3 id="api-summary"><a class="header-link" href="#api-summary"></a>API Summary</h3>\n\n                    <p>Properties:</p>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Type</th>\n                                <th>Description</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td><code>color</code>\n                                </td>\n                                <td>`&quot;primary&quot;</td>\n                                <td>&quot;accent&quot;</td>\n                                <td>&quot;warn&quot;`</td>\n                                <td>The color palette of the progress indicator</td>\n                            </tr>\n                            <tr>\n                                <td><code>mode</code>\n                                </td>\n                                <td>`&quot;determinate&quot;</td>\n                                <td>&quot;indeterminate&quot;</td>\n                                <td>&quot;buffer&quot;</td>\n                                <td>&quot;query&quot;`</td>\n                                <td>The mode of the progress indicator</td>\n                            </tr>\n                            <tr>\n                                <td><code>value</code>\n                                </td>\n                                <td>number</td>\n                                <td>The current progress percentage for determinate indicators</td>\n                            </tr>\n                            <tr>\n                                <td><code>bufferValue</code>\n                                </td>\n                                <td>number</td>\n                                <td>The current progress percentage for buffer secondary indicators</td>\n                            </tr>\n                        </tbody>\n                    </table>\n</article>';
},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdProgressCircle=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(507),m=n(508),f=e.AppMdProgressCircle=function b(t){s(this,b),this.router=t};e.AppMdProgressCircle=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-progress-circle",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="md-progress-circle"><a class="header-link" href="#md-progress-circle"></a>md-progress-circle</h1>\n\n    <p><code>md-progress-circle</code> is a component for indicating progress\n        and activity, matching the spec of\n<a href="https://www.google.com/design/spec/components/progress-activity.html">Material Design Progress &amp; Activity</a>.</p>\n    <h3\n    id="progress-modes"><a class="header-link" href="#progress-modes"></a>Progress Modes</h3>\n        <p>There are two modes:</p>\n        <ol class="list">\n            <li>Determinate - <code>&lt;md-progress-circle mode=&quot;determinate&quot;&gt;</code>\n                <ul\n                class="list">\n                    <li>Indicates how long an operation will take when the percentage complete\n                        is detectable.</li>\n                    </ul>\n            </li>\n            <li>Indeterminate - <code>&lt;md-progress-circle mode=&quot;indeterminate&quot;&gt;</code> or <code>&lt;md-spinner&gt;</code>\n                <ul\n                class="list">\n                    <li>Indicates the user must wait while something finishes when it’s not necessary\n                        or possible to indicate how long it will take.</li>\n                    </ul>\n            </li>\n        </ol>\n        <p>Example:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-progress-circle</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">"determinate"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"myValue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-progress-circle</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">md-progress-circle</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">"indeterminate"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-progress-circle</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">md-spinner</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-spinner</span>&gt;</span></code></pre>\n        <h3\n        id="theming"><a class="header-link" href="#theming"></a>Theming</h3>\n            <p>All progress indicators can be themed to match your &quot;primary&quot;\n                palette, your &quot;accent&quot; palette, or your &quot;warn&quot; palette\n                using the appropriate class.</p>\n            <p>Example:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-progress-circle</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">"indeterminate"</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"primary"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-progress-circle</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">md-progress-circle</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">"indeterminate"</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"accent"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-progress-circle</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">md-progress-circle</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">"indeterminate"</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"warn"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">md-progress-circle</span>&gt;</span></code></pre>\n            <h3\n            id="accessibility"><a class="header-link" href="#accessibility"></a>Accessibility</h3>\n                <ul\n                class="list">\n                    <li>ARIA attributes are applied to the indicator defining the valuemin, valuemax\n                        and valuenow attributes.</li>\n                    </ul>\n                    \n<h3 id="upcoming-work"><a class="header-link" href="#upcoming-work"></a>Upcoming work</h3>\n\n                    <ul class="list">\n                        <li>Adding ARIA attribute for progressbar &quot;for&quot;.</li>\n                    </ul>\n                    \n<h3 id="api-summary"><a class="header-link" href="#api-summary"></a>API Summary</h3>\n\n                    <p>Properties:</p>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Type</th>\n                                <th>Description</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td><code>color</code>\n                                </td>\n                                <td>`&quot;primary&quot;</td>\n                                <td>&quot;accent&quot;</td>\n                                <td>&quot;warn&quot;`</td>\n                                <td>The color palette of the progress indicator</td>\n                            </tr>\n                            <tr>\n                                <td><code>mode</code>\n                                </td>\n                                <td>`&quot;determinate&quot;</td>\n                                <td>&quot;indeterminate&quot;`</td>\n                                <td>The mode of the progress indicator</td>\n                            </tr>\n                            <tr>\n                                <td><code>value</code>\n                                </td>\n                                <td>number</td>\n                                <td>The current progress percentage for determinate indicators</td>\n                            </tr>\n                        </tbody>\n                    </table>\n</article>'},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdRadio=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(510),m=n(511),f=e.AppMdRadio=function b(t){s(this,b),this.router=t};e.AppMdRadio=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-radio",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="mdradio"><a class="header-link" href="#mdradio"></a>MdRadio</h1>\n\n    <p>Radio buttons allow the user to select one option from a set. Use radio\n        buttons for exclusive selection if you think that the user needs to see\n        all available options side-by-side.</p>\n    <p class="img-container">\n        <img src="https://material.angularjs.org/material2_assets/radio/radios.png"\n        alt="Preview">\n    </p>\n    \n<h3 id="examples"><a class="header-link" href="#examples"></a>Examples</h3>\n\n    <p>A basic radio group would have the following markup.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-radio-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"option_1"</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">md-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"option_2"</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">md-radio-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-radio-group</span>&gt;</span></code></pre>\n    <p>A dynamic example, populated from a <code>data</code> variable:</p>\n    <pre\n    class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-radio-group</span> [(<span class="hljs-attr">value</span>)]=<span class="hljs-string">"groupValue"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-radio-button</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">"let d of data"</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"d.value"</span>&gt;</span>\n    {{d.label} } \n  <span class="hljs-tag">&lt;/<span class="hljs-name">md-radio-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-radio-group</span>&gt;</span></code>\n        </pre>\n        <p>A dynamic example for use inside a form showing support for <code>[(ngModel)]</code>:</p>\n        <pre\n        class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">"chosenOption"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-radio-button</span> *<span class="hljs-attr">ngFor</span>=<span class="hljs-string">"let o of options"</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">"o.value"</span>&gt;</span>\n    {{o.label} } \n  <span class="hljs-tag">&lt;/<span class="hljs-name">md-radio-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-radio-group</span>&gt;</span></code>\n            </pre>\n            <h2 id="-md-radio-group-"><a class="header-link" href="#-md-radio-group-"></a><code>&lt;md-radio-group&gt;</code></h2>\n\n            \n<h3 id="properties"><a class="header-link" href="#properties"></a>Properties</h3>\n\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Description</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td><code>selected</code>\n                        </td>\n                        <td><code>MdRadioButton</code>\n                        </td>\n                        <td>The currently selected button.</td>\n                    </tr>\n                    <tr>\n                        <td><code>value</code>\n                        </td>\n                        <td><code>any</code>\n                        </td>\n                        <td>The current value for this group.</td>\n                    </tr>\n                    <tr>\n                        <td><code>disabled</code>\n                        </td>\n                        <td><code>boolean</code>\n                        </td>\n                        <td>Whether the group is disabled.</td>\n                    </tr>\n                </tbody>\n            </table>\n            <p>When selection is changed, an event is emitted from the <code>change</code> EventEmitter\n                property.</p>\n            \n<h3 id="notes"><a class="header-link" href="#notes"></a>Notes</h3>\n\n            <p>The <code>md-radio-group</code> component has no button initially selected.</p>\n            <h2\n            id="-md-radio-button-"><a class="header-link" href="#-md-radio-button-"></a><code>&lt;md-radio-button&gt;</code>\n                </h2>\n                \n<h3 id="properties-1"><a class="header-link" href="#properties-1"></a>Properties</h3>\n\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name (attribute)</th>\n                            <th>Type</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td><code>id</code>\n                            </td>\n                            <td><code>string</code>\n                            </td>\n                            <td>The unique ID of this radio button.</td>\n                        </tr>\n                        <tr>\n                            <td><code>name</code>\n                            </td>\n                            <td><code>string</code>\n                            </td>\n                            <td>Group name, defaults to parent radio group if present.</td>\n                        </tr>\n                        <tr>\n                            <td><code>value</code>\n                            </td>\n                            <td><code>any</code>\n                            </td>\n                            <td>The value of this radio button.</td>\n                        </tr>\n                        <tr>\n                            <td><code>checked</code>\n                            </td>\n                            <td><code>boolean</code>\n                            </td>\n                            <td>Whether the radio is checked.</td>\n                        </tr>\n                        <tr>\n                            <td><code>disabled</code>\n                            </td>\n                            <td><code>boolean</code>\n                            </td>\n                            <td>Whether the radio is disabled.</td>\n                        </tr>\n                        <tr>\n                            <td><code>aria-label</code>\n                            </td>\n                            <td><code>string</code>\n                            </td>\n                            <td>Used to set the <code>aria-label</code> attribute of the underlying input\n                                element.</td>\n                        </tr>\n                        <tr>\n                            <td><code>aria-labelledby</code>\n                            </td>\n                            <td><code>string</code>\n                            </td>\n                            <td>Used to set the <code>aria-labelledby</code> attribute of the underlying\n                                input element.</td>\n                        </tr>\n                    </tbody>\n                </table>\n<pre class="hljs"><code>                             <span class="hljs-keyword">If</span> provided, this attribute takes precedence <span class="hljs-keyword">as</span> the element\'<span class="hljs-keyword">s</span> text alternative. |</code></pre>\n                <p>When checked, an event is emitted from the <code>change</code> EventEmitter\n                    property.</p>\n                \n<h3 id="notes-1"><a class="header-link" href="#notes-1"></a>Notes</h3>\n\n                <ul class="list">\n                    <li>The <code>md-radio-button</code> component by default uses the accent color\n                        from the theme palette.</li>\n                </ul>\n</article>'},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdSidenav=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(513),m=n(514),f=e.AppMdSidenav=function b(t){s(this,b),this.router=t};e.AppMdSidenav=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-sidenav",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="mdsidenav"><a class="header-link" href="#mdsidenav"></a>MdSidenav</h1>\n\n    <p>MdSidenav is the side navigation component for Material 2. It is composed\n        of two components; <code>&lt;md-sidenav-layout&gt;</code> and <code>&lt;md-sidenav&gt;</code>.</p>\n    <h2\n    id="screenshots"><a class="header-link" href="#screenshots"></a>Screenshots</h2>\n        <p class="img-container">\n            <img src="https://material.angularjs.org/material2_assets/sidenav-example.png">\n        </p>\n        \n<h2 id="-md-sidenav-layout-"><a class="header-link" href="#-md-sidenav-layout-"></a><code>&lt;md-sidenav-layout&gt;</code></h2>\n\n        <p>The parent component. Contains the code necessary to coordinate one or\n            two sidenav and the backdrop.</p>\n        \n<h3 id="properties"><a class="header-link" href="#properties"></a>Properties</h3>\n\n        <table>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Description</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><code>start</code>\n                    </td>\n                    <td>The start aligned <code>MdSidenav</code> instance, or <code>null</code> if\n                        none is specified. In LTR direction, this is the sidenav shown on the left\n                        side. In RTL direction, it will show on the right. There can only be one\n                        sidenav on either side.</td>\n                </tr>\n                <tr>\n                    <td><code>end</code>\n                    </td>\n                    <td>The end aligned <code>MdSidenav</code> instance, or <code>null</code> if none\n                        is specified. This is the sidenav opposing the <code>start</code> sidenav.\n                        There can only be one sidenav on either side.</td>\n                </tr>\n            </tbody>\n        </table>\n        \n<h2 id="-md-sidenav-"><a class="header-link" href="#-md-sidenav-"></a><code>&lt;md-sidenav&gt;</code></h2>\n\n        <p>The sidenav panel.</p>\n        \n<h3 id="bound-properties"><a class="header-link" href="#bound-properties"></a>Bound Properties</h3>\n\n        <table>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Type</th>\n                    <th>Description</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><code>align</code>\n                    </td>\n                    <td>`&quot;start&quot;</td>\n                    <td>&quot;end&quot;`</td>\n                    <td>The alignment of this sidenav. In LTR direction, <code>&quot;start&quot;</code> will\n                        be shown on the left, <code>&quot;end&quot;</code> on the right. In RTL,\n                        it is reversed. <code>&quot;start&quot;</code> is used by default. An exception\n                        will be thrown if there are more than 1 sidenav on either side.</td>\n                </tr>\n                <tr>\n                    <td><code>mode</code>\n                    </td>\n                    <td>`&quot;over&quot;</td>\n                    <td>&quot;push&quot;</td>\n                    <td>&quot;side&quot;`</td>\n                    <td>The mode or styling of the sidenav, default being <code>&quot;over&quot;</code>.\n                        With <code>&quot;over&quot;</code> the sidenav will appear above the content,\n                        and a backdrop will be shown. With <code>&quot;push&quot;</code> the sidenav\n                        will push the content of the <code>&lt;md-sidenav-layout&gt;</code> to the\n                        side, and show a backdrop over it. <code>&quot;side&quot;</code> will resize\n                        the content and keep the sidenav opened. Clicking the backdrop will close\n                        sidenavs that do not have <code>mode=&quot;side&quot;</code>.</td>\n                </tr>\n                <tr>\n                    <td><code>opened</code>\n                    </td>\n                    <td><code>boolean</code>\n                    </td>\n                    <td>Whether or not the sidenav is opened. Use this binding to open/close the\n                        sidenav.</td>\n                </tr>\n            </tbody>\n        </table>\n        \n<h3 id="events"><a class="header-link" href="#events"></a>Events</h3>\n\n        <table>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Description</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><code>open-start</code>\n                    </td>\n                    <td>Emitted when the sidenav is starting opening. This should only be used\n                        to coordinate animations.</td>\n                </tr>\n                <tr>\n                    <td><code>close-start</code>\n                    </td>\n                    <td>Emitted when the sidenav is starting closing. This should only be used\n                        to coordinate animations.</td>\n                </tr>\n                <tr>\n                    <td><code>open</code>\n                    </td>\n                    <td>Emitted when the sidenav is done opening. Use this for, e.g., setting\n                        focus on controls or updating state.</td>\n                </tr>\n                <tr>\n                    <td><code>close</code>\n                    </td>\n                    <td>Emitted when the sidenav is done closing.</td>\n                </tr>\n            </tbody>\n        </table>\n        \n<h3 id="methods"><a class="header-link" href="#methods"></a>Methods</h3>\n\n        <table>\n            <thead>\n                <tr>\n                    <th>Signature</th>\n                    <th>Description</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><code>open(): Promise&lt;void&gt;</code>\n                    </td>\n                    <td>Open the sidenav. Equivalent to <code>opened = true</code>. Returns a promise\n                        that will resolve when the animation completes, or be rejected if the animation\n                        was cancelled.</td>\n                </tr>\n                <tr>\n                    <td><code>close(): Promise&lt;void&gt;</code>\n                    </td>\n                    <td>Close the sidenav. Equivalent to <code>opened = false</code>. Returns a\n                        promise that will resolve when the animation completes, or be rejected\n                        if the animation was cancelled.</td>\n                </tr>\n                <tr>\n                    <td><code>toggle(): Promise&lt;void&gt;</code>\n                    </td>\n                    <td>Toggle the sidenav. This is equivalent to <code>opened = !opened</code>.\n                        Returns a promise that will resolve when the animation completes, or be\n                        rejected if the animation was cancelled.</td>\n                </tr>\n            </tbody>\n        </table>\n        \n<h3 id="notes"><a class="header-link" href="#notes"></a>Notes</h3>\n\n        <p>The <code>&lt;md-sidenav&gt;</code> will resize based on its content. You\n            can also set its width in CSS, like so:</p>\n<pre class="hljs"><code><span class="hljs-selector-tag">md-sidenav</span> {\n  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;\n} </code></pre>\n        <p>Try to avoid percent based width as <code>resize</code> events are not (yet)\n            supported.</p>\n        \n<h2 id="examples"><a class="header-link" href="#examples"></a>Examples</h2>\n\n        <p>Here&#39;s a simple example of using the sidenav:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">app</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-sidenav-layout</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">md-sidenav</span> #<span class="hljs-attr">start</span> (<span class="hljs-attr">open</span>)=<span class="hljs-string">"mybutton.focus()"</span>&gt;</span>\n      Start Sidenav.\n      <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-button</span> #<span class="hljs-attr">mybutton</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"start.close()"</span>&gt;</span>Close<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">md-sidenav</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">md-sidenav</span> #<span class="hljs-attr">end</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"end"</span>&gt;</span>\n      End Sidenav.\n      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">md-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">"end.close()"</span>&gt;</span>Close<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">md-sidenav</span>&gt;</span>\n\n    My regular content. This will be moved into the proper DOM at runtime.\n  <span class="hljs-tag">&lt;/<span class="hljs-name">md-sidenav-layout</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">app</span>&gt;</span></code></pre>\n</article>'},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdSlideToggle=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(516),m=n(517),f=e.AppMdSlideToggle=function b(t){s(this,b),this.router=t};e.AppMdSlideToggle=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-slide-toggle",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="mdslidetoggle"><a class="header-link" href="#mdslidetoggle"></a>MdSlideToggle</h1>\n\n    <p><code>MdSlideToggle</code> is a two-state control, which can be also called <code>switch</code>\n    </p>\n    \n<h3 id="screenshots"><a class="header-link" href="#screenshots"></a>Screenshots</h3>\n\n    <p class="img-container">\n        <img src="https://material.angularjs.org/material2_assets/slide-toggle/toggles.png"\n        alt="image">\n    </p>\n    \n<h2 id="-md-slide-toggle-"><a class="header-link" href="#-md-slide-toggle-"></a><code>&lt;md-slide-toggle&gt;</code></h2>\n\n    \n<h3 id="bound-properties"><a class="header-link" href="#bound-properties"></a>Bound Properties</h3>\n\n    <table>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Description</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td><code>disabled</code>\n                </td>\n                <td>boolean</td>\n                <td>Disables the <code>slide-toggle</code>\n                </td>\n            </tr>\n            <tr>\n                <td><code>color</code>\n                </td>\n                <td>`&quot;primary&quot;</td>\n                <td>&quot;accent&quot;</td>\n                <td>&quot;warn&quot;`</td>\n                <td>The color palette of the <code>slide-toggle</code>\n                </td>\n            </tr>\n            <tr>\n                <td><code>checked</code>\n                </td>\n                <td>boolean</td>\n                <td>Sets the value of the <code>slide-toggle</code>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    \n<h3 id="events"><a class="header-link" href="#events"></a>Events</h3>\n\n    <table>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Description</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td><code>change</code>\n                </td>\n                <td>boolean</td>\n                <td>Event will be emitted on every value change.\n                    <br/>It emits the new <code>checked</code> value.</td>\n            </tr>\n        </tbody>\n    </table>\n    \n<h3 id="examples"><a class="header-link" href="#examples"></a>Examples</h3>\n\n    <p>A basic slide-toggle would have the following markup.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-slide-toggle</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">"slideToggleModel"</span>&gt;</span>\n  Default Slide Toggle\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-slide-toggle</span>&gt;</span></code></pre>\n    <p>Slide toggle can be also disabled.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-slide-toggle</span> <span class="hljs-attr">disabled</span>&gt;</span>\n  Disabled Slide Toggle\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-slide-toggle</span>&gt;</span></code></pre>\n    <p>The <code>slide-toggle</code> can be also set to checked without a <code>ngModel</code>\n    </p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-slide-toggle</span> [<span class="hljs-attr">checked</span>]=<span class="hljs-string">"isChecked"</span>&gt;</span>\n  Input Binding\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-slide-toggle</span>&gt;</span></code></pre>\n    <p>You may also want to listen on changes of the <code>slide-toggle</code>\n        <br/>The <code>slide-toggle</code> always emits the new value to the event binding <code>(change)</code>\n    </p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-slide-toggle</span> (<span class="hljs-attr">change</span>)=<span class="hljs-string">"printValue($event)"</span>&gt;</span>\n  Prints Value on Change\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-slide-toggle</span>&gt;</span></code></pre>\n    <h2\n    id="theming"><a class="header-link" href="#theming"></a>Theming</h2>\n        <p>A slide-toggle is default using the <code>accent</code> palette for its\n            styling.</p>\n        <p>Modifying the color on a <code>slide-toggle</code> can be easily done, by\n            using the following markup.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-slide-toggle</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"primary"</span>&gt;</span>\n  Primary Slide Toggle\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-slide-toggle</span>&gt;</span></code></pre>\n        <p>The color can be also set dynamically by using a property binding.</p>\n        <pre\n        class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-slide-toggle</span> [<span class="hljs-attr">color</span>]=<span class="hljs-string">"myColor"</span>&gt;</span>\n  Dynamic Color\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-slide-toggle</span>&gt;</span></code>\n            </pre>\n</article>';
},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdTabs=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(519),m=n(520),f=e.AppMdTabs=function b(t){s(this,b),this.router=t};e.AppMdTabs=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-tabs",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="mdtabgroup"><a class="header-link" href="#mdtabgroup"></a>MdTabGroup</h1>\n\n    <p>Tab groups allow the user to organize their content by labels such that\n        only one tab is visible at any given time.</p>\n    \n<h3 id="examples"><a class="header-link" href="#examples"></a>Examples</h3>\n\n    <p>A basic tab group would have the following markup.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-tab-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">md-tab-label</span>&gt;</span>One<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">md-tab-content</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Some tab content<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">md-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">md-tab-label</span>&gt;</span>Two<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">md-tab-content</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Some more tab content<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">md-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-tab-group</span>&gt;</span></code></pre>\n    <h2\n    id="-md-tab-group-"><a class="header-link" href="#-md-tab-group-"></a><code>&lt;md-tab-group&gt;</code>\n        </h2>\n        \n<h3 id="properties"><a class="header-link" href="#properties"></a>Properties</h3>\n\n        <table>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Type</th>\n                    <th>Description</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><code>selectedIndex</code>\n                    </td>\n                    <td><code>number</code>\n                    </td>\n                    <td>The index of the currently active tab.</td>\n                </tr>\n                <tr>\n                    <td><code>focusIndex</code>\n                    </td>\n                    <td><code>number</code>\n                    </td>\n                    <td>The index of the currently active tab.</td>\n                </tr>\n            </tbody>\n        </table>\n        \n<h3 id="events"><a class="header-link" href="#events"></a>Events</h3>\n\n        <table>\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Type</th>\n                    <th>Description</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><code>focusChange</code>\n                    </td>\n                    <td><code>Event</code>\n                    </td>\n                    <td>Fired when focus changes from one label to another</td>\n                </tr>\n                <tr>\n                    <td><code>selectedChange</code>\n                    </td>\n                    <td><code>Event</code>\n                    </td>\n                    <td>Fired when the selected tab changes</td>\n                </tr>\n            </tbody>\n        </table>\n</article>'},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.AppMdToolbar=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(522),m=n(523),f=e.AppMdToolbar=function b(t){s(this,b),this.router=t};e.AppMdToolbar=f=d([(0,o.Component)({moduleId:t.id,selector:"app-md-toolbar",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="mdtoolbar"><a class="header-link" href="#mdtoolbar"></a>MdToolbar</h1>\n\n    <p><code>MdToolbar</code> is a vertical aligned bar, which can hold the application\n        title or actions.</p>\n    \n<h3 id="screenshots"><a class="header-link" href="#screenshots"></a>Screenshots</h3>\n\n    <p class="img-container">\n        <img src="https://cloud.githubusercontent.com/assets/4987015/13727769/6d952c78-e900-11e5-890a-ccfd46996812.png"\n        alt="Preview">\n    </p>\n    \n<h2 id="-md-toolbar-"><a class="header-link" href="#-md-toolbar-"></a><code>&lt;md-toolbar&gt;</code></h2>\n\n    \n<h3 id="bound-properties"><a class="header-link" href="#bound-properties"></a>Bound Properties</h3>\n\n    <table>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Description</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td><code>color</code>\n                </td>\n                <td>`&quot;primary&quot;</td>\n                <td>&quot;accent&quot;</td>\n                <td>&quot;warn&quot;`</td>\n                <td>The color palette for the toolbar</td>\n            </tr>\n        </tbody>\n    </table>\n    \n<h3 id="notes"><a class="header-link" href="#notes"></a>Notes</h3>\n\n    <p>The <code>md-toolbar</code> component will use by default the background\n        palette.</p>\n    \n<h3 id="examples"><a class="header-link" href="#examples"></a>Examples</h3>\n\n    <p>A basic toolbar would have the following markup.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-toolbar</span> [<span class="hljs-attr">color</span>]=<span class="hljs-string">"myColor"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>My Application Title<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-toolbar</span>&gt;</span></code></pre>\n    <p>Toolbars can also have multiple rows.\n        <br/>Multiple rows inside of a <code>md-toolbar</code> can be added by appending\n        as many as needed <code>&lt;md-toolbar-row&gt;</code> elements.</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-toolbar</span> [<span class="hljs-attr">color</span>]=<span class="hljs-string">"myColor"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>First Row<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-toolbar-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Second Row<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">md-toolbar-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">md-toolbar-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Third Row<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">md-toolbar-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-toolbar</span>&gt;</span></code></pre>\n    <h3\n    id="alignment"><a class="header-link" href="#alignment"></a>Alignment</h3>\n        <p>The alignment inside of a toolbar row can be easily done by using the\n            flexbox layout.\n            <br/>For example, the following markup aligns the items on the <code>right</code>.</p>\n        <p>Custom HTML</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">md-toolbar</span> <span class="hljs-attr">color</span>=<span class="hljs-string">"primary"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Application Title<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- This fills the remaining space of the current row --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"example-fill-remaining-space"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Right Aligned Text<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">md-toolbar</span>&gt;</span></code></pre>\n        <p>Custom SCSS</p>\n<pre class="hljs"><code><span class="hljs-selector-class">.example-fill-remaining-space</span> {\n  <span class="hljs-comment">// This fills the remaining space, by using flexbox. </span>\n  <span class="hljs-comment">// Every toolbar row uses a flexbox row layout.</span>\n  <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span> <span class="hljs-number">1</span> auto;\n} </code></pre>\n        <p>Output\n            <img src="https://cloud.githubusercontent.com/assets/4987015/13730760/0864894e-e959-11e5-9312-7f3cb990d80a.png"\n            alt="image">\n        </p>\n</article>'},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.A11y=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(525),m=n(526),f=e.A11y=function b(t){s(this,b),this.router=t};e.A11y=f=d([(0,o.Component)({moduleId:t.id,selector:"a11y",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="mdliveannouncer"><a class="header-link" href="#mdliveannouncer"></a>MdLiveAnnouncer</h1>\n\n    <p><code>MdLiveAnnouncer</code> is a service, which announces messages to\n        several screenreaders.</p>\n    \n<h3 id="methods"><a class="header-link" href="#methods"></a>Methods</h3>\n\n    <table>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Description</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td><code>announce(message, politeness)</code>\n                </td>\n                <td>This announces a text message to the supported screenreaders.\n                    <br>\n                    <br>The politeness parameter sets the <code>aria-live</code> attribute on the\n                    announcer element</td>\n            </tr>\n        </tbody>\n    </table>\n    \n<h3 id="examples"><a class="header-link" href="#examples"></a>Examples</h3>\n\n    <p>The service can be injected in a component.</p>\n<pre class="hljs"><code>@Component({\n  selector: <span class="hljs-string">\'my-component\'</span>\n  providers: [MdLiveAnnouncer]\n} )\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> MyComponent {\n\n <span class="hljs-keyword">constructor</span>(live: MdLiveAnnouncer) {\n   live.announce(<span class="hljs-string">"Hey Google"</span>);\n } \n\n} </code></pre>\n    <h3 id="supported-screenreaders"><a class="header-link" href="#supported-screenreaders"></a>Supported Screenreaders</h3>\n\n    <ul class="list">\n        <li>JAWS (Windows)</li>\n        <li>NVDA (Windows)</li>\n        <li>VoiceOver (OSX and iOS)</li>\n        <li>TalkBack (Android)</li>\n    </ul>\n</article>'},function(t,e,n){"use strict";function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0}),e.Portal=void 0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},o=n(1),r=n(432),i=n(470),l=n(471),c=n(472),p=n(473),d=function(t,e,n,s){var o,r=arguments.length,i=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,s);else for(var l=t.length-1;l>=0;l--)(o=t[l])&&(i=(r<3?o(i):r>3?o(e,n,i):o(e,n))||i);return r>3&&i&&Object.defineProperty(e,n,i),i},h=function(t,e){if("object"===("undefined"==typeof Reflect?"undefined":a(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=n(528),m=n(529),f=e.Portal=function b(t){s(this,b),this.router=t};e.Portal=f=d([(0,o.Component)({moduleId:t.id,selector:"portal",directives:[i.MdButton,l.MdIcon,c.MdToolbar,p.MD_SIDENAV_DIRECTIVES,r.ROUTER_DIRECTIVES],template:m,styles:[u]}),h("design:paramtypes",["function"==typeof(g="undefined"!=typeof r.Router&&r.Router)&&g||Object])],f);var g},483,function(t,e){t.exports='<article class="markdown-body">\n    <h1 id="portals"><a class="header-link" href="#portals"></a>Portals</h1>\n\n    \n<h3 id="overview"><a class="header-link" href="#overview"></a>Overview</h3>\n\n    <p>A <code>Portal</code>is a piece of UI that can be dynamically rendered\n        to an open slot on the page.</p>\n    <p>The &quot;piece of UI&quot; can be either a <code>Component</code> or a <code>TemplateRef</code>.</p>\n    <p>The &quot;open slot&quot; is a <code>PortalHost</code>.</p>\n    <p>Portals and PortalHosts are low-level building blocks that other concepts,\n        such as overlays, can be built upon.</p>\n    \n<h5 id="-portal-t-"><a class="header-link" href="#-portal-t-"></a><code>Portal&lt;T&gt;</code></h5>\n\n    <table>\n        <thead>\n            <tr>\n                <th>Method</th>\n                <th>Description</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td><code>attach(PortalHost): Promise&lt;T&gt;</code>\n                </td>\n                <td>Attaches the portal to a host.</td>\n            </tr>\n            <tr>\n                <td><code>detach(): Promise&lt;void&gt;</code>\n                </td>\n                <td>Detaches the portal from its host.</td>\n            </tr>\n            <tr>\n                <td><code>isAttached: boolean</code>\n                </td>\n                <td>Whether the portal is attached.</td>\n            </tr>\n        </tbody>\n    </table>\n    \n<h5 id="-portalhost-"><a class="header-link" href="#-portalhost-"></a><code>PortalHost</code></h5>\n\n    <table>\n        <thead>\n            <tr>\n                <th>Method</th>\n                <th>Description</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td><code>attach(Portal): Promise&lt;void&gt;</code>\n                </td>\n                <td>Attaches a portal to the host.</td>\n            </tr>\n            <tr>\n                <td><code>detach(): Promise&lt;void&gt;</code>\n                </td>\n                <td>Detaches the portal from the host.</td>\n            </tr>\n            <tr>\n                <td><code>dispose(): Promise&lt;void&gt;</code>\n                </td>\n                <td>Permanently dispose the host.</td>\n            </tr>\n            <tr>\n                <td><code>hasAttached: boolean</code>\n                </td>\n                <td>Whether a portal is attached to the host.</td>\n            </tr>\n        </tbody>\n    </table>\n    \n<h3 id="using-portals"><a class="header-link" href="#using-portals"></a>Using portals</h3>\n\n    \n<h5 id="-templateportaldirective-"><a class="header-link" href="#-templateportaldirective-"></a><code>TemplatePortalDirective</code></h5>\n\n    <p>Used to get a portal from a <code>&lt;template&gt;</code>. <code>TemplatePortalDirectives</code>  <em>is</em> a <code>Portal</code>.</p>\n    <p>Usage:</p>\n<pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">portal</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>The content of this template is captured by the portal.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- OR --&gt;</span>\n\n<span class="hljs-comment">&lt;!-- This result here is identical to the syntax above --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span> *<span class="hljs-attr">portal</span>&gt;</span>\n  The content of this template is captured by the portal.\n<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre>\n    <p>A component can use <code>@ViewChild</code> or <code>@ViewChildren</code> to\n        get a reference to a\n<code>TemplatePortalDiective</code>.</p>\n    \n<h5 id="-componentportal-"><a class="header-link" href="#-componentportal-"></a><code>ComponentPortal</code></h5>\n\n    <p>Used to create a portal from a component type.</p>\n    <p>Usage:</p>\n<pre class="hljs"><code><span class="hljs-keyword">this</span>.userSettingsPortal = <span class="hljs-keyword">new</span> ComponentPortal(UserSettingsComponent);</code></pre>\n    <h5\n    id="-portalhostdirective-"><a class="header-link" href="#-portalhostdirective-"></a><code>PortalHostDirective</code>\n        </h5>\n        <p>Used to add a portal host to a template. <code>PortalHostDirective</code>  <em>is</em> a <code>PortalHost</code>.</p>\n        <p>Usage:</p>\n<pre class="hljs"><code><span class="hljs-comment">&lt;!-- Attaches the `userSettingsPortal` from the previous example. --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span> [<span class="hljs-attr">portalHost</span>]=<span class="hljs-string">"userSettingsPortal"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></code></pre>\n</article>'}]);
//# sourceMappingURL=app.74e549293ab2bd3ba8eb.js.map